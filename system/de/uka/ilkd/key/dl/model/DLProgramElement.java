/***************************************************************************
 *   Copyright (C) 2007 by Jan David Quesel                                *
 *   quesel@informatik.uni-oldenburg.de                                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
/* Generated by Together */

package de.uka.ilkd.key.dl.model;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import de.uka.ilkd.key.java.ProgramElement;
import de.uka.ilkd.key.java.ReuseableProgramElement;

/**
 * Every element that can occur in a hybrid program implements this interface.
 * 
 * @author jdq
 * @since 13.02.2007
 * 
 */
public interface DLProgramElement extends ProgramElement, Serializable, ReuseableProgramElement {
    
    /**
     * Get the annotation for this element of the specified name key (as a list of formulas).
     * @param key
     * @return
     */
    public List<Formula> getDLAnnotation(String key);
    /**
     * Set the annotation for this element of the specified name key (as a list of formulas).
     * @param key
     * @return
     */
    public void setDLAnnotation(String key, List<Formula> value);
    /**
     * Returns true if this element has an annotation for the specified name key set.
     * @param key
     */
    public boolean containsDLAnnotation(String key);
    
    /**
     * Get all annotations of this element.
     * @param key
     * @return
     */
    public Map<String, List<Formula>> getDLAnnotations();
    /**
     * Set all annotations for this element, replacing any previous annotations.
     * @param key
     * @return
     */
    public void setDLAnnotations(Map<String, List<Formula>> annotations);
}