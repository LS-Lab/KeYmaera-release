/***************************************************************************
 *   Copyright (C) 2007 by Jan David Quesel                                *
 *   quesel@informatik.uni-oldenburg.de                                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
/* Generated by Together */

package de.uka.ilkd.key.dl.model.impl;

import java.util.Map;
import java.util.WeakHashMap;

import de.uka.ilkd.key.dl.model.FreePredicate;
import de.uka.ilkd.key.logic.Name;

/** 
 * Implementation of {@link FreePredicate}. Weak hashing of the predicates is
 * done to assert that there is only one instance of this object per name.
 * @author jdq
 * @since Tue Jan 16 16:10:48 CET 2007
 */
public class FreePredicateImpl extends PredicateImpl implements FreePredicate {
	private Name name;


	private static Map < Name, FreePredicate > instances =
		new WeakHashMap < Name, FreePredicate > ();
	
	/** 
	 * Creates a new FreePredicate with the given name
	 * @param name the name of the predicate
	 */
	protected FreePredicateImpl(Name name) {
		this.name = name;
	}

	/** 
	 * Returns a FreePredicate for the given name. This method asserts that
	 * there is only one instance of this class per name.
	 *
	 * @param name the name of the FreePredicate
	 * @return a FreePredicate representing the given name
	 */
	public static FreePredicate getPredicate(String name) {
		return getPredicate(new Name(name));
	}

	/** 
	 * Returns a FreePredicate for the given name. This method asserts that
	 * there is only one instance of this class per name.
	 *
	 * @param name the name of the FreePredicate
	 * @return a FreePredicate representing the given name
	 */
	public static FreePredicate getPredicate(Name name) {
		FreePredicate result = instances.get(name);
		if (result == null) {
			result = new FreePredicateImpl(name);
			instances.put(name, result);
		}
		return result;
	}

	/**
	 * @see de.uka.ilkd.key.dl.model.Predicate#getName() getName
	 */
	public Name getElementName() {
		return name;
	}

	/**
	 * @see de.uka.ilkd.key.dl.model.Predicate#setName(java.lang.String) setName
	 */
	public void setName(Name name) {
		this.name = name;
	}

}
