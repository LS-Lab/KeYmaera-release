/*
 *	Car must stop in front of a stop sign.
 * 
 *  Invariant:
 *  - Car drives forward
 * 
 *  Safety property:
 *  - Car stops before stop sign
 */
\functions{
	R ep;			 		/* time limit for control decisions */
 	R B;					/* braking capability of the car */
 	R b;					/* minimum braking capability of the car */
	R A;					/* maximum feasible acceleration -B <= a <= A */
	R StopSign;				/* position of the stop sign */
	R u_a;					/* acceleration disturbance */
}
\programVariables{
	R p;		/* car position */
	R v;		/* car translational velocity */
	R a;		/* car translational acceleration */
	R t;		/* time */
}

\problem{  
	  v >= 0
	& A > 0
	& b > 0
	& B > b
	& ep > 0
	& 0 <= u_a & u_a < 1
	& p + v^2/(2*b*(1-u_a)) <= StopSign
      -> \[	(	(a := *; ?-B <= a & a <= -b)
      			++(?v = 0; a := 0)
				++(?p + v^2/(2*b*(1-u_a)) + (A*(1+u_a)/(b*(1-u_a)) + 1)*(A*(1+u_a)/2*ep^2 + ep*v) <= StopSign; a := *; ?-B <= a & a <= A);
				
				t := 0;	
				
				/* dynamics */
				{p' = v, v' <= a * (1 + u_a), t' = 1, t <= ep, v >= 0}
				/*@invariant(
						t >= 0,
						v <= v0 + (a*(1-u_a))*t, // for a <= 0 (in branch a := -b)
						v <= v0 + (a*(1+u_a))*t  // for a >= 0 (cut a <= 0 | a >= 0 in acceleration branch)
						 
						p - p0 <= t * (v0 + (a*(1-u_a))/2*t), // for a <= 0
						p - p0 <= t * (v0 + (a*(1+u_a))/2*t), // for a >= 0
					)*/
			)*
			@invariant(v >= 0 & p + v^2/(2*b*(1-u_a)) <= StopSign)
		\] (p <= StopSign)
}