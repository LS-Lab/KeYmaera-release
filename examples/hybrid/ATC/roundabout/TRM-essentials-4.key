\programVariables {
R x1,x2, d1,d2;
R y1,y2, e1,e2;
R z1,z2, f1,f2;
R u1,u2, g1,g2;
R om, omy, omz, omu, c1,c2;
}
/**
 * Essentials of Tangential Roundabout Maneuver (TRM) in Air Traffic Control (ATC)
 * 4 aircraft
 * @author Andre Platzer
 * @provable
 * @see "AndrÃ© Platzer and Edmund M. Clarke. Computing differential invariants of hybrid systems as fixedpoints. Formal Methods in System Design, 35(1), pages 98-120, 2009.
Sarah M. Loos, Andre Platzer, and Ligia Nistor. Adaptive cruise control: Hybrid, distributed, and now formally verified. In Michael Butler and Wolfram Schulte, editors, 17th International Symposium on Formal Methods, FM, Limerick, Ireland, Proceedings, volume 6664 of LNCS, pages 42-56. Springer, 2011.
 |)"
 */
\functions{
  R protectedzone;
}

/**
 * Provable using
 *  diff_weaken for free flight goal
 *  diff_strengthen for TRM goal with
 *    either (d2-e1=-om*(x2-y2)&d2-e2=om*(x1-y1)
 *           &e2-f1=-om*(y2-z2)&e2-f2=om*(y1-z1)
 *           &d2-f1=-om*(x2-z2)&d2-f2=om*(x1-z1)
 *           &...)
 *    or     (d1=-om*(x2-c2)&d2=om*(x1-c1)
 *           &e1=-om*(y2-c2)&e2=om*(y1-c1)
 *           &f1=-om*(z2-c2)&f2=om*(z1-c1)
 *           &g1=-om*(u2-c2)&g2=om*(u1-c1))
 */
\problem {
   (
    (x1-y1)^2 + (x2-y2)^2 >= protectedzone^2
   &(y1-z1)^2 + (y2-z2)^2 >= protectedzone^2
   &(x1-z1)^2 + (x2-z2)^2 >= protectedzone^2
   &(x1-u1)^2 + (x2-u2)^2 >= protectedzone^2
   &(y1-u1)^2 + (y2-u2)^2 >= protectedzone^2
   &(z1-u1)^2 + (z2-u2)^2 >= protectedzone^2
  ->
   \[(
       (
         om:=*;omy:=*;omz:=*;omu:=*;
         {x1'=d1,x2'=d2, d1'=-om*d2,d2'=om*d1,
          y1'=e1,y2'=e2, e1'=-omy*e2,e2'=omy*e1,
          z1'=f1,z2'=f2, f1'=-omz*f2,f2'=omz*f1,
          u1'=g1,u2'=g2, g1'=-omu*g2,g2'=omu*g1,
          ((x1-y1)^2 + (x2-y2)^2 >= protectedzone^2
          &(y1-z1)^2 + (y2-z2)^2 >= protectedzone^2
          &(x1-z1)^2 + (x2-z2)^2 >= protectedzone^2
          &(x1-u1)^2 + (x2-u2)^2 >= protectedzone^2
          &(y1-u1)^2 + (y2-u2)^2 >= protectedzone^2
          &(z1-u1)^2 + (z2-u2)^2 >= protectedzone^2)}
       )*@invariant((x1-y1)^2 + (x2-y2)^2 >= protectedzone^2
          &(y1-z1)^2 + (y2-z2)^2 >= protectedzone^2
          &(x1-z1)^2 + (x2-z2)^2 >= protectedzone^2
          &(x1-u1)^2 + (x2-u2)^2 >= protectedzone^2
          &(y1-u1)^2 + (y2-u2)^2 >= protectedzone^2
          &(z1-u1)^2 + (z2-u2)^2 >= protectedzone^2
       );
       c1:=*;c2:=*; om:=*;
       d1:=-om*(x2-c2); d2:=om*(x1-c1);
       e1:=-om*(y2-c2); e2:=om*(y1-c1);
       f1:=-om*(z2-c2); f2:=om*(z1-c1);
       g1:=-om*(u2-c2); g2:=om*(u1-c1);
       {x1'=d1,x2'=d2, d1'=-om*d2,d2'=om*d1,
        y1'=e1,y2'=e2, e1'=-om*e2,e2'=om*e1,
        z1'=f1,z2'=f2, f1'=-om*f2,f2'=om*f1,
        u1'=g1,u2'=g2, g1'=-om*g2,g2'=om*g1}
       @invariant(d1=-om*(x2-c2)&d2=om*(x1-c1)
                  &e1=-om*(y2-c2)&e2=om*(y1-c1)
                  &f1=-om*(z2-c2)&f2=om*(z1-c1)
                  &g1=-om*(u2-c2)&g2=om*(u1-c1))
    )*@invariant((x1-y1)^2 + (x2-y2)^2 >= protectedzone^2
       &(y1-z1)^2 + (y2-z2)^2 >= protectedzone^2
       &(x1-z1)^2 + (x2-z2)^2 >= protectedzone^2
       &(x1-u1)^2 + (x2-u2)^2 >= protectedzone^2
       &(y1-u1)^2 + (y2-u2)^2 >= protectedzone^2
       &(z1-u1)^2 + (z2-u2)^2 >= protectedzone^2
     )\] (
       (x1-y1)^2 + (x2-y2)^2 >= protectedzone^2
      &(y1-z1)^2 + (y2-z2)^2 >= protectedzone^2
      &(x1-z1)^2 + (x2-z2)^2 >= protectedzone^2
      &(x1-u1)^2 + (x2-u2)^2 >= protectedzone^2
      &(y1-u1)^2 + (y2-u2)^2 >= protectedzone^2
      &(z1-u1)^2 + (z2-u2)^2 >= protectedzone^2
    )
  )
}
