\settings {
"#Proof-Settings-Config-File
#Thu Jul 19 16:27:25 CEST 2012
[DLOptions]counterExampleGenerator=SMT
[DecisionProcedure]Exec=
[View]FontIndex=2
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[Z3Options]z3ElimExPrefix=true
[MathematicaOptions]eliminateFractions=false
[TacletTranslation]filename=
[Libraries]Default=/home/user/jdq/.keymaera/libraries/deprecatedRules.key-false, /home/user/jdq/.keymaera/libraries/stringRules.key-false, /home/user/jdq/.keymaera/libraries/acc.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=false
[ReduceOptions]rlcadprojonly=DEFAULT
[DLOptions]reduceOnFreshBranch=false
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[View]HideIntermediateProofsteps=false
[DLOptions]readdQuantifiers=true
[DecisionProcedure]ActiveRule=_noname_
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Orbital
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[DecisionProcedure]Timeout=600
[ReduceOptions]rlqesqsc=OFF
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]DefaultChoices=transactions-transactions\\:transactionsOn , throughout-throughout\\:toutOn , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff
[ReduceOptions]rlsimpl=ON
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=2000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DecisionProcedure]savefile=false
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[DecisionProcedure]showSMTResDialog=false
[View]MaxTooltipLines=40
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[DLOptions]solveODE=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=3000
[DLOptions]odeSolver=Orbital
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=OFF
[View]HideClosedSubtrees=false
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[DecisionProcedure]multprovers=Z3\\=true\\:Yices\\=true\\:Simplify\\=true\\:CVC3\\=true
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DLOptions]simplifyBeforeReduce=false
[Z3Options]z3Prenex=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=0
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]CexFinder=ITER_DEEP
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java-programRules\\:ODL-programRules\\:dL , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff-javacard\\:jcOn
[CohenhormanderOptions]eliminatorMode=DNF
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[ReduceOptions]rlanuexgcdnormalize=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Orbital
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[TacletTranslation]maxGeneric=2
[DLOptions]TracerStat=OFF
[TacletTranslation]saveToFile=false
[DLOptions]BuiltInArithmetic=OFF
[View]ShowWholeTaclet=false
[DLOptions]counterexampleTest=OFF
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[DecisionProcedure]WaitForAllProvers=false
[DLOptions]useODEIndFinMethods=false
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[ReduceOptions]rlnzden=ON
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[DecisionProcedure]WeakenSMTTranslation=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DLOptions]sosChecker=Built-in SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=true
[ReduceOptions]rlposden=DEFAULT
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=LAZY
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=SMT
"
}



\programVariables {
  R x1, x2, v1, v2, a1, t; 
  R B, A, eps;
}

/**
 * One Lane Two Cars
 * The follow car (car 1) must always have a lower velocity than 
 * the lead car (car 2), which maintains a constant velocity. 
 *
 * @provable(in 2 seconds, 101 Nodes, 9 Branches, 0 User Interactions)
 * @see "Sarah M. Loos, Andre Platzer, and Ligia Nistor. Adaptive cruise control: Hybrid, distributed, and now formally verified. In Michael Butler and Wolfram Schulte, editors, 17th International Symposium on Formal Methods, FM, Limerick, Ireland, Proceedings, volume 6664 of LNCS, pages 42-56. Springer, 2011."
 * 
 * Variable Definitions:
 * x1, x2 position of car 1 and car 2
 * v1, v2 velocity of car 1 and car 2
 * a1     acceleration of car 1
 * A      max acceleration 
 * B      max braking force
 * eps    max time between sensor readings
 * t      time
 */

\problem {
  (     x1 <  x2
         & v1 >= 0
         & v2 >= 0
         & v1 <= v2
         & B >  0
         & eps >  0
         & A >  0
      -> \[
           (if(v1 + A * eps <= v2)
             then
               a1 := A
             else
               if(v1 = 0)
               then
                 a1 := 0
               else
                 a1 := -(B)
               fi
             fi ;
             (t := 0 ;
               {x1' = v1, v1' = a1, x2' = v2, t' = 1, v1 >= 0, t <= eps}))*
           \] x1 <  x2)

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "7fcc7b7d28ca46b8b03bb86658dd2b68e44606f3"))

(autoModeTime "1916")

(branch "dummy ID"
(rule "imp_right" (formula "1") (nodenum "52701"))
(rule "and_left" (formula "1") (nodenum "52721"))
(rule "and_left" (formula "1") (nodenum "52737"))
(rule "and_left" (formula "1") (nodenum "52753"))
(rule "and_left" (formula "1") (nodenum "52769"))
(rule "and_left" (formula "1") (nodenum "52785"))
(rule "and_left" (formula "1") (nodenum "52801"))
(rule "loop_inv_box_quan" (formula "8") (inst "inv=v1 <= v2 & (x1 <  x2 & v1 >= 0)") (nodenum "52818"))
(branch " Invariant Initially Valid"
   (rule "replace_known_left" (formula "8") (term "1,1") (ifseqformula "2") (nodenum "52845"))
   (rule "concrete_and_3" (formula "8") (term "1") (nodenum "52858"))
   (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "1") (nodenum "52871"))
   (rule "concrete_and_3" (formula "8") (nodenum "52884"))
   (rule "close_goal" (formula "8") (ifseqformula "4") (nodenum "52897"))
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "8") (nodenum "52907"))
   (rule "all_right" (formula "8") (inst "skC=a1_1") (nodenum "52922"))
   (rule "all_right" (formula "8") (inst "skC=v1_1") (nodenum "52935"))
   (rule "all_right" (formula "8") (inst "skC=x1_1") (nodenum "52948"))
   (rule "all_right" (formula "8") (inst "skC=t_1") (nodenum "52961"))
   (rule "all_right" (formula "8") (inst "skC=x2_1") (nodenum "52974"))
   (rule "imp_right" (formula "8") (nodenum "52987"))
   (rule "and_left" (formula "1") (nodenum "53008"))
   (rule "and_left" (formula "2") (nodenum "53027"))
   (rule "close_goal" (formula "11") (ifseqformula "2") (nodenum "53046"))
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "8") (nodenum "53056"))
   (rule "all_right" (formula "8") (inst "skC=v1_2") (nodenum "53071"))
   (rule "all_right" (formula "8") (inst "skC=x1_2") (nodenum "53084"))
   (rule "all_right" (formula "8") (inst "skC=x2_2") (nodenum "53097"))
   (rule "imp_right" (formula "8") (nodenum "53110"))
   (rule "and_left" (formula "1") (nodenum "53130"))
   (rule "and_left" (formula "2") (nodenum "53146"))
   (rule "modality_split_right" (formula "11") (nodenum "53162"))
   (rule "if_then_else_right" (formula "11") (nodenum "53174"))
   (branch " v1 + A * eps <= v2"
      (builtin "Update Simplification" (formula "1") (nodenum "53210"))
      (rule "assignment_to_update_right" (formula "12") (nodenum "53223"))
      (builtin "Update Simplification" (formula "12") (nodenum "53240"))
      (rule "modality_split_right" (formula "12") (nodenum "53254"))
      (rule "assignment_to_update_right" (formula "12") (nodenum "103400"))
      (builtin "Update Simplification" (formula "12") (nodenum "103427"))
      (rule "shift_paren_and" (formula "12") (term "0,5") (nodenum "103447"))
      (rule "ODESolve_right" (formula "12") (nodenum "103469"))
      (builtin "Update Simplification" (formula "12") (nodenum "103813"))
      (rule "add_zero_left" (formula "12") (term "0,1,1,0,0,1,0") (nodenum "104011"))
      (rule "all_right" (formula "12") (inst "skC=t1_0") (nodenum "104053"))
      (rule "imp_right" (formula "12") (nodenum "104307"))
      (rule "imp_right" (formula "13") (nodenum "104351"))
      (rule "and_right" (formula "14") (nodenum "104380"))
      (branch " Case 1"
         (rule "and_right" (formula "14") (nodenum "104420"))
         (branch " Case 1"
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "104463"))
         )
         (branch " Case 2"
            (rule "all_left" (formula "1") (inst "qC=t1_0") (userinteraction) (nodenum "106649"))
            (rule "imp_left" (formula "1") (nodenum "107462"))
            (branch " Case 1"
               (rule "and_right" (formula "13") (nodenum "107497"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "107544"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "107545"))
               )
            )
            (branch " Case 2"
               (rule "and_left" (formula "1") (nodenum "107547"))
               (builtin "Eliminate Universal Quantifiers" (formula "14") (nodenum "107605"))
            )
         )
      )
      (branch " Case 2"
         (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "104491"))
      )
   )
   (branch " ! v1 + A * eps <= v2"
      (builtin "Update Simplification" (formula "1") (nodenum "53623"))
      (rule "not_left" (formula "1") (nodenum "53658"))
      (rule "shift_paren_and" (formula "12") (term "0,0,3") (nodenum "53682"))
      (rule "if_then_else_right" (formula "12") (nodenum "53702"))
      (branch " v1 = 0"
         (builtin "Update Simplification" (formula "1") (nodenum "53792"))
         (rule "assignment_to_update_right" (formula "13") (nodenum "53812"))
         (builtin "Update Simplification" (formula "13") (nodenum "53837"))
         (rule "modality_split_right" (formula "13") (nodenum "53855"))
         (rule "assignment_to_update_right" (formula "13") (nodenum "53873"))
         (builtin "Update Simplification" (formula "13") (nodenum "55774"))
         (rule "diffstrengthen" (formula "13") (inst "augment=v1 <= v2") (nodenum "66926"))
         (branch " Invariant Valid"
            (rule "diffind" (formula "13") (nodenum "70428"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "1") (nodenum "70575"))
               (builtin "Update Simplification" (formula "14") (nodenum "70610"))
               (rule "close_goal" (formula "14") (ifseqformula "3") (nodenum "70636"))
            )
            (branch " ODE Preserves Invariant"
               (builtin "Update Simplification" (formula "13") (nodenum "70637"))
               (rule "eval_literals_for" (formula "13") (term "1,0,0,0,0") (nodenum "70693"))
               (rule "concrete_impl_4" (formula "13") (term "0,0,0,0") (nodenum "70716"))
               (rule "all_right" (formula "13") (inst "skC=v1_3") (nodenum "70743"))
               (rule "all_right" (formula "13") (inst "skC=x1_3") (nodenum "70770"))
               (rule "all_right" (formula "13") (inst "skC=t_2") (nodenum "70794"))
               (rule "all_right" (formula "13") (inst "skC=x2_3") (nodenum "70815"))
               (rule "close_by_true" (formula "13") (nodenum "70832"))
            )
         )
         (branch " Augmented Invariant"
            (rule "diffind" (formula "13") (nodenum "73194"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "1") (nodenum "73441"))
               (builtin "Update Simplification" (formula "14") (nodenum "73468"))
               (rule "and_left" (formula "1") (nodenum "73501"))
               (rule "and_left" (formula "1") (nodenum "73511"))
               (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "3") (nodenum "73538"))
               (rule "concrete_and_1" (formula "14") (term "0") (nodenum "73564"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "4") (nodenum "73584"))
               (rule "concrete_and_1" (formula "14") (nodenum "73604"))
               (rule "close_goal" (formula "14") (ifseqformula "5") (nodenum "73630"))
            )
            (branch " ODE Preserves Invariant"
               (builtin "Update Simplification" (formula "13") (nodenum "73631"))
               (rule "eval_literals_for" (formula "13") (term "1,1,0,0,0,0") (nodenum "73710"))
               (rule "concrete_and_3" (formula "13") (term "1,0,0,0,0") (nodenum "73734"))
               (rule "eval_literals_for" (formula "13") (term "0,1,0,0,0,0") (nodenum "73753"))
               (rule "concrete_and_1" (formula "13") (term "1,0,0,0,0") (nodenum "73776"))
               (rule "all_right" (formula "13") (inst "skC=v1_4") (nodenum "73798"))
               (rule "all_right" (formula "13") (inst "skC=x1_4") (nodenum "73887"))
               (rule "all_right" (formula "13") (inst "skC=t_3") (nodenum "73973"))
               (rule "all_right" (formula "13") (inst "skC=x2_4") (nodenum "74056"))
               (rule "imp_right" (formula "13") (nodenum "74122"))
               (rule "and_left" (formula "1") (nodenum "74161"))
               (rule "close_goal" (formula "15") (ifseqformula "2") (nodenum "74198"))
            )
         )
      )
      (branch " ! v1 = 0"
         (builtin "Update Simplification" (formula "1") (nodenum "74199"))
         (rule "not_left" (formula "1") (nodenum "74222"))
         (rule "assignment_to_update_right" (formula "13") (nodenum "74243"))
         (builtin "Update Simplification" (formula "13") (nodenum "74272"))
         (rule "modality_split_right" (formula "13") (nodenum "74295"))
         (rule "assignment_to_update_right" (formula "13") (nodenum "74312"))
         (builtin "Update Simplification" (formula "13") (nodenum "76217"))
         (rule "diffstrengthen" (formula "13") (inst "augment=v1 <= v2") (nodenum "83064"))
         (branch " Invariant Valid"
            (rule "diffind" (formula "13") (nodenum "86574"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "1") (nodenum "86721"))
               (builtin "Update Simplification" (formula "14") (nodenum "86728"))
               (rule "close_goal" (formula "14") (ifseqformula "2") (nodenum "86739"))
            )
            (branch " ODE Preserves Invariant"
               (builtin "Update Simplification" (formula "13") (nodenum "86740"))
               (rule "all_right" (formula "13") (inst "skC=v1_5") (nodenum "86808"))
               (rule "all_right" (formula "13") (inst "skC=x1_5") (nodenum "86899"))
               (rule "all_right" (formula "13") (inst "skC=t_4") (nodenum "86987"))
               (rule "all_right" (formula "13") (inst "skC=x2_5") (nodenum "87072"))
               (rule "imp_right" (formula "13") (nodenum "87135"))
               (rule "and_left" (formula "1") (nodenum "87174"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "87222"))
            )
         )
         (branch " Augmented Invariant"
            (rule "diffstrengthen" (formula "13") (inst "augment=x1 <  x2") (nodenum "99743"))
            (branch " Invariant Valid"
               (rule "diffind" (formula "13") (nodenum "101523"))
               (branch " Invariant Initially Valid"
                  (builtin "Update Simplification" (formula "1") (nodenum "101701"))
                  (builtin "Update Simplification" (formula "14") (nodenum "101708"))
                  (rule "close_goal" (formula "14") (ifseqformula "3") (nodenum "101734"))
               )
               (branch " ODE Preserves Invariant"
                  (builtin "Update Simplification" (formula "13") (nodenum "101735"))
                  (rule "all_right" (formula "13") (inst "skC=v1_6") (nodenum "101793"))
                  (rule "all_right" (formula "13") (inst "skC=x1_6") (nodenum "101882"))
                  (rule "all_right" (formula "13") (inst "skC=t_5") (nodenum "101968"))
                  (rule "all_right" (formula "13") (inst "skC=x2_6") (nodenum "102051"))
                  (rule "imp_right" (formula "13") (nodenum "102117"))
                  (rule "and_left" (formula "1") (nodenum "102156"))
                  (rule "close_goal" (formula "15") (ifseqformula "2") (nodenum "102193"))
               )
            )
            (branch " Augmented Invariant"
               (rule "diffweaken" (formula "13") (nodenum "102195"))
               (builtin "Update Simplification" (formula "13") (nodenum "102298"))
               (rule "all_right" (formula "13") (inst "skC=v1_7") (nodenum "102370"))
               (rule "all_right" (formula "13") (inst "skC=x1_7") (nodenum "102489"))
               (rule "all_right" (formula "13") (inst "skC=t_6") (nodenum "102605"))
               (rule "all_right" (formula "13") (inst "skC=x2_7") (nodenum "102718"))
               (rule "imp_right" (formula "13") (nodenum "102814"))
               (rule "and_left" (formula "1") (nodenum "102847"))
               (rule "and_left" (formula "1") (nodenum "102882"))
               (rule "and_left" (formula "1") (nodenum "102918"))
               (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "4") (nodenum "102970"))
               (rule "concrete_and_3" (formula "17") (term "0") (nodenum "102993"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "3") (nodenum "103013"))
               (rule "concrete_and_1" (formula "17") (nodenum "103033"))
               (rule "close_goal" (formula "17") (ifseqformula "1") (nodenum "103059"))
            )
         )
      )
   )
)
)

}
