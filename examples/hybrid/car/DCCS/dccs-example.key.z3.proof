\settings {
"#Proof-Settings-Config-File
#Thu Jul 19 16:26:04 CEST 2012
[DLOptions]counterExampleGenerator=SMT
[DecisionProcedure]Exec=
[View]FontIndex=2
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[Z3Options]z3ElimExPrefix=true
[MathematicaOptions]eliminateFractions=false
[TacletTranslation]filename=
[Libraries]Default=/home/user/jdq/.keymaera/libraries/deprecatedRules.key-false, /home/user/jdq/.keymaera/libraries/stringRules.key-false, /home/user/jdq/.keymaera/libraries/acc.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=false
[ReduceOptions]rlcadprojonly=DEFAULT
[DLOptions]reduceOnFreshBranch=false
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[View]HideIntermediateProofsteps=false
[DLOptions]readdQuantifiers=true
[DecisionProcedure]ActiveRule=_noname_
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Orbital
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[DecisionProcedure]Timeout=600
[ReduceOptions]rlqesqsc=OFF
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]DefaultChoices=transactions-transactions\\:transactionsOn , throughout-throughout\\:toutOn , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff
[ReduceOptions]rlsimpl=ON
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=2000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DecisionProcedure]savefile=false
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[DecisionProcedure]showSMTResDialog=false
[View]MaxTooltipLines=40
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[DLOptions]solveODE=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=3000
[DLOptions]odeSolver=Orbital
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=OFF
[View]HideClosedSubtrees=false
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[DecisionProcedure]multprovers=Z3\\=true\\:Yices\\=true\\:Simplify\\=true\\:CVC3\\=true
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DLOptions]simplifyBeforeReduce=false
[Z3Options]z3Prenex=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=0
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]CexFinder=ITER_DEEP
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java-programRules\\:ODL-programRules\\:dL , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff-javacard\\:jcOn
[CohenhormanderOptions]eliminatorMode=DNF
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[ReduceOptions]rlanuexgcdnormalize=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Orbital
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[TacletTranslation]maxGeneric=2
[DLOptions]TracerStat=OFF
[TacletTranslation]saveToFile=false
[DLOptions]BuiltInArithmetic=OFF
[View]ShowWholeTaclet=false
[DLOptions]counterexampleTest=OFF
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[DecisionProcedure]WaitForAllProvers=false
[DLOptions]useODEIndFinMethods=false
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[ReduceOptions]rlnzden=ON
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[DecisionProcedure]WeakenSMTTranslation=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DLOptions]sosChecker=Built-in SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=true
[ReduceOptions]rlposden=DEFAULT
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=LAZY
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=SMT
"
}



\programVariables {
R x1, x2, v1, a1, t; 
R B, A, eps;
}
/**
 * One Lane Two Cars
 * The follow car (car 1) uses a realistic control.  The lead car (car 2) 
 * is stationary.
 *
 * @provable(in 99 seconds, 101 Nodes, 10 Branches, 0 User Interactions)
 * @see "Sarah M. Loos, Andre Platzer, and Ligia Nistor. Adaptive cruise control: Hybrid, distributed, and now formally verified. In Michael Butler and Wolfram Schulte, editors, 17th International Symposium on Formal Methods, FM, Limerick, Ireland, Proceedings, volume 6664 of LNCS, pages 42-56. Springer, 2011."
 * 
 * Variable Definitions:
 * x1, x2 position of car 1 and car 2
 * v1     velocity of car 1
 *        velocity of car 2 is zero
 * a1     acceleration of car 1
 * A      max acceleration 
 * B      max braking force 
 * eps    max time between sensor readings
 * t      time
 */

\problem {
  (     x1 <  x2
         & v1 >= 0
         & B >  0
         & eps >  0
         & A >  0
         & x1 + v1 ^ 2 * (1 / (2 * B)) <  x2
      -> \[
           (if((x1 + (v1 ^ 2 * 1) / (2 * B)) + (A / B + 1) * (((A * eps ^ 2) * 1) / 2 + eps * v1) < x2)
             then
               a1 := A
             else
               if(v1 = 0)
               then
                 a1 := 0
               else
                 a1 := -(B)
               fi
             fi ;
             (t := 0 ;
               {x1' = v1, v1' = a1, t' = 1, v1 >= 0, t <= eps}))*
           \] x1 <  x2)

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "7fcc7b7d28ca46b8b03bb86658dd2b68e44606f3"))

(autoModeTime "28768")

(branch "dummy ID"
(rule "imp_right" (formula "1") (nodenum "46131"))
(rule "and_left" (formula "1") (nodenum "46151"))
(rule "and_left" (formula "1") (nodenum "46167"))
(rule "and_left" (formula "1") (nodenum "46183"))
(rule "and_left" (formula "1") (nodenum "46199"))
(rule "and_left" (formula "1") (nodenum "46215"))
(rule "loop_inv_box_quan" (formula "7") (inst "inv=  x1 + v1 ^ 2 * (1 / (2 * B)) <  x2
& (x1 <  x2 & v1 >= 0)") (nodenum "46232"))
(branch " Invariant Initially Valid"
   (rule "replace_known_left" (formula "7") (term "1,1") (ifseqformula "2") (nodenum "46259"))
   (rule "concrete_and_3" (formula "7") (term "1") (nodenum "46272"))
   (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "1") (nodenum "46285"))
   (rule "concrete_and_3" (formula "7") (nodenum "46298"))
   (rule "close_goal" (formula "7") (ifseqformula "6") (nodenum "46311"))
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "7") (nodenum "46321"))
   (rule "all_right" (formula "7") (inst "skC=a1_1") (nodenum "46336"))
   (rule "all_right" (formula "7") (inst "skC=v1_1") (nodenum "46349"))
   (rule "all_right" (formula "7") (inst "skC=x1_1") (nodenum "46362"))
   (rule "all_right" (formula "7") (inst "skC=t_1") (nodenum "46375"))
   (rule "imp_right" (formula "7") (nodenum "46388"))
   (rule "and_left" (formula "1") (nodenum "46409"))
   (rule "and_left" (formula "2") (nodenum "46428"))
   (rule "close_goal" (formula "10") (ifseqformula "2") (nodenum "46447"))
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "7") (nodenum "46457"))
   (rule "all_right" (formula "7") (inst "skC=v1_2") (nodenum "46472"))
   (rule "all_right" (formula "7") (inst "skC=x1_2") (nodenum "46485"))
   (rule "imp_right" (formula "7") (nodenum "46498"))
   (rule "and_left" (formula "1") (nodenum "46518"))
   (rule "and_left" (formula "2") (nodenum "46534"))
   (rule "modality_split_right" (formula "10") (nodenum "46550"))
   (rule "if_then_else_right" (formula "10") (nodenum "46562"))
   (branch " x1 + (v1 ^ 2 * 1) / (2 * B) + (A / B + 1) * ((A * eps ^ 2 * 1) / 2 + eps * v1) < x2"
      (builtin "Update Simplification" (formula "1") (nodenum "46598"))
      (rule "assignment_to_update_right" (formula "11") (nodenum "46611"))
      (builtin "Update Simplification" (formula "11") (nodenum "46628"))
      (rule "modality_split_right" (formula "11") (nodenum "46642"))
      (rule "assignment_to_update_right" (formula "11") (nodenum "46654"))
      (builtin "Update Simplification" (formula "11") (nodenum "46671"))
      (rule "shift_paren_and" (formula "11") (term "0,4") (nodenum "50489"))
      (rule "ODESolve_right" (formula "11") (nodenum "50509"))
      (builtin "Update Simplification" (formula "11") (nodenum "50845"))
      (rule "add_zero_left" (formula "11") (term "0,1,1,0,0,1,0") (nodenum "51066"))
      (rule "all_right" (formula "11") (inst "skC=t4_0") (nodenum "51108"))
      (rule "imp_right" (formula "11") (nodenum "51365"))
      (rule "imp_right" (formula "12") (nodenum "51409"))
      (rule "and_right" (formula "13") (nodenum "51438"))
      (branch " Case 1"
         (rule "and_right" (formula "13") (nodenum "51478"))
         (branch " Case 1"
            (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "52333"))
         )
         (branch " Case 2"
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "51546"))
         )
      )
      (branch " Case 2"
         (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "51547"))
      )
   )
   (branch " ! x1 + (v1 ^ 2 * 1) / (2 * B) + (A / B + 1) * ((A * eps ^ 2 * 1) / 2 + eps * v1) < x2"
      (builtin "Update Simplification" (formula "1") (nodenum "46690"))
      (rule "not_left" (formula "1") (nodenum "46703"))
      (rule "shift_paren_and" (formula "11") (term "0,0,2") (nodenum "46715"))
      (rule "if_then_else_right" (formula "11") (nodenum "46727"))
      (branch " v1 = 0"
         (builtin "Update Simplification" (formula "1") (nodenum "46763"))
         (rule "assignment_to_update_right" (formula "12") (nodenum "46776"))
         (builtin "Update Simplification" (formula "12") (nodenum "46793"))
         (rule "modality_split_right" (formula "12") (nodenum "46807"))
         (rule "assignment_to_update_right" (formula "12") (nodenum "46819"))
         (builtin "Update Simplification" (formula "12") (nodenum "46836"))
         (rule "diffstrengthen" (formula "12") (inst "augment=v1 = 0") (nodenum "46851"))
         (branch " Invariant Valid"
            (rule "diffind" (formula "12") (nodenum "46870"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "1") (nodenum "46901"))
               (builtin "Update Simplification" (formula "13") (nodenum "46919"))
               (rule "close_goal" (formula "13") (ifseqformula "2") (nodenum "46934"))
            )
            (branch " ODE Preserves Invariant"
               (builtin "Update Simplification" (formula "12") (nodenum "46944"))
               (rule "eval_literals_for" (formula "12") (term "1,0,0,0") (nodenum "47407"))
               (rule "concrete_impl_4" (formula "12") (term "0,0,0") (nodenum "47429"))
               (rule "all_right" (formula "12") (inst "skC=v1_3") (nodenum "47453"))
               (rule "all_right" (formula "12") (inst "skC=x1_3") (nodenum "47477"))
               (rule "all_right" (formula "12") (inst "skC=t_2") (nodenum "47498"))
               (rule "close_by_true" (formula "12") (nodenum "47515"))
            )
         )
         (branch " Augmented Invariant"
            (rule "ODESolve_right" (formula "12") (nodenum "47646"))
            (builtin "Update Simplification" (formula "12") (nodenum "47991"))
            (rule "mul_zero_left" (formula "12") (term "1,0,1,1,0,0,1,0") (nodenum "48213"))
            (rule "mul_zero_left" (formula "12") (term "1,0,0,0,1,0,0,1,0") (nodenum "48251"))
            (rule "add_zero_left" (formula "12") (term "0,1,0,1,0,0,1,0") (nodenum "48285"))
            (rule "mul_zero_left" (formula "12") (term "1,0,0,1,0,0,0,1,1,0") (nodenum "48329"))
            (rule "mul_zero_left" (formula "12") (term "1,0,1,1,1,0") (nodenum "48378"))
            (rule "add_zero_right" (formula "12") (term "0,1,1,0,0,1,0") (nodenum "48409"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,1,0") (nodenum "48440"))
            (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,1,1,0") (nodenum "48476"))
            (rule "add_zero_right" (formula "12") (term "0,1,1,1,0") (nodenum "48518"))
            (rule "eval_literals" (formula "12") (term "0,1,0,1,0,1,1,0") (nodenum "48547"))
            (rule "eval_literals" (formula "12") (term "0,1,0,0,0,0,1,1,0") (nodenum "48582"))
            (rule "mul_zero_left" (formula "12") (term "1,0,1,0,1,1,0") (nodenum "48612"))
            (rule "mul_zero_left" (formula "12") (term "1,0,0,0,0,1,1,0") (nodenum "48643"))
            (rule "add_zero_right" (formula "12") (term "0,1,0,1,1,0") (nodenum "48673"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,1,0") (nodenum "48703"))
            (rule "all_right" (formula "12") (inst "skC=t1_0") (nodenum "48747"))
            (rule "imp_right" (formula "12") (nodenum "48953"))
            (rule "imp_right" (formula "13") (nodenum "48997"))
            (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "6") (nodenum "49027"))
            (rule "concrete_and_3" (formula "14") (nodenum "49048"))
            (rule "and_right" (formula "14") (nodenum "49065"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "49108"))
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "49109"))
            )
         )
      )
      (branch " ! v1 = 0"
         (builtin "Update Simplification" (formula "1") (nodenum "49212"))
         (rule "not_left" (formula "1") (nodenum "49235"))
         (rule "assignment_to_update_right" (formula "12") (nodenum "49256"))
         (builtin "Update Simplification" (formula "12") (nodenum "49285"))
         (rule "modality_split_right" (formula "12") (nodenum "49308"))
         (rule "assignment_to_update_right" (formula "12") (nodenum "49326"))
         (builtin "Update Simplification" (formula "12") (nodenum "49353"))
         (rule "ODESolve_right" (formula "12") (nodenum "49373"))
         (builtin "Update Simplification" (formula "12") (nodenum "49709"))
         (rule "add_zero_left" (formula "12") (term "0,1,1,0,0,1,0") (nodenum "49936"))
         (rule "all_right" (formula "12") (inst "skC=t3_0") (nodenum "49978"))
         (rule "imp_right" (formula "12") (nodenum "50240"))
         (rule "imp_right" (formula "13") (nodenum "50284"))
         (rule "and_right" (formula "14") (nodenum "50313"))
         (branch " Case 1"
            (rule "and_right" (formula "14") (nodenum "50353"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "50396"))
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "50397"))
            )
         )
         (branch " Case 2"
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "50398"))
         )
      )
   )
)
)

}
