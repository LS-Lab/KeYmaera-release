\programVariables {
R x1, x2, v1, a1, t; 
R B, A, eps;
}
/**
 * One Lane Two Cars
 * The follow car (car 1) uses a realistic control.  The lead car (car 2) 
 * is stationary.
 *
 * @provable(in 99 seconds, 101 Nodes, 10 Branches, 0 User Interactions)
 * @see "Sarah M. Loos, Andre Platzer, and Ligia Nistor. Adaptive cruise control: Hybrid, distributed, and now formally verified. In Michael Butler and Wolfram Schulte, editors, 17th International Symposium on Formal Methods, FM, Limerick, Ireland, Proceedings, volume 6664 of LNCS, pages 42-56. Springer, 2011."
 * 
 * Variable Definitions:
 * x1, x2 position of car 1 and car 2
 * v1     velocity of car 1
 *        velocity of car 2 is zero
 * a1     acceleration of car 1
 * A      max acceleration 
 * B      max braking force 
 * eps    max time between sensor readings
 * t      time
 */

\problem{
    (x1 < x2 & 
     v1 >= 0 & 
     B  > 0 & 
     eps > 0 &
     A  > 0 &
     x1 + v1^2*(1/(2*B)) < x2
    )
->
  \[
    (
      if (x1 + v1^2*(1/(2*B)) + (A/B + 1)*(A*eps^2*(1/2) + eps*v1) < x2 ) then
         a1 := A
      else
         if (v1 = 0) then
	   a1 := 0
	 else
	   a1 := -B
         fi
      fi;
      t := 0;
      {x1' = v1, v1' = a1, t' = 1,  
        v1 >= 0 & t <= eps}
    )*@invariant(x1 + v1^2*(1/(2*B)) < x2  & x1 < x2 & v1 >= 0)
  \] (x1 < x2)
}
