\settings {
"#Proof-Settings-Config-File
#Fri Aug 31 13:12:45 CEST 2007
[DLOptions]callReduce=true
[DecisionProcedure]SmtBenchmarkArchiving=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[DLOptions]linearTimeoutIncreaseFactor=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[Model]Source=1
[DLOptions]useTimeoutStrategy=true
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:nullCheck
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[General]SuggestiveVarNames=false
[DLOptions]quantifierEliminator=Mathematica
[DLOptions]normalizeEquations=true
[View]HideIntermediateProofsteps=false
[DecisionProcedureForTest]=SIMPLIFY
[SimultaneousUpdateSimplifier]EagerSimplification=false
[DecisionProcedure]=SIMPLIFY
[Strategy]ActiveStrategy=DLStrategy
[View]ShowWholeTaclet=false
[DLOptions]splitBeyondFO=false
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[General]OuterRenaming=false
[DLOptions]counterExampleGenerator=Mathematica
[DLOptions]simplifyBeforeReduce=true
[DecisionProcedure]SmtZipProblemDir=false
[DLOptions]readdQuantifiers=true
[General]StupidMode=true
[DLOptions]initialTimeout=2000
[DLOptions]quadricTimeoutIncreaseFactor=0
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[DLOptions]simplfier=Mathematica
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[DLOptions]odeSolver=Orbital
[DecisionProcedure]SmtUseQuantifiers=true
[DLOptions]applyToModality=true
[DLOptions]constantTimeoutIncreaseFactor=0
[Strategy]MaximumNumberOfAutomaticApplications=1000
[View]MaxTooltipLines=40
[General]SoundNotification=true
[DLOptions]simplifyAfterReduce=true
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , programRules-programRules\:ODL-programRules\:Java-programRules\:dL , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
"
}

\sorts{
R;
}

\functions {
R b;
R amax;
R ep;
}

/*
verifictaion takes about 5 hours with hiding

invariant:
v^2 - d^2 <= 2*b*(m-z) & v >= 0 & d >= 0
*/

\problem {
\[
  R vdes ;
     R SB ;
     R mo ;
     R t ;
     R a ;
     R v ;
     R z ;
     R m ;
     R me ;
     R d ;
     R do ;
     R drive ;
     R brake ;
     R state ;
     drive := 0 ;
     brake := 1 ;
     state := drive
  \] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)
         & v >= 0
         & ep >  0
         & b >  0
         & amax >  0
         & d >= 0
      -> \forall R p; 
           \<
             (vdes := * ;
                  ?vdes > 0) 
               ++ (do := d ;
                  mo := m ;
                  m := * ;
                  d := * ;
                  ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo)) 
               ++ state := brake
             \> \<
                  SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;
                     if(state = brake) 
                  then 
                  a := -b
                   else 
                  (?v <= vdes ;
                         a := amax) 
                      ++ (?v >= vdes ;
                         a := -b)
                  fi ;
                     if(m - z <= SB) 
                  then 
                  a := -b
                  fi ;
                     t := 0 ;
                     {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}
                  \> z >= p)

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "queselHybrid.158"))
(keyLog "1" (keyUser "jdq" ) (keyVersion "queselHybrid.158"))
(keyLog "2" (keyUser "jdq" ) (keyVersion "queselHybrid.158"))

(branch "dummy ID"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "all_right" (formula "7") (inst "skC=p_0"))
(rule "less_equal_left" (formula "1"))
(rule "diamond_choice_right" (formula "7"))
(rule "modality_split_right" (formula "7"))
(builtin "Update Simplification" (formula "7"))
(rule "diamond_choice_right" (formula "8"))
(rule "random_ass_dia_right" (formula "7"))
(rule "assignment_to_update_right" (formula "9"))
(builtin "Update Simplification" (formula "9"))
(rule "modality_split_right" (formula "8"))
(builtin "Update Simplification" (formula "8"))
(rule "modality_split_right" (formula "9"))
(rule "assignment_to_update_right" (formula "8"))
(rule "assignment_to_update_right" (formula "9"))
(rule "modality_split_right" (formula "8"))
(rule "modality_split_right" (formula "9"))
(rule "assignment_to_update_right" (formula "8"))
(builtin "Update Simplification" (formula "8"))
(rule "if_then_else_right" (formula "9"))
(branch " 1 = 1"
   (builtin "Update Simplification" (formula "1"))
   (rule "simplify_form_left" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "ex_right" (formula "7") (inst "_NAME_MV_q=VDES_0_3") (userinteraction))
   (rule "assignment_to_update_right" (formula "7") (userinteraction))
   (builtin "Update Simplification" (formula "7"))
   (rule "diamond_quest_right" (formula "7") (userinteraction))
   (rule "and_right" (formula "7") (userinteraction))
   (branch " Case 1"
      (rule "modality_split_right" (formula "8") (userinteraction))
      (rule "random_ass_dia_right" (formula "8") (userinteraction))
      (builtin "Update Simplification" (formula "8"))
      (rule "ex_right" (formula "8") (inst "_NAME_MV_q=M_1_0") (userinteraction))
      (rule "assignment_to_update_right" (formula "8") (userinteraction))
      (builtin "Update Simplification" (formula "8"))
      (rule "modality_split_right" (formula "8") (userinteraction))
      (rule "random_ass_dia_right" (formula "8") (userinteraction))
      (rule "ex_right" (formula "8") (inst "_NAME_MV_q=D_24_0") (userinteraction))
      (rule "assignment_to_update_right" (formula "8") (userinteraction))
      (builtin "Update Simplification" (formula "8"))
      (rule "diamond_quest_right" (formula "8") (userinteraction))
      (rule "and_right" (formula "8") (userinteraction))
      (branch " Case 1"
         (rule "and_right" (formula "8") (userinteraction))
         (branch " Case 1"
            (rule "assignment_to_update_right" (formula "9") (userinteraction))
            (builtin "Update Simplification" (formula "9"))
            (rule "modality_split_right" (formula "9") (userinteraction))
            (rule "if_then_right" (formula "9") (userinteraction))
            (branch " m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "modality_split_right" (formula "10") (userinteraction))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (rule "ODESolve_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "apply_subst" (formula "10") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "10") (userinteraction))
               (rule "simplify_form_right" (formula "10") (userinteraction))
               (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
            )
            (branch " ! m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (builtin "Update Simplification" (formula "10"))
               (rule "modality_split_right" (formula "10") (userinteraction))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (rule "ODESolve_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "apply_subst" (formula "10") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "10") (userinteraction))
               (rule "simplify_form_right" (formula "10") (userinteraction))
               (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
            )
         )
         (branch " Case 2"
            (rule "assignment_to_update_right" (formula "9") (userinteraction))
            (builtin "Update Simplification" (formula "9"))
            (rule "modality_split_right" (formula "9") (userinteraction))
            (rule "if_then_right" (formula "9") (userinteraction))
            (branch " m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "modality_split_right" (formula "10") (userinteraction))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (rule "ODESolve_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "apply_subst" (formula "10") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "10") (userinteraction))
               (rule "simplify_form_right" (formula "10") (userinteraction))
               (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
            )
            (branch " ! m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (builtin "Update Simplification" (formula "10"))
               (rule "modality_split_right" (formula "10") (userinteraction))
               (rule "assignment_to_update_right" (formula "10") (userinteraction))
               (rule "ODESolve_right" (formula "10") (userinteraction))
               (builtin "Update Simplification" (formula "10"))
               (rule "apply_subst" (formula "10") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "10") (userinteraction))
               (rule "simplify_form_right" (formula "10") (userinteraction))
               (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
            )
         )
      )
      (branch " Case 2"
         (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "7") (userinteraction))
      (rule "assignment_to_update_right" (formula "7") (userinteraction))
      (rule "modality_split_right" (formula "7") (userinteraction))
      (rule "if_then_else_right" (formula "7") (userinteraction))
      (branch " 0 = 1"
         (builtin "Update Simplification" (formula "1"))
         (rule "reduce_form_left" (formula "1") (userinteraction))
         (rule "close_by_false" (formula "1") (userinteraction))
      )
      (branch " ! 0 = 1"
         (builtin "Update Simplification" (formula "1"))
         (rule "simplify_form_left" (formula "1") (userinteraction))
         (rule "diamond_choice_right" (formula "8") (userinteraction))
         (rule "modality_split_right" (formula "8") (userinteraction))
         (rule "diamond_quest_right" (formula "8") (userinteraction))
         (builtin "Update Simplification" (formula "8"))
         (rule "and_right" (formula "8") (userinteraction))
         (branch " Case 1"
            (rule "modality_split_right" (formula "9") (userinteraction))
            (rule "diamond_quest_right" (formula "9") (userinteraction))
            (builtin "Update Simplification" (formula "9"))
            (rule "and_right" (formula "9") (userinteraction))
            (branch " Case 1"
               (rule "simplify_form_not_ass" (formula "8") (ifseqformula "9") (userinteraction))
               (rule "close_by_true" (formula "8") (userinteraction))
            )
            (branch " Case 2"
               (rule "modality_split_right" (formula "9") (userinteraction))
               (rule "random_ass_dia_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "ex_right" (formula "9") (inst "_NAME_MV_q=M_2_0") (userinteraction))
               (rule "assignment_to_update_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "modality_split_right" (formula "9") (userinteraction))
               (rule "random_ass_dia_right" (formula "9") (userinteraction))
               (rule "ex_right" (formula "9") (inst "_NAME_MV_q=D_25_0") (userinteraction))
               (rule "assignment_to_update_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "diamond_quest_right" (formula "9") (userinteraction))
               (rule "and_right" (formula "9") (userinteraction))
               (branch " Case 1"
                  (rule "and_right" (formula "9") (userinteraction))
                  (branch " Case 1"
                     (rule "assignment_to_update_right" (formula "10") (userinteraction))
                     (builtin "Update Simplification" (formula "10"))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "if_then_right" (formula "10") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (rule "simplify_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (rule "simplify_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
                  (branch " Case 2"
                     (rule "assignment_to_update_right" (formula "10") (userinteraction))
                     (builtin "Update Simplification" (formula "10"))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "if_then_right" (formula "10") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (rule "simplify_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (rule "simplify_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
               )
               (branch " Case 2"
                  (rule "assignment_to_update_right" (formula "10") (userinteraction))
                  (builtin "Update Simplification" (formula "10"))
                  (rule "modality_split_right" (formula "10") (userinteraction))
                  (rule "if_then_right" (formula "10") (userinteraction))
                  (branch " m - z <= SB"
                     (builtin "Update Simplification" (formula "1"))
                     (rule "assignment_to_update_right" (formula "11") (userinteraction))
                     (builtin "Update Simplification" (formula "11"))
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "assignment_to_update_right" (formula "11") (userinteraction))
                     (rule "ODESolve_right" (formula "11") (userinteraction))
                     (builtin "Update Simplification" (formula "11"))
                     (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                     (rule "reduce_form_right" (formula "11") (userinteraction))
                     (rule "simplify_form_right" (formula "11") (userinteraction))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "assignment_to_update_right" (formula "10") (userinteraction))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "if_then_else_right" (formula "10") (userinteraction))
                     (branch " 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "reduce_form_left" (formula "1") (userinteraction))
                        (rule "close_by_false" (formula "1") (userinteraction))
                     )
                     (branch " ! 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "diamond_choice_right" (formula "11") (userinteraction))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "diamond_quest_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "and_right" (formula "11") (userinteraction))
                        (branch " Case 1"
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "diamond_quest_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "and_right" (formula "12") (userinteraction))
                           (branch " Case 1"
                              (rule "simplify_form_not_ass" (formula "11") (ifseqformula "12") (userinteraction))
                              (rule "close_by_true" (formula "11") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                              (branch " ! M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                           )
                        )
                        (branch " Case 2"
                           (rule "assignment_to_update_right" (formula "11") (userinteraction))
                           (builtin "Update Simplification" (formula "11"))
                           (rule "modality_split_right" (formula "11") (userinteraction))
                           (rule "if_then_right" (formula "11") (userinteraction))
                           (branch " M_2_0 - z <= SB"
                              (builtin "Update Simplification" (formula "1"))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (rule "ODESolve_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                              (rule "reduce_form_right" (formula "12") (userinteraction))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "diamond_quest_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "and_right" (formula "13") (userinteraction))
                              (branch " Case 1"
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                              (branch " Case 2"
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " ! M_2_0 - z <= SB"
                              (builtin "Update Simplification" (formula "1"))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (rule "ODESolve_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                              (rule "reduce_form_right" (formula "12") (userinteraction))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "diamond_quest_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "commute_and" (formula "13") (userinteraction))
                              (rule "and_right" (formula "13") (userinteraction))
                              (branch " Case 1"
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " Case 2"
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                           )
                        )
                     )
                  )
                  (branch " ! m - z <= SB"
                     (builtin "Update Simplification" (formula "1"))
                     (builtin "Update Simplification" (formula "11"))
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "assignment_to_update_right" (formula "11") (userinteraction))
                     (rule "ODESolve_right" (formula "11") (userinteraction))
                     (builtin "Update Simplification" (formula "11"))
                     (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                     (rule "reduce_form_right" (formula "11") (userinteraction))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "assignment_to_update_right" (formula "10") (userinteraction))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "if_then_else_right" (formula "10") (userinteraction))
                     (branch " 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "reduce_form_left" (formula "1") (userinteraction))
                        (rule "close_by_false" (formula "1") (userinteraction))
                     )
                     (branch " ! 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "diamond_choice_right" (formula "11") (userinteraction))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "diamond_quest_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "and_right" (formula "11") (userinteraction))
                        (branch " Case 1"
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "diamond_quest_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "and_right" (formula "12") (userinteraction))
                           (branch " Case 1"
                              (rule "simplify_form_not_ass" (formula "11") (ifseqformula "12") (userinteraction))
                              (rule "close_by_true" (formula "11") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                              (branch " ! M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                           )
                        )
                        (branch " Case 2"
                           (rule "assignment_to_update_right" (formula "11") (userinteraction))
                           (builtin "Update Simplification" (formula "11"))
                           (rule "modality_split_right" (formula "11") (userinteraction))
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "diamond_quest_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "commute_and" (formula "12") (userinteraction))
                           (rule "and_right" (formula "12") (userinteraction))
                           (branch " Case 1"
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "11") (userinteraction))
                              (branch " M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (rule "ODESolve_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "12") (userinteraction))
                                 (rule "if_then_right" (formula "12") (userinteraction))
                                 (branch " M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (rule "ODESolve_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "12") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_2_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " Case 2"
                              (rule "if_then_right" (formula "11") (userinteraction))
                              (branch " M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (rule "ODESolve_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "12") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                              (branch " ! M_2_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (rule "ODESolve_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "12") (userinteraction))
                                 (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch " Case 2"
            (rule "assignment_to_update_right" (formula "11") (userinteraction))
            (builtin "Update Simplification" (formula "11"))
            (rule "modality_split_right" (formula "11") (userinteraction))
            (rule "modality_split_right" (formula "10") (userinteraction))
            (rule "random_ass_dia_right" (formula "10") (userinteraction))
            (builtin "Update Simplification" (formula "10"))
            (rule "ex_right" (formula "10") (inst "_NAME_MV_q=M_3_0") (userinteraction))
            (rule "assignment_to_update_right" (formula "10") (userinteraction))
            (builtin "Update Simplification" (formula "10"))
            (rule "modality_split_right" (formula "10") (userinteraction))
            (rule "random_ass_dia_right" (formula "10") (userinteraction))
            (rule "ex_right" (formula "10") (inst "_NAME_MV_q=D_26_0") (userinteraction))
            (rule "assignment_to_update_right" (formula "10") (userinteraction))
            (builtin "Update Simplification" (formula "10"))
            (rule "diamond_quest_right" (formula "10") (userinteraction))
            (rule "modality_split_right" (formula "9") (userinteraction))
            (rule "diamond_quest_right" (formula "9") (userinteraction))
            (builtin "Update Simplification" (formula "9"))
            (rule "assignment_to_update_right" (formula "8") (userinteraction))
            (builtin "Update Simplification" (formula "8"))
            (rule "modality_split_right" (formula "8") (userinteraction))
            (rule "if_then_right" (formula "8") (userinteraction))
            (branch " m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (rule "assignment_to_update_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "modality_split_right" (formula "9") (userinteraction))
               (rule "assignment_to_update_right" (formula "9") (userinteraction))
               (rule "ODESolve_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "apply_subst" (formula "9") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "9") (userinteraction))
               (rule "and_right" (formula "10") (userinteraction))
               (branch " Case 1"
                  (rule "and_right" (formula "11") (userinteraction))
                  (branch " Case 1"
                     (rule "if_then_right" (formula "12") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (rule "ODESolve_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "12") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "modality_split_right" (formula "13") (userinteraction))
                        (rule "assignment_to_update_right" (formula "13") (userinteraction))
                        (rule "ODESolve_right" (formula "13") (userinteraction))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "13") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
                  (branch " Case 2"
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "assignment_to_update_right" (formula "11") (userinteraction))
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "if_then_else_right" (formula "11") (userinteraction))
                     (branch " 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "reduce_form_left" (formula "1") (userinteraction))
                        (rule "close_by_false" (formula "1") (userinteraction))
                     )
                     (branch " ! 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "diamond_choice_right" (formula "12") (userinteraction))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "diamond_quest_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "13") (userinteraction))
                        (rule "diamond_quest_right" (formula "13") (userinteraction))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "and_right" (formula "12") (userinteraction))
                        (branch " Case 1"
                           (rule "and_right" (formula "13") (userinteraction))
                           (branch " Case 1"
                              (rule "simplify_form_not_ass" (formula "12") (ifseqformula "13") (userinteraction))
                              (rule "close_by_true" (formula "12") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "if_then_right" (formula "13") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (rule "ODESolve_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "14") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (rule "ODESolve_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "14") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                        )
                        (branch " Case 2"
                           (rule "assignment_to_update_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "and_right" (formula "13") (userinteraction))
                           (branch " Case 1"
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "15") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "modality_split_right" (formula "16") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                    (rule "ODESolve_right" (formula "16") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "16") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " Case 2"
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "13") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (rule "if_then_right" (formula "15") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "modality_split_right" (formula "16") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                       (rule "ODESolve_right" (formula "16") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "16") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch " Case 2"
                  (rule "assignment_to_update_right" (formula "10") (userinteraction))
                  (builtin "Update Simplification" (formula "10"))
                  (rule "modality_split_right" (formula "10") (userinteraction))
                  (rule "and_right" (formula "10") (userinteraction))
                  (branch " Case 1"
                     (rule "if_then_right" (formula "11") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (rule "ODESolve_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "12") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
                  (branch " Case 2"
                     (rule "if_then_right" (formula "11") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (rule "modality_split_right" (formula "10") (userinteraction))
                        (rule "assignment_to_update_right" (formula "10") (userinteraction))
                        (rule "modality_split_right" (formula "10") (userinteraction))
                        (rule "if_then_else_right" (formula "10") (userinteraction))
                        (branch " 0 = 1"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "simplify_form_left" (formula "1") (userinteraction))
                           (rule "close_by_false" (formula "1") (userinteraction))
                        )
                        (branch " ! 0 = 1"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "diamond_choice_right" (formula "11") (userinteraction))
                           (rule "modality_split_right" (formula "11") (userinteraction))
                           (rule "diamond_quest_right" (formula "11") (userinteraction))
                           (builtin "Update Simplification" (formula "11"))
                           (rule "and_right" (formula "11") (userinteraction))
                           (branch " Case 1"
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "diamond_quest_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "and_right" (formula "12") (userinteraction))
                              (branch " Case 1"
                                 (rule "simplify_form_not_ass" (formula "11") (ifseqformula "12") (userinteraction))
                                 (rule "close_by_true" (formula "11") (userinteraction))
                              )
                              (branch " Case 2"
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "if_then_right" (formula "12") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "11") (userinteraction))
                              (builtin "Update Simplification" (formula "11"))
                              (rule "modality_split_right" (formula "11") (userinteraction))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "diamond_quest_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "and_right" (formula "12") (userinteraction))
                              (branch " Case 1"
                                 (rule "if_then_right" (formula "11") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " Case 2"
                                 (rule "if_then_right" (formula "11") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "if_then_right" (formula "12") (userinteraction))
                                    (branch " M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                       (builtin "Update Simplification" (formula "12"))
                                       (rule "modality_split_right" (formula "12") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                       (rule "ODESolve_right" (formula "12") (userinteraction))
                                       (builtin "Update Simplification" (formula "12"))
                                       (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "12") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "13") (userinteraction))
                                    (branch " M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (rule "ODESolve_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "12") (userinteraction))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "if_then_else_right" (formula "11") (userinteraction))
                        (branch " 0 = 1"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "reduce_form_left" (formula "1") (userinteraction))
                           (rule "close_by_false" (formula "1") (userinteraction))
                        )
                        (branch " ! 0 = 1"
                           (builtin "Update Simplification" (formula "1"))
                           (rule "diamond_choice_right" (formula "12") (userinteraction))
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "diamond_quest_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "and_right" (formula "12") (userinteraction))
                           (branch " Case 1"
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "diamond_quest_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "and_right" (formula "13") (userinteraction))
                              (branch " Case 1"
                                 (rule "simplify_form_not_ass" (formula "13") (ifseqformula "12") (userinteraction))
                                 (rule "close_by_true" (formula "13") (userinteraction))
                              )
                              (branch " Case 2"
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "diamond_quest_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "and_right" (formula "13") (userinteraction))
                                 (branch " Case 1"
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " Case 2"
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "13") (userinteraction))
                                    (branch " M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "diamond_quest_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "and_right" (formula "14") (userinteraction))
                                 (branch " Case 1"
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " Case 2"
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! M_3_0 - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch " ! m - z <= SB"
               (builtin "Update Simplification" (formula "1"))
               (builtin "Update Simplification" (formula "9"))
               (rule "modality_split_right" (formula "9") (userinteraction))
               (rule "assignment_to_update_right" (formula "9") (userinteraction))
               (rule "ODESolve_right" (formula "9") (userinteraction))
               (builtin "Update Simplification" (formula "9"))
               (rule "apply_subst" (formula "9") (term "1,0,0,1,0") (userinteraction))
               (rule "reduce_form_right" (formula "9") (userinteraction))
               (rule "and_right" (formula "10") (userinteraction))
               (branch " Case 1"
                  (rule "and_right" (formula "11") (userinteraction))
                  (branch " Case 1"
                     (rule "if_then_right" (formula "12") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "13") (userinteraction))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "modality_split_right" (formula "13") (userinteraction))
                        (rule "assignment_to_update_right" (formula "13") (userinteraction))
                        (rule "ODESolve_right" (formula "13") (userinteraction))
                        (builtin "Update Simplification" (formula "13"))
                        (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "13") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (rule "ODESolve_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "12") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
                  (branch " Case 2"
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "assignment_to_update_right" (formula "11") (userinteraction))
                     (rule "modality_split_right" (formula "11") (userinteraction))
                     (rule "if_then_else_right" (formula "11") (userinteraction))
                     (branch " 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "simplify_form_left" (formula "1") (userinteraction))
                        (rule "close_by_false" (formula "1") (userinteraction))
                     )
                     (branch " ! 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "diamond_choice_right" (formula "12") (userinteraction))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "diamond_quest_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "and_right" (formula "12") (userinteraction))
                        (branch " Case 1"
                           (rule "modality_split_right" (formula "13") (userinteraction))
                           (rule "diamond_quest_right" (formula "13") (userinteraction))
                           (builtin "Update Simplification" (formula "13"))
                           (rule "and_right" (formula "13") (userinteraction))
                           (branch " Case 1"
                              (rule "simplify_form_not_ass" (formula "12") (ifseqformula "13") (userinteraction))
                              (rule "close_by_true" (formula "12") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "if_then_right" (formula "13") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (rule "ODESolve_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "14") (userinteraction))
                                 (rule "if_then_right" (formula "15") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "modality_split_right" (formula "16") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                    (rule "ODESolve_right" (formula "16") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "16") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (rule "ODESolve_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "14") (userinteraction))
                                 (rule "if_then_right" (formula "15") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "modality_split_right" (formula "16") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                    (rule "ODESolve_right" (formula "16") (userinteraction))
                                    (builtin "Update Simplification" (formula "16"))
                                    (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "16") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                        )
                        (branch " Case 2"
                           (rule "assignment_to_update_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "modality_split_right" (formula "13") (userinteraction))
                           (rule "diamond_quest_right" (formula "13") (userinteraction))
                           (builtin "Update Simplification" (formula "13"))
                           (rule "and_right" (formula "13") (userinteraction))
                           (branch " Case 1"
                              (rule "if_then_right" (formula "14") (userinteraction))
                              (branch " m - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                 (builtin "Update Simplification" (formula "15"))
                                 (rule "modality_split_right" (formula "15") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                 (rule "ODESolve_right" (formula "15") (userinteraction))
                                 (builtin "Update Simplification" (formula "15"))
                                 (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "15") (userinteraction))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! m - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "modality_split_right" (formula "14") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                 (rule "ODESolve_right" (formula "14") (userinteraction))
                                 (builtin "Update Simplification" (formula "14"))
                                 (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "14") (userinteraction))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "if_then_right" (formula "12") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (rule "if_then_right" (formula "15") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "modality_split_right" (formula "16") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                       (rule "ODESolve_right" (formula "16") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "16") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "15") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "modality_split_right" (formula "16") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "16") (userinteraction))
                                       (rule "ODESolve_right" (formula "16") (userinteraction))
                                       (builtin "Update Simplification" (formula "16"))
                                       (rule "apply_subst" (formula "16") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "16") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch " Case 2"
                  (rule "assignment_to_update_right" (formula "10") (userinteraction))
                  (builtin "Update Simplification" (formula "10"))
                  (rule "modality_split_right" (formula "10") (userinteraction))
                  (rule "and_right" (formula "10") (userinteraction))
                  (branch " Case 1"
                     (rule "if_then_right" (formula "11") (userinteraction))
                     (branch " m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "modality_split_right" (formula "12") (userinteraction))
                        (rule "assignment_to_update_right" (formula "12") (userinteraction))
                        (rule "ODESolve_right" (formula "12") (userinteraction))
                        (builtin "Update Simplification" (formula "12"))
                        (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "12") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                     (branch " ! m - z <= SB"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "assignment_to_update_right" (formula "11") (userinteraction))
                        (rule "ODESolve_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "apply_subst" (formula "11") (term "1,0,0,1,0") (userinteraction))
                        (rule "reduce_form_right" (formula "11") (userinteraction))
                        (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                     )
                  )
                  (branch " Case 2"
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "assignment_to_update_right" (formula "10") (userinteraction))
                     (rule "modality_split_right" (formula "10") (userinteraction))
                     (rule "if_then_else_right" (formula "10") (userinteraction))
                     (branch " 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "simplify_form_left" (formula "1") (userinteraction))
                        (rule "close_by_false" (formula "1") (userinteraction))
                     )
                     (branch " ! 0 = 1"
                        (builtin "Update Simplification" (formula "1"))
                        (rule "diamond_choice_right" (formula "11") (userinteraction))
                        (rule "modality_split_right" (formula "11") (userinteraction))
                        (rule "diamond_quest_right" (formula "11") (userinteraction))
                        (builtin "Update Simplification" (formula "11"))
                        (rule "and_right" (formula "11") (userinteraction))
                        (branch " Case 1"
                           (rule "modality_split_right" (formula "12") (userinteraction))
                           (rule "diamond_quest_right" (formula "12") (userinteraction))
                           (builtin "Update Simplification" (formula "12"))
                           (rule "and_right" (formula "12") (userinteraction))
                           (branch " Case 1"
                              (rule "simplify_form_not_ass" (formula "11") (ifseqformula "12") (userinteraction))
                              (rule "close_by_true" (formula "11") (userinteraction))
                           )
                           (branch " Case 2"
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "if_then_right" (formula "12") (userinteraction))
                              (branch " M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " ! M_3_0 - z <= SB"
                                 (builtin "Update Simplification" (formula "1"))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (rule "ODESolve_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                 (rule "reduce_form_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                           )
                        )
                        (branch " Case 2"
                           (rule "assignment_to_update_right" (formula "11") (userinteraction))
                           (builtin "Update Simplification" (formula "11"))
                           (rule "modality_split_right" (formula "11") (userinteraction))
                           (rule "if_then_right" (formula "11") (userinteraction))
                           (branch " M_3_0 - z <= SB"
                              (builtin "Update Simplification" (formula "1"))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (rule "ODESolve_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                              (rule "reduce_form_right" (formula "12") (userinteraction))
                              (rule "modality_split_right" (formula "13") (userinteraction))
                              (rule "diamond_quest_right" (formula "13") (userinteraction))
                              (builtin "Update Simplification" (formula "13"))
                              (rule "and_right" (formula "13") (userinteraction))
                              (branch " Case 1"
                                 (rule "if_then_right" (formula "14") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "modality_split_right" (formula "15") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                    (rule "ODESolve_right" (formula "15") (userinteraction))
                                    (builtin "Update Simplification" (formula "15"))
                                    (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "15") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " Case 2"
                                 (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                 (builtin "Update Simplification" (formula "13"))
                                 (rule "modality_split_right" (formula "13") (userinteraction))
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "13") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                           (branch " ! M_3_0 - z <= SB"
                              (builtin "Update Simplification" (formula "1"))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "assignment_to_update_right" (formula "12") (userinteraction))
                              (rule "ODESolve_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                              (rule "reduce_form_right" (formula "12") (userinteraction))
                              (rule "modality_split_right" (formula "12") (userinteraction))
                              (rule "diamond_quest_right" (formula "12") (userinteraction))
                              (builtin "Update Simplification" (formula "12"))
                              (rule "and_right" (formula "12") (userinteraction))
                              (branch " Case 1"
                                 (rule "if_then_right" (formula "13") (userinteraction))
                                 (branch " m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "modality_split_right" (formula "14") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                    (rule "ODESolve_right" (formula "14") (userinteraction))
                                    (builtin "Update Simplification" (formula "14"))
                                    (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "14") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                                 (branch " ! m - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                 )
                              )
                              (branch " Case 2"
                                 (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                 (builtin "Update Simplification" (formula "12"))
                                 (rule "modality_split_right" (formula "12") (userinteraction))
                                 (rule "if_then_right" (formula "12") (userinteraction))
                                 (branch " M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "modality_split_right" (formula "13") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                    (rule "ODESolve_right" (formula "13") (userinteraction))
                                    (builtin "Update Simplification" (formula "13"))
                                    (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "13") (userinteraction))
                                    (rule "if_then_right" (formula "14") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "modality_split_right" (formula "15") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "15") (userinteraction))
                                       (rule "ODESolve_right" (formula "15") (userinteraction))
                                       (builtin "Update Simplification" (formula "15"))
                                       (rule "apply_subst" (formula "15") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "15") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                                 (branch " ! M_3_0 - z <= SB"
                                    (builtin "Update Simplification" (formula "1"))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "modality_split_right" (formula "12") (userinteraction))
                                    (rule "assignment_to_update_right" (formula "12") (userinteraction))
                                    (rule "ODESolve_right" (formula "12") (userinteraction))
                                    (builtin "Update Simplification" (formula "12"))
                                    (rule "apply_subst" (formula "12") (term "1,0,0,1,0") (userinteraction))
                                    (rule "reduce_form_right" (formula "12") (userinteraction))
                                    (rule "if_then_right" (formula "13") (userinteraction))
                                    (branch " m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "modality_split_right" (formula "14") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "14") (userinteraction))
                                       (rule "ODESolve_right" (formula "14") (userinteraction))
                                       (builtin "Update Simplification" (formula "14"))
                                       (rule "apply_subst" (formula "14") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "14") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                    (branch " ! m - z <= SB"
                                       (builtin "Update Simplification" (formula "1"))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "modality_split_right" (formula "13") (userinteraction))
                                       (rule "assignment_to_update_right" (formula "13") (userinteraction))
                                       (rule "ODESolve_right" (formula "13") (userinteraction))
                                       (builtin "Update Simplification" (formula "13"))
                                       (rule "apply_subst" (formula "13") (term "1,0,0,1,0") (userinteraction))
                                       (rule "reduce_form_right" (formula "13") (userinteraction))
                                       (opengoal "\\[   R vdes ;      R SB ;      R mo ;      R t ;      R a ;      R v ;      R z ;      R m ;      R me ;      R d ;      R do ;      R drive ;      R brake ;      R state ;      drive := 0 ;      brake := 1 ;      state := drive   \\] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)          & v >= 0          & ep >  0          & b >  0          & amax >  0          & d >= 0       -> \\forall R p;             \\<              (vdes := * ;                   ?vdes > 0)                 ++ (do := d ;                   mo := m ;                   m := * ;                   d := * ;                   ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo))                 ++ state := brake              \\> \\<                   SB := ((amax / b + 1) * ep * v + (v ^ 2 - d ^ 2) / (2 * b) + ((amax / b + 1) * amax * ep ^ 2) / 2) ;                      if(state = brake)                    then                    a := -b                    else                    (?v <= vdes ;                          a := amax)                        ++ (?v >= vdes ;                          a := -b)                   fi ;                      if(m - z <= SB)                    then                    a := -b                   fi ;                      t := 0 ;                      {z` = v, v` = a, t` = 1, v >= 0 & t <= ep}                   \\> z >= p) ")
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
(branch " ! 1 = 1"
   (builtin "Update Simplification" (formula "1"))
   (rule "not_left" (formula "1"))
   (rule "simplify_form_right" (formula "7"))
   (rule "close_by_true" (formula "7"))
)
)

}
