\settings {
"#Proof-Settings-Config-File
#Sat Mar 15 18:04:39 CET 2008
[DLOptions]callReduce=true
[DecisionProcedure]SmtBenchmarkArchiving=false
[DLOptions]loopSatTimeout=4400000
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]invariantRule=QUANTIFIERS
[DLOptions]linearTimeoutIncreaseFactor=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[Model]Source=1
[DLOptions]useTimeoutStrategy=true
[DLOptions]useIterativeReduceRule=false
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[MathematicaOptions]useEliminateList=true
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]quantifierEliminator=Mathematica
[DLOptions]normalizeEquations=true
[View]HideIntermediateProofsteps=false
[DecisionProcedureForTest]=SIMPLIFY
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]UseOCL=false
[DecisionProcedure]=SIMPLIFY
[Strategy]ActiveStrategy=DLStrategy
[View]ShowWholeTaclet=false
[DLOptions]simplifyTimeout=0
[DLOptions]splitBeyondFO=false
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[DLOptions]applyGammaRules=ALWAYS
[DLOptions]counterExampleGenerator=Mathematica
[DLOptions]simplifyBeforeReduce=true
[OrbitalOptions]representation=big
[DecisionProcedure]SmtZipProblemDir=false
[DLOptions]readdQuantifiers=true
[DLOptions]simplifier=Mathematica
[OrbitalOptions]precision=34
[General]StupidMode=true
[DLOptions]initialTimeout=2000
[General]UseJML=true
[DLOptions]ignoreAnnotations=false
[DLOptions]stopAtFO=false
[DLOptions]quadricTimeoutIncreaseFactor=0
[General]DnDDirectionSensitive=true
[General]ProofAssistant=false
[View]FontIndex=2
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[DLOptions]odeSolver=Mathematica
[DecisionProcedure]SmtUseQuantifiers=true
[DLOptions]applyToModality=false
[DLOptions]DiffSat=AUTO
[DLOptions]counterexampleTest=ON
[DLOptions]diffSatTimeout=2000
[DLOptions]constantTimeoutIncreaseFactor=0
[Strategy]MaximumNumberOfAutomaticApplications=1000
[View]MaxTooltipLines=40
[General]SoundNotification=false
[DLOptions]simplifyAfterReduce=true
[Choice]Choices=throughout-throughout\:toutOn-throughout\:toutOff , transactions-transactions\:transactionsOn-transactions\:transactionsOff , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:Java-programRules\:ODL-programRules\:dL , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
"
}

/**
 * Essentials of European Train Control System (ETCS)
 * Liveness analysis.
 */
\functions{
  R ep;
  R b;
  R A;
}

/**
 * @variant((z<p_0 -> z + n*ep*v>=p_0 & v=vo) & v>=0, n)
 * which may not be minimal, but it works.
 * During the proof it automatically finds a choice for m.
 * Alternatively: manual instatiation of m with
 *   p_0 + v^2/(2*b) + ep*v
 *   CAVEAT(for manual instantion of m): vo is chosen which happens to be replaced by v in the current proof, but could look different in general.
 */
\problem {
\[
  R SB, a, v, z, t, m ;
    R vo
  \] (   v >  0 & ep >  0 & b >  0 & A >  0
      -> \forall R p; 
           \[
             vo := v
             \] \<
                  m := *
                  \> \<
                       (SB := (v ^ 2 / (2 * b) + ep * v) ;
                         if(m - z < SB)
                         then
                           t := 0 ;
                           {z` = v, v` = -b, t` = 1, v >= 0 & t <= ep}
                         else
                           t := 0 ;
                           {z` = v, t` = 1, t <= ep}
                         fi)*
                       \> z >= p)

}

\proof {
(keyLog "0" (keyUser "andre" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(branch "dummy ID"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "all_right" (formula "5") (inst "sk=p_0"))
(rule "assignment_to_update_right" (formula "5"))
(rule "random_ass_dia_right" (formula "5"))
(builtin "Update Simplification" (formula "5"))
(rule "ex_right" (formula "5") (inst "_NAME_MV_q=M_0_0"))
(rule "loop_var_dia" (formula "5") (inst "inv=z + n * ep * v >= p_0 & v = vo & v >= 0") (inst "n=n") (userinteraction))
(branch " Variant Satisfiable"
   (builtin "Update Simplification" (formula "5"))
   (builtin "Eliminate Universal Quantifiers" (formula "5"))
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "5"))
   (builtin "Eliminate Universal Quantifiers" (formula "5"))
)
(branch " Variant Decreases"
   (builtin "Update Simplification" (formula "5"))
   (rule "all_right" (formula "5") (inst "sk=v_1"))
   (rule "all_right" (formula "5") (inst "sk=z_1"))
   (rule "all_right" (formula "5") (inst "sk=n_0"))
   (rule "imp_right" (formula "5"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "2"))
   (rule "and_left" (formula "2"))
   (rule "modality_split_right" (formula "9"))
   (rule "assignment_to_update_right" (formula "9"))
   (builtin "Update Simplification" (formula "9"))
   (rule "if_then_else_right" (formula "9"))
   (branch " m - z < SB"
      (builtin "Update Simplification" (formula "1"))
      (rule "less_left" (formula "1"))
      (rule "modality_split_right" (formula "10"))
      (rule "assignment_to_update_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ODESolve_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "shift_paren_and" (formula "10") (term "0"))
      (rule "shift_paren_and" (formula "10") (term "0"))
      (rule "ex_right" (formula "10") (inst "q=ep") (userinteraction))
      (rule "reduce_form" (formula "10") (term "1,0,0") (userinteraction))
      (rule "simplify_form_ass_right" (formula "10") (ifseqformula "7") (userinteraction))
      (rule "simplify_form_ass_right" (formula "10") (ifseqformula "5") (userinteraction))
      (builtin "Eliminate Existential Quantifier" (formula "1") (term "0,1"))
   )
   (branch " ! m - z < SB"
      (builtin "Update Simplification" (formula "1"))
      (rule "not_left" (formula "1"))
      (rule "less_right" (formula "9"))
      (rule "modality_split_right" (formula "10"))
      (rule "assignment_to_update_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ODESolve_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (builtin "Eliminate Universal Quantifiers" (formula "10"))
   )
)
)

}
