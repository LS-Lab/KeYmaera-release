/**
 * Safety lemma for European Train Control System
 * invariant vc <= A*t + v & vc >= -b*t + v & zc <= 1/2*A*t^2 & zc >= -1/2*b*t^2 & zc >= z & vc <= vdes
 * variant zc -z <= zc/t^2 *(ep*n)^2 + (zc /t^2*(t-t2)^2 + (t-t2)*v & t - t2 >= n*ep & t-t2 <= (n+1)*ep & z = zc/t^2 * t2^2 & v = t2*(2*zc/t^2) & t2 >= 0
 */
\functions {
R b;
R A;
R ep;
}

\schemaVariables {
	\formula post,inv;
	\program DLProgram #dl;
	\variables R n;
}

\rules {
   loop_var_dia_test { \find (==> \<#dl*\>post)
    /* TODO this should be \varcond(\notFreeIn(n, \<#dl*\>post)) for soundness */
    \varcond(\notFreeIn(n, post))
    "Variant Satisfiable":
          \replacewith (==> \exists n; inv );
    "Use Case":
          \replacewith (==> #dlUniversalClosure(\<#dl\>true, (\exists n; (inv & n < 1)) -> post, false));
    "Variant Decreases":
          \replacewith (==>  #dlUniversalClosure(\<#dl\>true, \forall n; (n>=1 & inv -> \<#dl\> {\subst n; n-1}inv), true))
          \displayname "loop_variant_test"}; 

}

\problem {
\[ R vdes, t, tnew, t2, zeit, a, v, z, vc, zc, s; z:= 0; v:=0; zc:=z; vc:=v; t:=0; t2:=t; tnew:=t \] (( A > 0 & ep > 0 & b>0 & vdes >= 0)
-> 
\[
((?-1.679*(vc-vdes)-0.0008*s-0.307*vdes<A & -1.679*(vc-vdes)-0.0008*s-0.307*vdes > -b; {zc'=vc,vc'=-1.679*(vc-vdes)-0.0008*s-0.307*vdes,s'=vc-vdes,t'=1,-1.679*(vc-vdes)-0.0008*s-0.307*vdes<=A & -1.679*(vc-vdes)-0.0008*s-0.307*vdes>=-b})
++ (?-1.679*(vc-vdes)-0.0008*s-0.307*vdes >= A; {zc'=vc,vc'=A,s'=vc-vdes,t'=1,-1.679*(vc-vdes)-0.0008*s-0.307*vdes>=A})
++ (?-1.679*(vc-vdes)-0.0008*s-0.307*vdes <= -b; {zc'=vc,vc'=-b,s'=vc-vdes,t'=1,-1.679*(vc-vdes)-0.0008*s-0.307*vdes <= -b}))*@invariant(zc <= 1/2*A*t^2+z & zc >= -1/2*b*t^2 + z & zc >= z & vc <= A*t + v & vc >= -b*t + v);
?zc > z & t > 0
\]
 \<
      ((
        /*((?v <= vdes; a:=*; ?a >=-b & a <= A) 
        ++ (?v >= vdes; a:=*; ?a <0 & a >= -b));*/
		a:=*; ? a>=-b & a<= A;
        (tnew:=0; {z'=v, v'=a,tnew'=1, t2'=1,(v >= 0 & tnew <= ep)})
       ))*
\> 
 \<
      ((
        /*((?v <= vdes; a:=*; ?a >=-b & a <= A) 
        ++ (?v >= vdes; a:=*; ?a <0 & a >= -b));*/
		a:=*; ? a>=-b & a<= A;
        (tnew:=0; {z'=v, v'=a,tnew'=1, t2'=1,(v >= 0 & tnew <= ep)})
       ))
\> 
(t=t2 & zc = z ))
}
