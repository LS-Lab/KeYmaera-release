\settings {
"#Proof-Settings-Config-File
#Sat May 09 22:14:07 CEST 2009
[DLOptions]counterExampleGenerator=Mathematica
[View]FontIndex=2
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[HOLLightOptions]ocamlPath=/usr/bin/ocaml
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[DecisionProcedure]SmtBenchmarkArchiving=false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=false
[ReduceOptions]rlcadprojonly=DEFAULT
[DecisionProcedureForTest]=Cogent
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]ReduceSwitch\ rlanuexgcdnormalize=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=true
[View]HideIntermediateProofsteps=false
[DLOptions]readdQuantifiers=true
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]csdpPath=/home/user/jdq/bin/csdp
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]reduceBinary=/home/user/jdq/space/local/src/reduce-algebra/bin/reduce
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Mathematica
[HOLLightOptions]hollightPath=/home/user/jdq/space/local/hol_light
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=20000
[DLOptions]linearTimeoutIncreaseFactor=2
[ReduceOptions]rlqesqsc=DEFAULT
[QepcadOptions]qepcadPath=/home/user/jdq/space/local/zola/local/src/qepcad/qesource
[General]SoundNotification=false
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , throughout-throughout\:toutOn , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=1000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=true
[MathematicaOptions]useEliminateList=true
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[View]MaxTooltipLines=40
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[QepcadOptions]saclibPath=/home/user/jdq/space/local/zola/local/src/qepcad/saclib2.2.0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=2000000
[DLOptions]odeSolver=Mathematica
[OrbitalOptions]precision=8
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=DEFAULT
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DecisionProcedure]SmtZipProblemDir=false
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DecisionProcedure]SmtUseQuantifiers=true
[DLOptions]simplifyBeforeReduce=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=2000
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=throughout-throughout\:toutOn-throughout\:toutOff , transactions-transactions\:transactionsOn-transactions\:transactionsOff , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:Java-programRules\:ODL-programRules\:dL , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[DecisionProcedure]=SIMPLIFY
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Groebnerian SOS
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[Model]Source=1
[HOLLightOptions]harrisonqePath=/home/user/jdq/space/local/OCaml
[DLOptions]BuiltInArithmetic=OFF
[View]ShowWholeTaclet=false
[DLOptions]counterexampleTest=OFF
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[DLOptions]sosChecker=Internal SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=false
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=IBC
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=Mathematica
"
}

/**
 * Essentials of European Train Control System (ETCS)
 * Liveness analysis.
 * @provable
 */
\functions{
  R ep;
  R b;
  R A;
}

\problem {
\[
  R SB, a, v, z, t, m, d, vdes ;
    R vo, mo, do
  \] (   v >= 0 & ep >  0 & b >  0 & A >  0
      -> \forall R p; 
           (   p >  0
            ->   \<
                   do := d ;
                     mo := m ;
                     m := * ;
                     d := * ;
                     vdes := * ;
                     ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo) & vdes >= 0 ;
                     SB := ((v ^ 2 - d ^ 2) / (2 * b) + (A / b + 1) * (A / 2 * ep ^ 2 + ep * v)) ;
                     a := A ;
                     if(m - z <= SB)
                     then
                       a := -b
                     fi ;
                     t := 0 ;
                     {z` = v, v` = a, t` = 1, v >= 0, t <= ep}
                   \> v >  0
               & (   v >  0
                  -> \<
                       z := 0 ;
                         vo := v
                       \> \<
                            (do := d ;
                              mo := m ;
                              m := * ;
                              d := * ;
                              vdes := * ;
                              ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo) & vdes >= 0 ;
                              SB := ((v ^ 2 - d ^ 2) / (2 * b) + (A / b + 1) * (A / 2 * ep ^ 2 + ep * v)) ;
                              a := A ;
                              if(m - z <= SB)
                              then
                                a := -b
                              fi ;
                              t := 0 ;
                              {z` = v, v` = a, t` = 1, v >= 0, t <= ep})*
                            \> z >= p)))

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "34dc7e7d2e557c30f337a7b8ca73087d0e5a558f"))

(branch "dummy ID"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "all_right" (formula "5") (inst "skC=p_0"))
(rule "imp_right" (formula "5"))
(rule "and_right" (formula "6"))
(branch " Case 1"
   (rule "modality_split_right" (formula "6"))
   (rule "assignment_to_update_right" (formula "6"))
   (rule "modality_split_right" (formula "6"))
   (rule "assignment_to_update_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_dia_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "ex_right" (formula "6") (inst "_NAME_MV_q=M1"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_dia_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "ex_right" (formula "6") (inst "_NAME_MV_q=D1"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_dia_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "ex_right" (formula "6") (inst "_NAME_MV_q=VDES1"))
   (rule "modality_split_right" (formula "6"))
   (rule "diamond_quest_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "and_right" (formula "6"))
   (branch " Case 1"
      (rule "and_right" (formula "6"))
      (branch " Case 1"
      )
      (branch " Case 2"
         (rule "and_right" (formula "6"))
         (branch " Case 1"
         )
         (branch " Case 2"
            (builtin "Eliminate Existential Quantifier" (formula "6"))
         )
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "6"))
      (rule "assignment_to_update_right" (formula "6"))
      (builtin "Update Simplification" (formula "6"))
      (rule "modality_split_right" (formula "6"))
      (rule "assignment_to_update_right" (formula "6"))
      (builtin "Update Simplification" (formula "6"))
      (rule "modality_split_right" (formula "6"))
      (rule "if_then_right" (formula "6"))
      (branch " m - z <= SB"
         (builtin "Update Simplification" (formula "1"))
         (rule "assignment_to_update_right" (formula "7"))
         (builtin "Update Simplification" (formula "7"))
         (rule "modality_split_right" (formula "7"))
         (rule "assignment_to_update_right" (formula "7"))
         (builtin "Update Simplification" (formula "7"))
         (rule "ODESolve_right" (formula "7"))
         (builtin "Update Simplification" (formula "7"))
         (rule "add_zero_right" (formula "7") (term "0,1,1,0,0,1,0"))
         (rule "shift_paren_and" (formula "7") (term "0"))
         (rule "ex_right" (formula "7") (inst "qC=ep") (userinteraction))
         (rule "and_right" (formula "7"))
         (branch " Case 1"
            (rule "and_right" (formula "7"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
            (branch " Case 2"
               (rule "all_right" (formula "7") (inst "skC=ts1_0"))
               (rule "imp_right" (formula "7"))
               (rule "and_left" (formula "1"))
               (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "9"))
               (builtin "Eliminate Existential Quantifier" (formula "3"))
            )
         )
         (branch " Case 2"
         )
      )
      (branch " ! m - z <= SB"
         (builtin "Update Simplification" (formula "1"))
         (rule "not_left" (formula "1"))
         (rule "modality_split_right" (formula "7"))
         (rule "assignment_to_update_right" (formula "7"))
         (builtin "Update Simplification" (formula "7"))
         (rule "ODESolve_right" (formula "7"))
         (builtin "Update Simplification" (formula "7"))
         (builtin "Eliminate Universal Quantifiers" (formula "1"))
      )
   )
)
(branch " Case 2"
   (rule "imp_right" (formula "6"))
   (rule "modality_split_right" (formula "7"))
   (rule "assignment_to_update_right" (formula "7"))
   (rule "assignment_to_update_right" (formula "7"))
   (builtin "Update Simplification" (formula "7"))
   (rule "loop_var_dia" (formula "7") (inst "n=$n") (inst "inv=z + $n * ep * vo >= p_0 & v >= vo"))
   (branch " Variant Satisfiable"
      (builtin "Update Simplification" (formula "7"))
      (builtin "Eliminate Universal Quantifiers" (formula "1"))
   )
   (branch " Use Case"
      (builtin "Update Simplification" (formula "7"))
      (builtin "Eliminate Universal Quantifiers" (formula "1"))
   )
   (branch " Variant Decreases"
      (builtin "Update Simplification" (formula "7"))
      (rule "all_right" (formula "7") (inst "skC=v_1"))
      (rule "all_right" (formula "7") (inst "skC=d_2"))
      (rule "all_right" (formula "7") (inst "skC=z_1"))
      (rule "all_right" (formula "7") (inst "skC=m_2"))
      (rule "all_right" (formula "7") (inst "skC=_n_0"))
      (rule "imp_right" (formula "7"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "2"))
      (rule "modality_split_right" (formula "10"))
      (rule "assignment_to_update_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "modality_split_right" (formula "10"))
      (rule "assignment_to_update_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "modality_split_right" (formula "10"))
      (rule "random_ass_dia_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ex_right" (formula "10") (inst "_NAME_MV_q=M2"))
      (rule "modality_split_right" (formula "10"))
      (rule "random_ass_dia_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ex_right" (formula "10") (inst "_NAME_MV_q=D2"))
      (rule "modality_split_right" (formula "10"))
      (rule "random_ass_dia_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ex_right" (formula "10") (inst "_NAME_MV_q=VDES2"))
      (rule "modality_split_right" (formula "10"))
      (rule "diamond_quest_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "and_right" (formula "10"))
      (branch " Case 1"
         (rule "and_right" (formula "10"))
         (branch " Case 1"
         )
         (branch " Case 2"
            (rule "and_right" (formula "10"))
            (branch " Case 1"
            )
            (branch " Case 2"
               (builtin "Eliminate Existential Quantifier" (formula "10"))
            )
         )
      )
      (branch " Case 2"
         (rule "modality_split_right" (formula "10"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "modality_split_right" (formula "10"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "modality_split_right" (formula "10"))
         (rule "if_then_right" (formula "10"))
         (branch " m - z <= SB"
            (builtin "Update Simplification" (formula "1"))
            (rule "assignment_to_update_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "modality_split_right" (formula "11"))
            (rule "assignment_to_update_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "ODESolve_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "add_zero_right" (formula "11") (term "0,1,1,0,0,1,0"))
            (rule "shift_paren_and" (formula "11") (term "0"))
            (rule "shift_paren_and" (formula "11") (term "0"))
            (rule "ex_right" (formula "11") (inst "qC=0") (userinteraction))
            (rule "mul_zero_right" (formula "11") (term "0,0,1"))
            (rule "mul_zero_right" (formula "11") (term "0,1,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "11") (term "0,1"))
            (rule "mul_zero_left" (formula "11") (term "1,0,1,0,0,1,0"))
            (rule "eval_literals_for" (formula "11") (term "0,0,0"))
            (rule "concrete_and_1" (formula "11") (term "0,0"))
            (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0"))
            (rule "eval_literals" (formula "11") (term "1,0,1,0,0,1,0"))
            (rule "mul_zero_right" (formula "11") (term "0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "11") (term "1,0,0,1,0"))
            (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "4"))
            (rule "concrete_and_3" (formula "11"))
            (rule "and_right" (formula "11"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
            (branch " Case 2"
               (builtin "Eliminate Existential Quantifier" (formula "1"))
            )
         )
         (branch " ! m - z <= SB"
            (builtin "Update Simplification" (formula "1"))
            (rule "not_left" (formula "1"))
            (rule "modality_split_right" (formula "11"))
            (rule "assignment_to_update_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "ODESolve_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "hide_right" (formula "10") (userinteraction))
            (rule "add_zero_right" (formula "10") (term "0,1,1,0,0,1,0"))
            (rule "shift_paren_and" (formula "10") (term "0"))
            (rule "shift_paren_and" (formula "10") (term "0"))
            (builtin "Eliminate Universal Quantifiers" (formula "7"))
         )
      )
   )
)
)

}
