\settings {
"#Proof-Settings-Config-File
#Sat May 09 22:06:01 CEST 2009
[DLOptions]counterExampleGenerator=Mathematica
[View]FontIndex=2
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[HOLLightOptions]ocamlPath=/usr/bin/ocaml
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[DecisionProcedure]SmtBenchmarkArchiving=false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=false
[ReduceOptions]rlcadprojonly=DEFAULT
[DecisionProcedureForTest]=Cogent
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]ReduceSwitch\ rlanuexgcdnormalize=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=true
[View]HideIntermediateProofsteps=false
[DLOptions]readdQuantifiers=true
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]csdpPath=/home/user/jdq/bin/csdp
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]reduceBinary=/home/user/jdq/space/local/src/reduce-algebra/bin/reduce
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Mathematica
[HOLLightOptions]hollightPath=/home/user/jdq/space/local/hol_light
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=20000
[DLOptions]linearTimeoutIncreaseFactor=2
[ReduceOptions]rlqesqsc=DEFAULT
[QepcadOptions]qepcadPath=/home/user/jdq/space/local/zola/local/src/qepcad/qesource
[General]SoundNotification=false
[Choice]DefaultChoices=throughout-throughout\:toutOn , transactions-transactions\:transactionsOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=1000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=true
[MathematicaOptions]useEliminateList=true
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[View]MaxTooltipLines=40
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[QepcadOptions]saclibPath=/home/user/jdq/space/local/zola/local/src/qepcad/saclib2.2.0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=2000000
[DLOptions]odeSolver=Mathematica
[OrbitalOptions]precision=8
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=DEFAULT
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DecisionProcedure]SmtZipProblemDir=false
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DecisionProcedure]SmtUseQuantifiers=true
[DLOptions]simplifyBeforeReduce=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=2000
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , programRules-programRules\:Java-programRules\:ODL-programRules\:dL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[DecisionProcedure]=SIMPLIFY
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Groebnerian SOS
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[Model]Source=1
[HOLLightOptions]harrisonqePath=/home/user/jdq/space/local/OCaml
[DLOptions]BuiltInArithmetic=OFF
[View]ShowWholeTaclet=false
[DLOptions]counterexampleTest=OFF
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=true
[DLOptions]sosChecker=Internal SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=false
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=IBC
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=Mathematica
"
}

/**
 * RBC controllability corollary for European Train Control System
 * @provable
 */
\functions {
R b;
R amax;
R ep;
}

\problem {
\[
  R vdes, SB, mo, t, a, v, z, m, d, do, drive, brake, state ;
    drive := 0 ;
    brake := 1 ;
    state := drive ;
    mo := m
  \] (     v ^ 2 - d ^ 2 <= 2 * b * (m - z)
         & d >= 0
         & v >= 0
         & b >  0
         & ep >  0
      -> \[
           (do := d ;
               mo := m ;
               m := * ;
               d := * ;
               vdes := * ;
               ?d >= 0 & do ^ 2 - d ^ 2 <= 2 * b * (m - mo) & vdes >= 0)
             ++ state := brake
           \] (     d >= 0
                  & do ^ 2 - d ^ 2 <= 2 * b * (m - mo)
                  & vdes >= 0
               -> \[
                    (?v <= vdes ;
                        a := * ;
                        ?a >= 0 & a <= amax)
                      ++ (?v >= vdes ;
                        a := * ;
                        ?a <= 0 & a >= -b)
                    \] \<
                         SB := *
                         \> \[
                              if(m - z <= SB | state = brake)
                                then
                                  a := -b
                                fi ;
                                t := 0 ;
                                {z` = v, v` = a, t` = 1, v >= 0, t <= ep}
                              \] (z >= m -> v <= d)))

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "34dc7e7d2e557c30f337a7b8ca73087d0e5a558f"))

(branch "dummy ID"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "box_choice_right" (formula "6"))
(branch " Case 1"
   (rule "modality_split_right" (formula "6"))
   (rule "assignment_to_update_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "modality_split_right" (formula "6"))
   (rule "assignment_to_update_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_box_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "all_right" (formula "6") (inst "skC=m_1"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_box_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "all_right" (formula "6") (inst "skC=d_1"))
   (rule "modality_split_right" (formula "6"))
   (rule "random_ass_box_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "all_right" (formula "6") (inst "skC=vdes_1"))
   (rule "box_quest_right" (formula "6"))
   (builtin "Update Simplification" (formula "1"))
   (builtin "Update Simplification" (formula "7"))
   (rule "and_left" (formula "1"))
   (rule "imp_right" (formula "8"))
   (rule "and_left" (formula "3"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "box_choice_right" (formula "9"))
   (branch " Case 1"
      (rule "modality_split_right" (formula "9"))
      (rule "box_quest_right" (formula "9"))
      (builtin "Update Simplification" (formula "1"))
      (rule "modality_split_right" (formula "10"))
      (rule "random_ass_box_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "all_right" (formula "10") (inst "skC=a_1"))
      (rule "box_quest_right" (formula "10"))
      (builtin "Update Simplification" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "random_ass_dia_right" (formula "12"))
      (builtin "Update Simplification" (formula "12"))
      (rule "ex_right" (formula "12") (inst "_NAME_MV_q=SB1"))
      (rule "modality_split_right" (formula "12"))
      (rule "cut" (inst "b=2 * b * (m_1 - z) >= v ^ 2 - (d_1) ^ 2") (userinteraction))
      (branch " CUT: 2 * b * (m_1 - z) >= v ^ 2 - (d_1) ^ 2"
         (rule "replace_known_left" (formula "6") (ifseqformula "6") (userinteraction))
         (rule "replace_known_left" (formula "8") (ifseqformula "8") (userinteraction))
         (rule "true_left" (formula "6"))
         (rule "if_then_right" (formula "11"))
         (branch " m - z <= SB | state = brake"
            (builtin "Update Simplification" (formula "1"))
            (rule "eval_literals_for" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "assignment_to_update_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "modality_split_right" (formula "12"))
            (rule "assignment_to_update_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "ODESolve_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "add_zero_right" (formula "12") (term "0,1,1,0,0,1,0"))
            (rule "all_right" (formula "12") (inst "skC=t9_0"))
            (rule "imp_right" (formula "12"))
            (rule "imp_right" (formula "13"))
            (rule "imp_right" (formula "14"))
            (rule "replace_known_left" (formula "4") (ifseqformula "4") (userinteraction))
            (builtin "Eliminate Universal Quantifiers")
         )
         (branch " ! m - z <= SB | state = brake"
            (builtin "Update Simplification" (formula "1"))
            (rule "eval_literals_for" (formula "1") (term "1,0"))
            (rule "concrete_or_4" (formula "1") (term "0"))
            (rule "not_left" (formula "1"))
            (rule "modality_split_right" (formula "12"))
            (rule "assignment_to_update_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "ODESolve_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "add_zero_right" (formula "12") (term "0,1,1,0,0,1,0"))
            (rule "all_right" (formula "12") (inst "skC=t10_0"))
            (rule "imp_right" (formula "12"))
            (rule "imp_right" (formula "13"))
            (rule "imp_right" (formula "14"))
            (builtin "Eliminate Existential Quantifier" (formula "14") (term "1"))
         )
      )
      (branch " CUT: ! 2 * b * (m_1 - z) >= v ^ 2 - (d_1) ^ 2"
         (rule "replace_known_right" (formula "13") (ifseqformula "13") (userinteraction))
         (builtin "Eliminate Universal Quantifiers" (formula "12"))
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "9"))
      (rule "box_quest_right" (formula "9"))
      (builtin "Update Simplification" (formula "1"))
      (rule "modality_split_right" (formula "10"))
      (rule "random_ass_box_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "all_right" (formula "10") (inst "skC=a_3"))
      (rule "box_quest_right" (formula "10"))
      (builtin "Update Simplification" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "random_ass_dia_right" (formula "12"))
      (builtin "Update Simplification" (formula "12"))
      (rule "ex_right" (formula "12") (inst "_NAME_MV_q=SB4"))
      (rule "modality_split_right" (formula "12"))
      (rule "if_then_right" (formula "12"))
      (branch " m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "assignment_to_update_right" (formula "13"))
         (builtin "Update Simplification" (formula "13"))
         (rule "modality_split_right" (formula "13"))
         (rule "assignment_to_update_right" (formula "13"))
         (builtin "Update Simplification" (formula "13"))
         (rule "ODESolve_right" (formula "13"))
         (builtin "Update Simplification" (formula "13"))
         (rule "add_zero_right" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "all_right" (formula "13") (inst "skC=t5_0"))
         (rule "imp_right" (formula "13"))
         (rule "imp_right" (formula "14"))
         (rule "imp_right" (formula "15"))
         (rule "hide_left" (formula "4") (userinteraction))
         (builtin "Eliminate Universal Quantifiers" (formula "15"))
      )
      (branch " ! m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1,0"))
         (rule "concrete_or_4" (formula "1") (term "0"))
         (rule "not_left" (formula "1"))
         (rule "modality_split_right" (formula "13"))
         (rule "assignment_to_update_right" (formula "13"))
         (builtin "Update Simplification" (formula "13"))
         (rule "ODESolve_right" (formula "13"))
         (builtin "Update Simplification" (formula "13"))
         (rule "add_zero_right" (formula "13") (term "0,1,1,0,0,1,0"))
         (rule "all_right" (formula "13") (inst "skC=t6_0"))
         (rule "imp_right" (formula "13"))
         (rule "imp_right" (formula "14"))
         (rule "imp_right" (formula "15"))
         (builtin "Eliminate Existential Quantifier" (formula "15") (term "1"))
      )
   )
)
(branch " Case 2"
   (rule "assignment_to_update_right" (formula "6"))
   (builtin "Update Simplification" (formula "6"))
   (rule "imp_right" (formula "6"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "replace_known_left" (formula "1") (ifseqformula "1") (userinteraction))
   (rule "true_left" (formula "1"))
   (rule "box_choice_right" (formula "7"))
   (branch " Case 1"
      (rule "modality_split_right" (formula "7"))
      (rule "box_quest_right" (formula "7"))
      (builtin "Update Simplification" (formula "1"))
      (rule "modality_split_right" (formula "8"))
      (rule "random_ass_box_right" (formula "8"))
      (builtin "Update Simplification" (formula "8"))
      (rule "all_right" (formula "8") (inst "skC=a_11"))
      (rule "box_quest_right" (formula "8"))
      (builtin "Update Simplification" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "random_ass_dia_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ex_right" (formula "10") (inst "_NAME_MV_q=SB6"))
      (rule "modality_split_right" (formula "10"))
      (rule "if_then_right" (formula "10"))
      (branch " m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1"))
         (rule "concrete_or_3" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "modality_split_right" (formula "10"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "ODESolve_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "add_zero_right" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "all_right" (formula "10") (inst "skC=t12_0"))
         (rule "imp_right" (formula "10"))
         (rule "imp_right" (formula "11"))
         (rule "imp_right" (formula "12"))
         (builtin "Eliminate Universal Quantifiers" (formula "12"))
      )
      (branch " ! m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1,0"))
         (rule "concrete_or_3" (formula "1") (term "0"))
         (rule "concrete_not_1" (formula "1"))
         (rule "close_by_false" (formula "1"))
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "7"))
      (rule "box_quest_right" (formula "7"))
      (builtin "Update Simplification" (formula "1"))
      (rule "modality_split_right" (formula "8"))
      (rule "random_ass_box_right" (formula "8"))
      (builtin "Update Simplification" (formula "8"))
      (rule "all_right" (formula "8") (inst "skC=a_13"))
      (rule "box_quest_right" (formula "8"))
      (builtin "Update Simplification" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "random_ass_dia_right" (formula "10"))
      (builtin "Update Simplification" (formula "10"))
      (rule "ex_right" (formula "10") (inst "_NAME_MV_q=SB7"))
      (rule "modality_split_right" (formula "10"))
      (rule "if_then_right" (formula "10"))
      (branch " m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1"))
         (rule "concrete_or_3" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "modality_split_right" (formula "10"))
         (rule "assignment_to_update_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "ODESolve_right" (formula "10"))
         (builtin "Update Simplification" (formula "10"))
         (rule "add_zero_right" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "all_right" (formula "10") (inst "skC=t13_0"))
         (rule "imp_right" (formula "10"))
         (rule "imp_right" (formula "11"))
         (rule "imp_right" (formula "12"))
         (builtin "Eliminate Universal Quantifiers" (formula "4"))
      )
      (branch " ! m - z <= SB | state = brake"
         (builtin "Update Simplification" (formula "1"))
         (rule "eval_literals_for" (formula "1") (term "1,0"))
         (rule "concrete_or_3" (formula "1") (term "0"))
         (rule "concrete_not_1" (formula "1"))
         (rule "close_by_false" (formula "1"))
      )
   )
)
)

}
