\settings {
"#Proof-Settings-Config-File
#Mon May 11 16:47:44 CEST 2009
[DLOptions]counterExampleGenerator=Mathematica
[View]FontIndex=2
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[HOLLightOptions]ocamlPath=/usr/bin/ocaml
[Libraries]Default=acc.key-false, stringRules.key-false, deprecatedRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[DecisionProcedure]SmtBenchmarkArchiving=false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=false
[ReduceOptions]rlcadprojonly=DEFAULT
[DecisionProcedureForTest]=Cogent
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]ReduceSwitch\ rlanuexgcdnormalize=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[View]HideIntermediateProofsteps=false
[DLOptions]readdQuantifiers=true
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]csdpPath=/usr/bin/csdp
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]reduceBinary=/home/jdq/local/src/reduce-algebra/bin/reduce
[ReduceOptions]quantifierEliminationMethod=RLCAD
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Mathematica
[HOLLightOptions]hollightPath=/
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[ReduceOptions]rlqesqsc=DEFAULT
[QepcadOptions]qepcadPath=/home/jdq/local/src/qepcad/qesource
[General]SoundNotification=false
[Choice]DefaultChoices=throughout-throughout\:toutOn , transactions-transactions\:transactionsOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java , transactionAbort-transactionAbort\:abortOn , nullPointerPolicy-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=1000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DLOptions]applyGammaRules=NEVER
[View]MaxTooltipLines=40
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[QepcadOptions]saclibPath=/home/jdq/local/src/qepcad/saclib2.2.0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=40000
[DLOptions]odeSolver=Mathematica
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=DEFAULT
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DecisionProcedure]SmtZipProblemDir=false
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DecisionProcedure]SmtUseQuantifiers=true
[DLOptions]simplifyBeforeReduce=false
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=2000
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=transactions-transactions\:transactionsOn-transactions\:transactionsOff , throughout-throughout\:toutOn-throughout\:toutOff , programRules-programRules\:Java-programRules\:ODL-programRules\:dL , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck , javacard-javacard\:jcOff-javacard\:jcOn
[DecisionProcedure]=SIMPLIFY
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Groebnerian SOS
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[Model]Source=1
[HOLLightOptions]harrisonqePath=/
[DLOptions]BuiltInArithmetic=OFF
[View]ShowWholeTaclet=false
[DLOptions]counterexampleTest=ON
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[DLOptions]sosChecker=Internal SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=true
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=IBC
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=Mathematica
"
}

\functions {
R b;
R A;
R ep;
R c1;
R c2;
R c3;
}

\problem {
\[
  R vdes, t, tnew, t2, zeit, a, v, z, vc, zc, s ;
    z := 0 ;
    v := 0 ;
    zc := z ;
    vc := v ;
    t := 0 ;
    t2 := t ;
    tnew := t
  \] (   A >  0 & ep >  0 & b >  0 & vdes >= 0
      -> \[
           ((?-c1 * (vc - vdes) - c2 * s - c3 * vdes < A & -c1 * (vc - vdes) - c2 * s - c3 * vdes > -b ;
               {zc` = vc, vc` = -c1 * (vc - vdes) - c2 * s - c3 * vdes, s` = vc - vdes, t` = 1, -c1 * (vc - vdes) - c2 * s - c3 * vdes <= A, -c1 * (vc - vdes) - c2 * s - c3 * vdes >= -b, vc >= 0})
             ++ (?-c1 * (vc - vdes) - c2 * s - c3 * vdes >= A ;
               {zc` = vc, vc` = A, s` = vc - vdes, t` = 1, -c1 * (vc - vdes) - c2 * s - c3 * vdes >= A, vc >= 0})
             ++ (?-c1 * (vc - vdes) - c2 * s - c3 * vdes <= -b ;
               {zc` = vc, vc` = -b, s` = vc - vdes, t` = 1, -c1 * (vc - vdes) - c2 * s - c3 * vdes <= -b, vc >= 0}))* ;
             ?zc > z & t > 0
           \] \<
                (a := * ;
                  ?a >= -b & a <= A ;
                  tnew := 0 ;
                  {z` = v, v` = a, tnew` = 1, t2` = 1, v >= 0, tnew <= ep})*
                \> \<
                     a := * ;
                       ?a >= -b & a <= A ;
                       tnew := 0 ;
                       {z` = v, v` = a, tnew` = 1, t2` = 1, v >= 0, tnew <= ep}
                     \> (t = t2 & zc = z))

}

\proof {
(keyLog "0" (keyUser "jdq" ) (keyVersion "3f5651abe886597f7fcbafbae4ac191637a02b21"))

(branch "dummy ID"
(rule "modality_split_right" (formula "1"))
(rule "eliminate_variable_decl" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "modality_split_right" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "assignment_to_update_right" (formula "1"))
(builtin "Update Simplification" (formula "1"))
(rule "imp_right" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "and_left" (formula "1"))
(rule "modality_split_right" (formula "5"))
(rule "loop_inv_box_quan" (formula "5") (inst "inv=  zc <= 1 / 2 * A * t ^ 2 + z
& (  zc >= -1 / 2 * b * t ^ 2 + z
   & (  zc >= z
      & (vc <= A * t + v & (vc >= -b * t + v & vc >= 0))))"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification" (formula "5"))
   (builtin "Eliminate Universal Quantifiers" (formula "1"))
)
(branch " Use Case"
   (builtin "Update Simplification" (formula "5"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,1,1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,1,1,1,0,0,0,0,0"))
   (rule "eval_literals" (formula "5") (term "0,0,1,0,1,0,0,0,0,0"))
   (rule "all_right" (formula "5") (inst "skC=vc_1"))
   (rule "all_right" (formula "5") (inst "skC=s_1"))
   (rule "all_right" (formula "5") (inst "skC=zc_1"))
   (rule "all_right" (formula "5") (inst "skC=t_1"))
   (rule "imp_right" (formula "5"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "2"))
   (rule "and_left" (formula "3"))
   (rule "and_left" (formula "4"))
   (rule "and_left" (formula "5"))
   (rule "box_quest_right" (formula "11"))
   (builtin "Update Simplification" (formula "1"))
   (rule "and_left" (formula "1"))
   (rule "loop_var_dia" (formula "13") (inst "inv=  t - t2 >= (n + 1) * (ep / 2)
& t - t2 <= (n + 2) * (ep / 2)
& z = zc / t ^ 2 * t2 ^ 2
& v = t2 * (2 * zc / t ^ 2)
& t2 >= 0
& n >  -1
& v >= 0") (inst "n=n") (userinteraction))
   (branch " Variant Satisfiable"
      (builtin "Update Simplification" (formula "13"))
      (builtin "Eliminate Universal Quantifiers" (formula "13"))
   )
   (branch " Use Case"
      (builtin "Update Simplification" (formula "13"))
      (rule "eval_literals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0"))
      (rule "all_right" (formula "13") (inst "skC=a_1"))
      (rule "all_right" (formula "13") (inst "skC=v_2"))
      (rule "all_right" (formula "13") (inst "skC=z_2"))
      (rule "all_right" (formula "13") (inst "skC=t2_2"))
      (rule "all_right" (formula "13") (inst "skC=tnew_1"))
      (rule "imp_right" (formula "13"))
      (rule "ex_left" (formula "1") (inst "skC=n_1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "modality_split_right" (formula "21"))
      (rule "random_ass_dia_right" (formula "21"))
      (builtin "Update Simplification" (formula "21"))
      (rule "ex_right" (formula "21") (inst "qC=2 * zc_1 / (t_1) ^ 2") (userinteraction))
      (rule "modality_split_right" (formula "21"))
      (rule "diamond_quest_right" (formula "21"))
      (builtin "Update Simplification" (formula "21"))
      (rule "and_right" (formula "21"))
      (branch " Case 1"
         (builtin "Eliminate Universal Quantifiers" (formula "1"))
      )
      (branch " Case 2"
         (rule "modality_split_right" (formula "21"))
         (rule "assignment_to_update_right" (formula "21"))
         (builtin "Update Simplification" (formula "21"))
         (rule "ODESolve_right" (formula "21"))
         (builtin "Update Simplification" (formula "21"))
         (rule "add_zero_right" (formula "21") (term "0,1,1,0,0,1,0"))
         (rule "shift_paren_and" (formula "21") (term "0"))
         (rule "shift_paren_and" (formula "21") (term "0"))
         (rule "ex_right" (formula "21") (inst "qC=t_1 - t2_2") (userinteraction))
         (rule "reduce_form" (formula "21") (term "1,0,0") (userinteraction))
         (rule "full_simplify_form" (formula "21") (userinteraction))
         (rule "eval_literals" (formula "21") (term "1,1,0,1,0,0,1,0"))
         (rule "eval_literals" (formula "21") (term "1,1,0,1,1,1,1,0"))
         (rule "eval_literals" (formula "21") (term "1,1,0,0,1,0,1,1,1"))
         (rule "eval_literals" (formula "21") (term "1,1,1,0,0,0,1,1,1"))
         (rule "eval_literals" (formula "21") (term "1,1,0,0,1,1,1,1,1"))
         (rule "eval_literals" (formula "21") (term "0,1,1,0,0,0,1,1,1,1,1"))
         (rule "eval_literals" (formula "21") (term "1,1,1,0,0,0,1,0,1,1,1,0,0,1"))
         (rule "eval_literals" (formula "21") (term "1,1,0,1,0,1,1,1,0,1,1,1,0,0,1"))
         (rule "eval_literals" (formula "21") (term "1,1,0,1,0,1,0,1,0,1,1,1,0,0,1"))
         (rule "replace_known_left" (formula "21") (term "1,1,1,0,1,1") (ifseqformula "10"))
         (rule "concrete_and_3" (formula "21") (term "1,1,0,1,1"))
         (rule "replace_known_left" (formula "21") (term "1,1,1,1,1,1,0,1") (ifseqformula "10"))
         (rule "concrete_and_3" (formula "21") (term "1,1,1,1,1,0,1"))
         (rule "replace_known_left" (formula "21") (term "1,0,1,1,1,0,1") (ifseqformula "13"))
         (rule "concrete_and_3" (formula "21") (term "0,1,1,1,0,1"))
         (rule "replace_known_left" (formula "21") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "7"))
         (rule "concrete_and_3" (formula "21") (term "0,1,1,1,1,0,0,1"))
         (rule "replace_known_left" (formula "21") (term "0,1,0,1") (ifseqformula "7"))
         (rule "concrete_and_1" (formula "21") (term "1,0,1"))
         (rule "replace_known_left" (formula "21") (term "1,1,1,1,1,0,0,1") (ifseqformula "13"))
         (rule "concrete_and_3" (formula "21") (term "1,1,1,1,0,0,1"))
         (rule "replace_known_left" (formula "21") (term "0,1,1,0,0,1") (ifseqformula "10"))
         (rule "concrete_and_1" (formula "21") (term "1,1,0,0,1"))
         (rule "and_right" (formula "21"))
         (branch " Case 1"
            (rule "and_right" (formula "21"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
            (branch " Case 2"
               (rule "hide_left" (formula "11") (userinteraction))
               (rule "hide_left" (formula "11") (userinteraction))
               (builtin "Eliminate Universal Quantifiers" (formula "18"))
            )
         )
         (branch " Case 2"
            (rule "hide_left" (formula "11") (userinteraction))
            (rule "hide_left" (formula "11") (userinteraction))
            (rule "simplify_form_ass_right" (formula "19") (ifseqformula "16") (userinteraction))
            (rule "eval_literals" (formula "19") (term "1,1,0,0,1,1,1,1,0"))
            (rule "eval_literals" (formula "19") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "eval_literals" (formula "19") (term "1,1,1,0,0,0,1,1,0,0"))
            (rule "eval_literals" (formula "19") (term "1,1,1,0,0,0,1,1,1,0"))
            (rule "or_right" (formula "19"))
            (rule "or_right" (formula "19"))
            (rule "and_right" (formula "21"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
         )
      )
   )
   (branch " Variant Decreases"
      (builtin "Update Simplification" (formula "13"))
      (rule "eval_literals" (formula "13") (term "1,1,0,1,0,0,0,0,0"))
      (rule "eval_literals" (formula "13") (term "1,1,0,0,8,1,0,0,0,0"))
      (rule "all_right" (formula "13") (inst "skC=v_1"))
      (rule "all_right" (formula "13") (inst "skC=z_1"))
      (rule "all_right" (formula "13") (inst "skC=t2_1"))
      (rule "all_right" (formula "13") (inst "skC=n_0"))
      (rule "imp_right" (formula "13"))
      (rule "and_left" (formula "1"))
      (rule "and_left" (formula "2"))
      (rule "and_left" (formula "2"))
      (rule "and_left" (formula "2"))
      (rule "and_left" (formula "2"))
      (rule "and_left" (formula "2"))
      (rule "and_left" (formula "2"))
      (rule "modality_split_right" (formula "21"))
      (rule "random_ass_dia_right" (formula "21"))
      (builtin "Update Simplification" (formula "21"))
      (rule "ex_right" (formula "21") (inst "qC=2 * zc_1 / (t_1) ^ 2") (userinteraction))
      (rule "modality_split_right" (formula "21"))
      (rule "diamond_quest_right" (formula "21"))
      (builtin "Update Simplification" (formula "21"))
      (rule "and_right" (formula "21"))
      (branch " Case 1"
         (builtin "Eliminate Universal Quantifiers" (formula "1"))
      )
      (branch " Case 2"
         (rule "modality_split_right" (formula "21"))
         (rule "assignment_to_update_right" (formula "21"))
         (builtin "Update Simplification" (formula "21"))
         (rule "ODESolve_right" (formula "21"))
         (builtin "Update Simplification" (formula "21"))
         (rule "ex_right" (formula "21") (inst "qC=ep / 2") (userinteraction))
         (rule "reduce_form" (formula "21") (term "0,1") (userinteraction))
         (rule "simplify_form_ass_right" (formula "21") (ifseqformula "18") (userinteraction))
         (rule "eval_literals" (formula "21") (term "1,1,0,0,1,0"))
         (rule "eval_literals" (formula "21") (term "1,1,1,0,0,1"))
         (rule "eval_literals" (formula "21") (term "1,1,0,0,1,0,0"))
         (rule "eval_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0"))
         (rule "replace_known_left" (formula "21") (term "1,0,0,0,0") (ifseqformula "8"))
         (rule "concrete_and_3" (formula "21") (term "0,0,0,0"))
         (rule "replace_known_left" (formula "21") (term "0,0,0,0,0,0,0,0") (ifseqformula "1"))
         (rule "concrete_and_1" (formula "21") (term "0,0,0,0,0,0,0"))
         (rule "replace_known_left" (formula "21") (term "1,1") (ifseqformula "13"))
         (rule "concrete_or_3" (formula "21") (term "1"))
         (rule "concrete_and_3" (formula "21"))
         (rule "and_right" (formula "21"))
         (branch " Case 1"
            (builtin "Eliminate Universal Quantifiers" (formula "1"))
         )
         (branch " Case 2"
            (builtin "Eliminate Universal Quantifiers" (formula "18"))
         )
      )
   )
)
(branch " Body Preserves Invariant"
   (builtin "Update Simplification" (formula "5"))
   (rule "add_zero_right" (formula "5") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,1,1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "5") (term "1,0,1,1,1,1,0,0,0,0,0"))
   (rule "eval_literals" (formula "5") (term "0,0,1,0,1,0,0,0,0,0"))
   (rule "eval_literals" (formula "5") (term "0,0,0,1,0,1,0,8,1,0,0,0,0"))
   (rule "all_right" (formula "5") (inst "skC=vc_2"))
   (rule "all_right" (formula "5") (inst "skC=s_2"))
   (rule "all_right" (formula "5") (inst "skC=zc_2"))
   (rule "all_right" (formula "5") (inst "skC=t_2"))
   (rule "imp_right" (formula "5"))
   (rule "and_left" (formula "1"))
   (rule "and_left" (formula "2"))
   (rule "and_left" (formula "3"))
   (rule "and_left" (formula "4"))
   (rule "and_left" (formula "5"))
   (rule "shift_paren_and" (formula "11") (term "0,8"))
   (rule "box_choice_right" (formula "11"))
   (branch " Case 1"
      (rule "modality_split_right" (formula "11"))
      (rule "box_quest_right" (formula "11"))
      (builtin "Update Simplification" (formula "1"))
      (rule "and_left" (formula "1"))
      (rule "shift_paren_and" (formula "13") (term "1,1,0,8"))
      (rule "shift_paren_and" (formula "13") (term "0,8"))
      (rule "shift_paren_and" (formula "13") (term "0,8"))
      (rule "shift_paren_and" (formula "13") (term "0,0,8"))
      (rule "diffstrengthen" (formula "13") (inst "augment=vc <= A * t"))
      (branch " Invariant Valid"
         (rule "diffind" (formula "13"))
         (branch " Invariant Initially Valid"
            (builtin "Update Simplification" (formula "1"))
            (builtin "Update Simplification" (formula "14"))
            (rule "close_goal" (formula "14") (ifseqformula "7"))
         )
         (branch " ODE Preserves Invariant"
            (builtin "Update Simplification" (formula "13"))
            (builtin "Eliminate Universal Quantifiers" (formula "1"))
         )
      )
      (branch " Augmented Invariant"
         (rule "diffstrengthen" (formula "13") (inst "augment=vc >= -b * t"))
         (branch " Invariant Valid"
            (rule "diffind" (formula "13"))
            (branch " Invariant Initially Valid"
               (builtin "Update Simplification" (formula "1"))
               (builtin "Update Simplification" (formula "14"))
               (rule "close_goal" (formula "14") (ifseqformula "8"))
            )
            (branch " ODE Preserves Invariant"
               (builtin "Update Simplification" (formula "13"))
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
         )
         (branch " Augmented Invariant"
            (rule "diffstrengthen" (formula "13") (inst "augment=zc <= 1 / 2 * A * t ^ 2"))
            (branch " Invariant Valid"
               (rule "diffind" (formula "13"))
               (branch " Invariant Initially Valid"
                  (builtin "Update Simplification" (formula "1"))
                  (builtin "Update Simplification" (formula "14"))
                  (rule "close_goal" (formula "14") (ifseqformula "4"))
               )
               (branch " ODE Preserves Invariant"
                  (builtin "Update Simplification" (formula "13"))
                  (builtin "Eliminate Universal Quantifiers" (formula "1"))
               )
            )
            (branch " Augmented Invariant"
               (rule "diffstrengthen" (formula "13") (inst "augment=zc >= -1 / 2 * b * t ^ 2"))
               (branch " Invariant Valid"
                  (rule "diffind" (formula "13"))
                  (branch " Invariant Initially Valid"
                     (builtin "Update Simplification" (formula "1"))
                     (builtin "Update Simplification" (formula "14"))
                     (rule "close_goal" (formula "14") (ifseqformula "5"))
                  )
                  (branch " ODE Preserves Invariant"
                     (builtin "Update Simplification" (formula "13"))
                     (builtin "Eliminate Universal Quantifiers" (formula "1"))
                  )
               )
               (branch " Augmented Invariant"
                  (rule "diffstrengthen" (formula "13") (inst "augment=zc >= 0"))
                  (branch " Invariant Valid"
                     (rule "diffind" (formula "13"))
                     (branch " Invariant Initially Valid"
                        (builtin "Update Simplification" (formula "1"))
                        (builtin "Update Simplification" (formula "14"))
                        (rule "close_goal" (formula "14") (ifseqformula "6"))
                     )
                     (branch " ODE Preserves Invariant"
                        (builtin "Update Simplification" (formula "13"))
                        (builtin "Eliminate Universal Quantifiers" (formula "1"))
                     )
                  )
                  (branch " Augmented Invariant"
                     (rule "diffweaken" (formula "13"))
                     (builtin "Update Simplification" (formula "13"))
                     (builtin "Eliminate Universal Quantifiers" (formula "1"))
                  )
               )
            )
         )
      )
   )
   (branch " Case 2"
      (rule "box_choice_right" (formula "11"))
      (branch " Case 1"
         (rule "modality_split_right" (formula "11"))
         (rule "box_quest_right" (formula "11"))
         (builtin "Update Simplification" (formula "1"))
         (rule "shift_paren_and" (formula "12") (term "0,8"))
         (rule "shift_paren_and" (formula "12") (term "0,8"))
         (rule "shift_paren_and" (formula "12") (term "0,8"))
         (rule "diffreplace_box_right" (formula "12") (inst "#newsys={zc` = vc, vc` = A, t` = 1, vc >= 0}") (userinteraction))
         (branch " System entailment"
            (builtin "Update Simplification" (formula "12"))
            (builtin "Eliminate Universal Quantifiers" (formula "12"))
         )
         (branch " Generalisation"
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "ODESolve_right" (formula "11"))
            (builtin "Update Simplification" (formula "11"))
            (rule "add_zero_right" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,1,1,0"))
            (rule "all_right" (formula "11") (inst "skC=t26_0"))
            (rule "imp_right" (formula "11"))
            (rule "imp_right" (formula "12"))
            (rule "and_right" (formula "13"))
            (branch " Case 1"
               (rule "and_right" (formula "13"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "1"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "1"))
               )
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
         )
      )
      (branch " Case 2"
         (rule "modality_split_right" (formula "11"))
         (rule "box_quest_right" (formula "11"))
         (builtin "Update Simplification" (formula "1"))
         (rule "shift_paren_and" (formula "12") (term "0,8"))
         (rule "shift_paren_and" (formula "12") (term "1,0,8"))
         (rule "shift_paren_and" (formula "12") (term "0,8"))
         (rule "shift_paren_and" (formula "12") (term "0,0,8"))
         (rule "diffreplace_box_right" (formula "12") (inst "#newsys={zc` = vc, vc` = -b, t` = 1, vc >= 0}") (userinteraction))
         (branch " System entailment"
            (builtin "Update Simplification" (formula "12"))
            (builtin "Eliminate Universal Quantifiers" (formula "12"))
         )
         (branch " Generalisation"
            (rule "ODESolve_right" (formula "12"))
            (builtin "Update Simplification" (formula "12"))
            (rule "hide_left" (formula "1") (userinteraction))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,0,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,1,0,0,0,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,1,0,0,0,0,1,1,0"))
            (rule "eval_literals" (formula "11") (term "0,0,0,0,1,0,0,0,0,0,0,1,1,0"))
            (rule "all_right" (formula "11") (inst "skC=t24_1"))
            (rule "imp_right" (formula "11"))
            (rule "imp_right" (formula "12"))
            (rule "and_right" (formula "13"))
            (branch " Case 1"
               (rule "and_right" (formula "13"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "1"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "1"))
               )
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "1"))
            )
         )
      )
   )
)
)

}
