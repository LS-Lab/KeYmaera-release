\settings {
"#Proof-Settings-Config-File
#Mon Aug 27 22:18:54 CST 2012
[DLOptions]counterExampleGenerator=-
[DecisionProcedure]Exec=
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[Z3Options]z3ElimExPrefix=true
[MathematicaOptions]eliminateFractions=false
[TacletTranslation]filename=
[Libraries]Default=/home/gswagner/.keymaera/libraries/deprecatedRules.key-false, /Users/aplatzer/.keymaera/libraries/acc.key-false, /home/gswagner/.keymaera/libraries/acc.key-false, /Users/aplatzer/.keymaera/libraries/deprecatedRules.key-false, /Users/aplatzer/.keymaera/libraries/stringRules.key-false, /home/gswagner/.keymaera/libraries/stringRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=true
[ReduceOptions]rlcadprojonly=DEFAULT
[DLOptions]reduceOnFreshBranch=false
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[DLOptions]readdQuantifiers=true
[DecisionProcedure]ActiveRule=_noname_
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=OFF
[DLOptions]simplifier=Orbital
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=false
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[DecisionProcedure]Timeout=600
[ReduceOptions]rlqesqsc=DEFAULT
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]DefaultChoices=throughout-throughout\\:toutOn , transactions-transactions\\:transactionsOn , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff
[ReduceOptions]rlsimpl=ON
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=2000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DecisionProcedure]savefile=false
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[DecisionProcedure]showSMTResDialog=false
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[DLOptions]solveODE=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=2000000
[DLOptions]odeSolver=Orbital
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=DEFAULT
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[DecisionProcedure]multprovers=Z3\\=true\\:Yices\\=true\\:Simplify\\=true\\:CVC3\\=true
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DLOptions]simplifyBeforeReduce=false
[Z3Options]z3Prenex=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=2000
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]CexFinder=ITER_DEEP
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , throughout-throughout\\:toutOn-throughout\\:toutOff , programRules-programRules\\:Java-programRules\\:ODL-programRules\\:dL , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff-javacard\\:jcOn
[CohenhormanderOptions]eliminatorMode=DNF
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[ReduceOptions]rlanuexgcdnormalize=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Orbital
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[TacletTranslation]maxGeneric=2
[DLOptions]TracerStat=OFF
[TacletTranslation]saveToFile=false
[DLOptions]BuiltInArithmetic=NORMALISE_EQUATIONS
[DLOptions]counterexampleTest=ON
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[DecisionProcedure]WaitForAllProvers=false
[DLOptions]useODEIndFinMethods=false
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[ReduceOptions]rlnzden=ON
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[DecisionProcedure]WeakenSMTTranslation=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DLOptions]sosChecker=HOL Light
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=false
[ReduceOptions]rlposden=DEFAULT
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=LAZY
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=CohenHormander
"
}

/**
 * Models a lot of cars, but simple ones that just follow each other on a straight lane. QdL Hello World.
 * @see "Andre Platzer. Quantified differential dynamic logic for distributed hybrid systems. In Anuj Dawar and Helmut Veith, editors, Computer Science Logic, 19th EACSL Annual Conference, CSL 2010, Brno, Czech Republic, August 23-27, 2010. Proceedings, volume 6247 of LNCS, pages 469-483. Springer, 2010"
 * @author Andre Platzer.
 */
\sorts {
C;    /* cars */
}

\functions {
\nonRigid[Location] R x(C);
\nonRigid[Location] R v(C);
\nonRigid[Location] R a(C);
}

\problem {
(\forall C i. 
\forall C j. (
!(i = j) -> 
(  (x(i) <  x(j) & v(i) <= v(j) & a(i) <= a(j))
 | (x(i) >  x(j) & v(i) >= v(j) & a(i) >= a(j))
  )))
 ->  
  \[ (\forall C i. {x(i)' = v(i), v(i)' = a(i)})*@invariant(\forall C i. 
\forall C j. (
!(i = j) -> 
(  (x(i) <  x(j) & v(i) <= v(j) & a(i) <= a(j))
 | (x(i) >  x(j) & v(i) >= v(j) & a(i) >= a(j))
  ))) \]
      \forall C i. \forall C j. (!(i = j) -> !(x(i) = x(j)))

}

\proof {
(keyLog "0" (keyUser "aplatzer" ) (keyVersion "a6f5da9f4a301550a5f1e9b1f236aa9490c8c354"))

(autoModeTime "80476")

(branch "dummy ID"
(rule "imp_right" (formula "1") (nodenum "43299"))
(rule "loop_inv_box_fresh" (formula "2") (inst "inv=\\forall C i. 
  \\forall C j. 
    (   !i = j
     ->   x(i) <  x(j) & v(i) <= v(j) & a(i) <= a(j)
        | x(i) >  x(j) & v(i) >= v(j) & a(i) >= a(j))") (userinteraction) (nodenum "43443"))
(branch " Invariant Initially Valid"
   (rule "close_goal" (formula "2") (ifseqformula "1") (nodenum "45229"))
)
(branch " Use Case"
   (rule "imp_right" (formula "1") (nodenum "44999"))
   (rule "all_right" (formula "2") (inst "skC=i_0") (nodenum "45043"))
   (rule "all_right" (formula "2") (inst "skC=j_0") (nodenum "45100"))
   (rule "imp_right" (formula "2") (nodenum "45151"))
   (rule "not_right" (formula "3") (nodenum "45180"))
   (rule "not_left" (formula "2") (nodenum "45203"))
   (rule "all_left" (formula "2") (inst "qC=i_0") (userinteraction) (nodenum "45286"))
   (rule "all_left" (formula "2") (inst "qC=j_0") (userinteraction) (nodenum "45522"))
   (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "3") (nodenum "45978"))
   (rule "concrete_not_2" (formula "2") (term "0") (nodenum "46009"))
   (rule "concrete_impl_1" (formula "2") (nodenum "46034"))
   (rule "or_left" (formula "2") (nodenum "46052"))
   (branch " x(i_0) <  x(j_0) & v(i_0) <= v(j_0) & a(i_0) <= a(j_0)"
      (rule "and_left" (formula "2") (nodenum "46086"))
      (rule "and_left" (formula "2") (nodenum "46124"))
      (rule "polySimp_homoEq" (formula "1") (nodenum "46417"))
      (rule "eval_literals" (formula "1") (term "1,1,0") (nodenum "46471"))
      (rule "polySimp_addComm0" (formula "1") (term "0") (nodenum "46514"))
      (rule "inEqSimp_commuteLeq" (formula "4") (nodenum "46547"))
      (rule "inEqSimp_commuteLt" (formula "2") (nodenum "46578"))
      (rule "inEqSimp_commuteLeq" (formula "3") (nodenum "46608"))
      (rule "polySimp_sepPosMonomial" (formula "1") (nodenum "46639"))
      (rule "eval_literals" (formula "1") (term "1,1") (nodenum "46672"))
      (rule "mul_literals_right" (formula "1") (term "1") (nodenum "46705"))
      (rule "mul_one_right" (formula "1") (term "1") (nodenum "46738"))
      (rule "close_ineq_eq_2" (formula "1") (ifseqformula "2") (nodenum "46765"))
   )
   (branch " x(i_0) >  x(j_0) & v(i_0) >= v(j_0) & a(i_0) >= a(j_0)"
      (rule "and_left" (formula "2") (nodenum "46169"))
      (rule "and_left" (formula "2") (nodenum "46212"))
      (rule "close_ineq_eq_2" (formula "1") (ifseqformula "2") (nodenum "46268"))
   )
)
(branch " Body Preserves Invariant"
   (rule "imp_right" (formula "1") (nodenum "44975"))
   (rule "inEqSimp_commuteLt" (formula "1") (term "0,0,0,1,0,0") (nodenum "46983"))
   (rule "inEqSimp_commuteGt" (formula "2") (term "0,0,1,1,0,0,0") (nodenum "47032"))
   (rule "inEqSimp_commuteLt" (formula "2") (term "0,0,0,1,0,0,0") (nodenum "47063"))
   (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0,1,1,0,0,0") (nodenum "47094"))
   (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0") (nodenum "47125"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0") (nodenum "47156"))
   (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,1,1,0,0") (nodenum "47205"))
   (rule "inEqSimp_commuteGt" (formula "1") (term "0,0,1,1,0,0") (nodenum "47254"))
   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,1,0,0") (nodenum "47303"))
   (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,1,0,0,0") (nodenum "47348"))
   (rule "inEqSimp_commuteGeq" (formula "2") (term "1,1,1,0,0,0") (nodenum "47377"))
   (rule "inEqSimp_commuteGeq" (formula "1") (term "1,1,1,0,0") (nodenum "47406"))
   (rule "QODESolve_right" (formula "2") (userinteraction) (nodenum "47599"))
   (builtin "Update Simplification" (formula "2") (nodenum "47824"))
   (rule "apply_subst_gen" (formula "2") (term "1,1,0,0,1,0,0,1,0") (nodenum "49242"))
   (rule "apply_subst_gen" (formula "2") (term "0,1,0,0,1,0,0,1,0") (nodenum "49288"))
   (rule "apply_subst_gen" (formula "2") (term "1,1,0,1,1,0,0,1,0") (nodenum "49335"))
   (rule "apply_subst_gen" (formula "2") (term "0,1,0,1,1,0,0,1,0") (nodenum "49362"))
   (rule "apply_subst_gen" (formula "2") (term "1,0,0,1,1,0,0,1,0") (nodenum "49395"))
   (rule "apply_subst_gen" (formula "2") (term "0,0,0,1,1,0,0,1,0") (nodenum "49465"))
   (rule "apply_subst_gen" (formula "2") (term "1,0,0,0,1,0,0,1,0") (nodenum "49531"))
   (rule "apply_subst_gen" (formula "2") (term "0,0,0,0,1,0,0,1,0") (nodenum "49558"))
   (builtin "Update Simplification" (formula "2") (nodenum "49592"))
   (rule "all_right" (formula "2") (inst "skC=t_0") (nodenum "49817"))
   (rule "imp_right" (formula "2") (nodenum "50029"))
   (rule "all_right" (formula "3") (inst "skC=i_1") (nodenum "50075"))
   (rule "all_right" (formula "3") (inst "skC=j_1") (nodenum "50317"))
   (rule "imp_right" (formula "3") (nodenum "50548"))
   (rule "or_right" (formula "4") (nodenum "50577"))
   (rule "not_left" (formula "1") (nodenum "50612"))
   (rule "decompose_fract" (formula "5") (term "0,1,1,0,0") (nodenum "50633"))
   (rule "eval_literals_for" (formula "5") (term "0,0,1,1,0,0") (nodenum "50721"))
   (rule "ifthenelse_false" (formula "5") (term "0,1,1,0,0") (nodenum "50782"))
   (rule "decompose_fract" (formula "5") (term "0,1,0,0,0") (nodenum "50835"))
   (rule "eval_literals_for" (formula "5") (term "0,0,1,0,0,0") (nodenum "50901"))
   (rule "ifthenelse_false" (formula "5") (term "0,1,0,0,0") (nodenum "50958"))
   (rule "decompose_fract" (formula "4") (term "0,1,1,0,0") (nodenum "51011"))
   (rule "eval_literals_for" (formula "4") (term "0,0,1,1,0,0") (nodenum "51050"))
   (rule "ifthenelse_false" (formula "4") (term "0,1,1,0,0") (nodenum "51089"))
   (rule "decompose_fract" (formula "4") (term "0,1,0,0,0") (nodenum "51128"))
   (rule "eval_literals_for" (formula "4") (term "0,0,1,0,0,0") (nodenum "51167"))
   (rule "ifthenelse_false" (formula "4") (term "0,1,0,0,0") (nodenum "51206"))
   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0") (nodenum "51245"))
   (rule "eval_literals" (formula "5") (term "1,1,0,1,0") (nodenum "51304"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,0") (nodenum "51362"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,1,0") (nodenum "51416"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,0") (nodenum "51482"))
   (rule "polySimp_expandPow" (formula "5") (term "1,1,1,0,0") (nodenum "51541"))
   (rule "eval_literals_for" (formula "5") (term "0,1,1,1,0,0") (nodenum "51631"))
   (rule "ifthenelse_true" (formula "5") (term "1,1,1,0,0") (nodenum "51695"))
   (rule "eval_literals" (formula "5") (term "1,1,1,1,1,0,0") (nodenum "51749"))
   (rule "pow_one" (formula "5") (term "1,1,1,1,0,0") (nodenum "51817"))
   (rule "polySimp_mulComm1" (formula "5") (term "1,1,0,0") (nodenum "51877"))
   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,1,0,0") (nodenum "51936"))
   (rule "polySimp_expandPow" (formula "4") (term "1,1,0,0,0") (nodenum "51996"))
   (rule "eval_literals_for" (formula "4") (term "0,1,1,0,0,0") (nodenum "52049"))
   (rule "ifthenelse_true" (formula "4") (term "1,1,0,0,0") (nodenum "52102"))
   (rule "eval_literals" (formula "4") (term "1,1,1,1,0,0,0") (nodenum "52156"))
   (rule "pow_one" (formula "4") (term "1,1,1,0,0,0") (nodenum "52210"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,0,0,0") (nodenum "52264"))
   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,0") (nodenum "52323"))
   (rule "polySimp_expandPow" (formula "5") (term "1,1,0,0,0") (nodenum "52383"))
   (rule "eval_literals_for" (formula "5") (term "0,1,1,0,0,0") (nodenum "52422"))
   (rule "ifthenelse_true" (formula "5") (term "1,1,0,0,0") (nodenum "52461"))
   (rule "eval_literals" (formula "5") (term "1,1,1,1,0,0,0") (nodenum "52500"))
   (rule "pow_one" (formula "5") (term "1,1,1,0,0,0") (nodenum "52539"))
   (rule "polySimp_mulComm1" (formula "5") (term "1,0,0,0") (nodenum "52578"))
   (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0") (nodenum "52617"))
   (rule "polySimp_expandPow" (formula "4") (term "1,1,1,0,0") (nodenum "52656"))
   (rule "eval_literals_for" (formula "4") (term "0,1,1,1,0,0") (nodenum "52695"))
   (rule "ifthenelse_true" (formula "4") (term "1,1,1,0,0") (nodenum "52734"))
   (rule "eval_literals" (formula "4") (term "1,1,1,1,1,0,0") (nodenum "52773"))
   (rule "pow_one" (formula "4") (term "1,1,1,1,0,0") (nodenum "52812"))
   (rule "polySimp_mulComm1" (formula "4") (term "1,1,0,0") (nodenum "52851"))
   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0,0") (nodenum "52890"))
   (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0") (nodenum "52929"))
   (rule "eval_literals" (formula "4") (term "1,1,0,1,0") (nodenum "52970"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0") (nodenum "53011"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0") (nodenum "53052"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1,0") (nodenum "53093"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,1,0") (nodenum "53134"))
   (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0") (nodenum "53189"))
   (rule "inEqSimp_homoInEq2" (formula "5") (term "0,0") (nodenum "53249"))
   (rule "eval_literals" (formula "5") (term "1,1,0,0,0") (nodenum "53302"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0") (nodenum "53355"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0") (nodenum "53409"))
   (rule "mul_literals_right" (formula "5") (term "1,1,0,0,0") (nodenum "53476"))
   (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0") (nodenum "53543"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0") (nodenum "53616"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,1,0") (nodenum "53682"))
   (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0") (nodenum "53723"))
   (rule "inEqSimp_homoInEq3" (formula "4") (term "0,0") (nodenum "53764"))
   (rule "eval_literals" (formula "4") (term "1,1,0,0,0") (nodenum "53805"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0") (nodenum "53846"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0") (nodenum "53887"))
   (rule "mul_literals_right" (formula "4") (term "1,1,0,0,0") (nodenum "53928"))
   (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0") (nodenum "53969"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,0") (nodenum "54010"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0") (nodenum "54051"))
   (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0") (nodenum "54107"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,0,0") (nodenum "54170"))
   (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0") (nodenum "54211"))
   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0") (nodenum "54252"))
   (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,0") (nodenum "54321"))
   (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0") (nodenum "54395"))
   (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,0,0") (nodenum "54436"))
   (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "1,0") (nodenum "54477"))
   (rule "eval_literals" (formula "5") (term "1,0,1,0") (nodenum "54531"))
   (rule "mul_literals_right" (formula "5") (term "0,1,0") (nodenum "54585"))
   (rule "mul_one_right" (formula "5") (term "0,1,0") (nodenum "54641"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "1,0") (nodenum "54688"))
   (rule "eval_literals" (formula "4") (term "1,0,1,0") (nodenum "54735"))
   (rule "mul_literals_right" (formula "4") (term "0,1,0") (nodenum "54782"))
   (rule "mul_one_right" (formula "4") (term "0,1,0") (nodenum "54829"))
   (rule "inEqSimp_sepNegMonomial3" (formula "5") (term "0,0") (nodenum "54876"))
   (rule "eval_literals" (formula "5") (term "1,0,0,0") (nodenum "54930"))
   (rule "mul_literals_right" (formula "5") (term "0,0,0") (nodenum "54984"))
   (rule "inEqSimp_sepNegMonomial2" (formula "4") (term "0,0") (nodenum "55034"))
   (rule "eval_literals" (formula "4") (term "1,0,0,0") (nodenum "55081"))
   (rule "mul_literals_right" (formula "4") (term "0,0,0") (nodenum "55128"))
   (rule "all_left" (formula "2") (inst "qC=i_1") (userinteraction) (nodenum "58856"))
   (rule "all_left" (formula "2") (inst "qC=j_1") (userinteraction) (nodenum "59096"))
   (rule "skolemize" (formula "5") (term "0,1,0,0,0,1,0,0") (inst "sk=x_j_1") (nodenum "59256"))
   (rule "applyEq_sym" (formula "3") (term "0,0,0,0,1") (inst "t1C=x_j_1") (ifseqformula "1") (nodenum "59397"))
   (rule "applyEq_sym" (formula "3") (term "0,0,0,1,1") (inst "t1C=x_j_1") (ifseqformula "1") (nodenum "59467"))
   (rule "applyEq_sym" (formula "5") (term "0,1,0,0,0,1,0,0") (inst "t1C=x_j_1") (ifseqformula "1") (nodenum "59537"))
   (rule "hide_left" (formula "1") (nodenum "59597"))
   (rule "skolemize" (formula "5") (term "0,0,0,0,1,0,0") (inst "sk=x_i_1") (nodenum "59605"))
   (rule "applyEq_sym" (formula "3") (term "1,0,0,0,1") (inst "t1C=x_i_1") (ifseqformula "1") (nodenum "59739"))
   (rule "applyEq_sym" (formula "3") (term "1,0,0,1,1") (inst "t1C=x_i_1") (ifseqformula "1") (nodenum "59809"))
   (rule "applyEq_sym" (formula "5") (term "0,0,0,0,1,0,0") (inst "t1C=x_i_1") (ifseqformula "1") (nodenum "59879"))
   (rule "hide_left" (formula "1") (nodenum "59939"))
   (rule "skolemize" (formula "5") (term "0,1,0,1,1,0") (inst "sk=v_j_1") (nodenum "59947"))
   (rule "applyEq_sym" (formula "3") (term "0,1,0,0,1") (inst "t1C=v_j_1") (ifseqformula "1") (nodenum "60070"))
   (rule "applyEq_sym" (formula "3") (term "0,1,0,1,1") (inst "t1C=v_j_1") (ifseqformula "1") (nodenum "60140"))
   (rule "applyEq_sym" (formula "5") (term "0,0,1,0,1,0,0") (inst "t1C=v_j_1") (ifseqformula "1") (nodenum "60210"))
   (rule "applyEq_sym" (formula "5") (term "0,1,0,1,1,0") (inst "t1C=v_j_1") (ifseqformula "1") (nodenum "60308"))
   (rule "applyEq_sym" (formula "6") (term "0,0,1,0,1,0,0") (inst "t1C=v_j_1") (ifseqformula "1") (nodenum "60370"))
   (rule "hide_left" (formula "1") (nodenum "60430"))
   (rule "skolemize" (formula "5") (term "0,0,1,1,0") (inst "sk=v_i_1") (nodenum "60438"))
   (rule "applyEq_sym" (formula "3") (term "1,1,0,0,1") (inst "t1C=v_i_1") (ifseqformula "1") (nodenum "60554"))
   (rule "applyEq_sym" (formula "3") (term "1,1,0,1,1") (inst "t1C=v_i_1") (ifseqformula "1") (nodenum "60624"))
   (rule "applyEq_sym" (formula "5") (term "0,1,0,0,1,0,0") (inst "t1C=v_i_1") (ifseqformula "1") (nodenum "60694"))
   (rule "applyEq_sym" (formula "5") (term "0,0,1,1,0") (inst "t1C=v_i_1") (ifseqformula "1") (nodenum "60793"))
   (rule "applyEq_sym" (formula "6") (term "0,1,0,0,1,0,0") (inst "t1C=v_i_1") (ifseqformula "1") (nodenum "60855"))
   (rule "hide_left" (formula "1") (nodenum "60915"))
   (rule "skolemize" (formula "5") (term "0,1") (inst "sk=a_j_1") (nodenum "60923"))
   (rule "applyEq_sym" (formula "3") (term "0,1,0,1") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61006"))
   (rule "applyEq_sym" (formula "3") (term "0,1,1,1") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61068"))
   (rule "applyEq_sym" (formula "5") (term "0,0,0,0,0,0") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61115"))
   (rule "applyEq_sym" (formula "5") (term "0,0,1,0") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61205"))
   (rule "applyEq_sym" (formula "5") (term "0,1") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61267"))
   (rule "applyEq_sym" (formula "6") (term "0,0,0,0,0,0") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61298"))
   (rule "applyEq_sym" (formula "6") (term "0,0,1,0") (inst "t1C=a_j_1") (ifseqformula "1") (nodenum "61360"))
   (rule "hide_left" (formula "1") (nodenum "61420"))
   (rule "skolemize" (formula "5") (term "1,1") (inst "sk=a_i_1") (nodenum "61428"))
   (rule "applyEq_sym" (formula "3") (term "1,1,0,1") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61511"))
   (rule "applyEq_sym" (formula "3") (term "1,1,1,1") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61573"))
   (rule "applyEq_sym" (formula "5") (term "0,0,0,1,1,0,0") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61620"))
   (rule "applyEq_sym" (formula "5") (term "0,1,1,1,0") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61720"))
   (rule "applyEq_sym" (formula "5") (term "1,1") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61792"))
   (rule "applyEq_sym" (formula "6") (term "0,0,0,1,1,0,0") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61823"))
   (rule "applyEq_sym" (formula "6") (term "0,1,1,1,0") (inst "t1C=a_i_1") (ifseqformula "1") (nodenum "61885"))
   (rule "hide_left" (formula "1") (nodenum "61945"))
   (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "3") (nodenum "62578"))
   (rule "concrete_not_2" (formula "2") (term "0") (nodenum "62613"))
   (rule "concrete_impl_1" (formula "2") (nodenum "62642"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0") (nodenum "62664"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,0,0") (nodenum "62727"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,0,0") (nodenum "62800"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,1,0") (nodenum "62871"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0") (nodenum "62920"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,1,0") (nodenum "62969"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0,0") (nodenum "63018"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,0,0") (nodenum "63067"))
   (rule "polySimp_mulComm1" (formula "5") (term "0,1,1,0,0") (nodenum "63116"))
   (rule "polySimp_mulComm1" (formula "5") (term "0,0,0,0") (nodenum "63195"))
   (rule "polySimp_mulComm1" (formula "4") (term "0,1,1,0,0") (nodenum "63260"))
   (rule "polySimp_mulComm1" (formula "4") (term "0,0,0,0") (nodenum "63309"))
   (rule "or_left" (formula "2") (nodenum "63358"))
   (branch " x_j_1 >  x_i_1 & v_j_1 >= v_i_1 & a_j_1 >= a_i_1"
      (rule "and_left" (formula "2") (nodenum "63400"))
      (rule "and_left" (formula "2") (nodenum "63447"))
      (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "4") (nodenum "63507"))
      (rule "concrete_and_3" (formula "6") (nodenum "63533"))
      (rule "and_right" (formula "7") (nodenum "63564"))
      (branch " Case 1"
         (rule "and_right" (formula "6") (nodenum "63624"))
         (branch " Case 1"
            (rule "greater_right" (formula "6") (nodenum "63700"))
            (rule "inEqSimp_commuteGeq" (formula "1") (nodenum "63735"))
            (rule "and_right" (formula "7") (nodenum "63777"))
            (branch " Case 1"
               (rule "less_right" (formula "7") (nodenum "63849"))
               (rule "elimGcdLeq" (formula "2") (inst "elimGcd=1 / 2") (nodenum "63900"))
               (rule "eval_literals_for" (formula "2") (term "0") (nodenum "64028"))
               (rule "ifthenelse_true_for" (formula "2") (nodenum "64047"))
               (rule "eval_literals" (formula "2") (term "1,1") (nodenum "64081"))
               (rule "eval_literals" (formula "2") (term "1,0") (nodenum "64121"))
               (rule "mul_literals_right" (formula "2") (term "0") (nodenum "64163"))
               (rule "mul_one_right" (formula "2") (term "0") (nodenum "64207"))
               (rule "polySimp_mulComm0" (formula "2") (term "1") (nodenum "64241"))
               (rule "polySimp_rightDist" (formula "2") (term "1") (nodenum "64282"))
               (rule "mul_literals_right" (formula "2") (term "1,1") (nodenum "64337"))
               (rule "mul_one_right" (formula "2") (term "1,1") (nodenum "64387"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1") (nodenum "64427"))
               (rule "mul_literals_right" (formula "2") (term "1,0,1") (nodenum "64490"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,1") (nodenum "64551"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1") (nodenum "64622"))
               (rule "mul_literals_right" (formula "2") (term "1,0,0,0,1") (nodenum "64700"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,1") (nodenum "64770"))
               (rule "elimGcdGeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "64843"))
               (rule "eval_literals_for" (formula "1") (term "0") (nodenum "64886"))
               (rule "ifthenelse_true_for" (formula "1") (nodenum "64905"))
               (rule "eval_literals" (formula "1") (term "1,1") (nodenum "64948"))
               (rule "eval_literals" (formula "1") (term "1,0") (nodenum "64991"))
               (rule "mul_literals_right" (formula "1") (term "0") (nodenum "65034"))
               (rule "mul_one_right" (formula "1") (term "0") (nodenum "65077"))
               (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "65120"))
               (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "65163"))
               (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "65206"))
               (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "65249"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "65292"))
               (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "65335"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "65378"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "65421"))
               (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "65464"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "65507"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "65549"))
            )
            (branch " Case 2"
               (rule "less_equal_right" (formula "7") (nodenum "65551"))
               (rule "elimGcdLeq" (formula "2") (inst "elimGcd=1 / 2") (nodenum "65598"))
               (rule "eval_literals_for" (formula "2") (term "0") (nodenum "65609"))
               (rule "ifthenelse_true_for" (formula "2") (nodenum "65620"))
               (rule "eval_literals" (formula "2") (term "1,1") (nodenum "65631"))
               (rule "eval_literals" (formula "2") (term "1,0") (nodenum "65642"))
               (rule "mul_literals_right" (formula "2") (term "0") (nodenum "65653"))
               (rule "mul_one_right" (formula "2") (term "0") (nodenum "65664"))
               (rule "polySimp_mulComm0" (formula "2") (term "1") (nodenum "65675"))
               (rule "polySimp_rightDist" (formula "2") (term "1") (nodenum "65686"))
               (rule "mul_literals_right" (formula "2") (term "1,1") (nodenum "65697"))
               (rule "mul_one_right" (formula "2") (term "1,1") (nodenum "65708"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1") (nodenum "65719"))
               (rule "mul_literals_right" (formula "2") (term "1,0,1") (nodenum "65730"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,1") (nodenum "65741"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1") (nodenum "65752"))
               (rule "mul_literals_right" (formula "2") (term "1,0,0,0,1") (nodenum "65763"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,1") (nodenum "65774"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "65784"))
            )
         )
         (branch " Case 2"
            (rule "greater_equal_right" (formula "6") (nodenum "65786"))
            (rule "inEqSimp_commuteGt" (formula "1") (nodenum "65820"))
            (rule "and_right" (formula "7") (nodenum "65858"))
            (branch " Case 1"
               (rule "less_right" (formula "7") (nodenum "65882"))
               (rule "elimGcdGeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "65898"))
               (rule "eval_literals_for" (formula "1") (term "0") (nodenum "65909"))
               (rule "ifthenelse_true_for" (formula "1") (nodenum "65920"))
               (rule "eval_literals" (formula "1") (term "1,1") (nodenum "65931"))
               (rule "eval_literals" (formula "1") (term "1,0") (nodenum "65942"))
               (rule "mul_literals_right" (formula "1") (term "0") (nodenum "65953"))
               (rule "mul_one_right" (formula "1") (term "0") (nodenum "65964"))
               (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "65975"))
               (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "65986"))
               (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "65997"))
               (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "66008"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "66019"))
               (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "66030"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "66041"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "66052"))
               (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "67701"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "67712"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67722"))
            )
            (branch " Case 2"
               (rule "less_equal_right" (formula "7") (nodenum "66063"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "66075"))
            )
         )
      )
      (branch " Case 2"
         (rule "less_equal_right" (formula "7") (nodenum "66077"))
         (rule "and_right" (formula "7") (nodenum "66114"))
         (branch " Case 1"
            (rule "greater_right" (formula "7") (nodenum "66138"))
            (rule "inEqSimp_commuteGeq" (formula "1") (nodenum "66151"))
            (rule "elimGcdLeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "66165"))
            (rule "eval_literals_for" (formula "1") (term "0") (nodenum "66176"))
            (rule "ifthenelse_true_for" (formula "1") (nodenum "66187"))
            (rule "eval_literals" (formula "1") (term "1,1") (nodenum "66198"))
            (rule "eval_literals" (formula "1") (term "1,0") (nodenum "66209"))
            (rule "mul_literals_right" (formula "1") (term "0") (nodenum "66220"))
            (rule "mul_one_right" (formula "1") (term "0") (nodenum "66231"))
            (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "66242"))
            (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "66253"))
            (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "66264"))
            (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "66275"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "66286"))
            (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "66297"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "66308"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "66319"))
            (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "66330"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "66341"))
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "66351"))
         )
         (branch " Case 2"
            (rule "greater_equal_right" (formula "7") (nodenum "66353"))
            (rule "inEqSimp_commuteGt" (formula "1") (nodenum "66366"))
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "66376"))
         )
      )
   )
   (branch " x_j_1 <  x_i_1 & v_j_1 <= v_i_1 & a_j_1 <= a_i_1"
      (rule "and_left" (formula "2") (nodenum "66378"))
      (rule "and_left" (formula "2") (nodenum "66420"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "4") (nodenum "66470"))
      (rule "concrete_and_3" (formula "7") (nodenum "66496"))
      (rule "and_right" (formula "6") (nodenum "66517"))
      (branch " Case 1"
         (rule "and_right" (formula "7") (nodenum "66567"))
         (branch " Case 1"
            (rule "less_right" (formula "7") (nodenum "66595"))
            (rule "and_right" (formula "7") (nodenum "66616"))
            (branch " Case 1"
               (rule "greater_right" (formula "7") (nodenum "66640"))
               (rule "inEqSimp_commuteGeq" (formula "1") (nodenum "66653"))
               (rule "elimGcdGeq" (formula "2") (inst "elimGcd=1 / 2") (nodenum "66670"))
               (rule "eval_literals_for" (formula "2") (term "0") (nodenum "66681"))
               (rule "ifthenelse_true_for" (formula "2") (nodenum "66692"))
               (rule "eval_literals" (formula "2") (term "1,1") (nodenum "66703"))
               (rule "eval_literals" (formula "2") (term "1,0") (nodenum "66714"))
               (rule "mul_literals_right" (formula "2") (term "0") (nodenum "66725"))
               (rule "mul_one_right" (formula "2") (term "0") (nodenum "66736"))
               (rule "polySimp_mulComm0" (formula "2") (term "1") (nodenum "66747"))
               (rule "polySimp_rightDist" (formula "2") (term "1") (nodenum "66758"))
               (rule "mul_literals_right" (formula "2") (term "1,1") (nodenum "66769"))
               (rule "mul_one_right" (formula "2") (term "1,1") (nodenum "66780"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1") (nodenum "66791"))
               (rule "mul_literals_right" (formula "2") (term "1,0,1") (nodenum "66802"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,1") (nodenum "66813"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1") (nodenum "66824"))
               (rule "mul_literals_right" (formula "2") (term "1,0,0,0,1") (nodenum "66835"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,1") (nodenum "66846"))
               (rule "elimGcdLeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "66860"))
               (rule "eval_literals_for" (formula "1") (term "0") (nodenum "66871"))
               (rule "ifthenelse_true_for" (formula "1") (nodenum "66882"))
               (rule "eval_literals" (formula "1") (term "1,1") (nodenum "66893"))
               (rule "eval_literals" (formula "1") (term "1,0") (nodenum "66904"))
               (rule "mul_literals_right" (formula "1") (term "0") (nodenum "66915"))
               (rule "mul_one_right" (formula "1") (term "0") (nodenum "66926"))
               (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "66937"))
               (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "66948"))
               (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "66959"))
               (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "66970"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "66981"))
               (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "66992"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "67003"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "67014"))
               (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "67025"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "67036"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67046"))
            )
            (branch " Case 2"
               (rule "greater_equal_right" (formula "7") (nodenum "67048"))
               (rule "inEqSimp_commuteGt" (formula "1") (nodenum "67061"))
               (rule "elimGcdGeq" (formula "2") (inst "elimGcd=1 / 2") (nodenum "67075"))
               (rule "eval_literals_for" (formula "2") (term "0") (nodenum "67086"))
               (rule "ifthenelse_true_for" (formula "2") (nodenum "67097"))
               (rule "eval_literals" (formula "2") (term "1,1") (nodenum "67108"))
               (rule "eval_literals" (formula "2") (term "1,0") (nodenum "67119"))
               (rule "mul_literals_right" (formula "2") (term "0") (nodenum "67130"))
               (rule "mul_one_right" (formula "2") (term "0") (nodenum "67141"))
               (rule "polySimp_mulComm0" (formula "2") (term "1") (nodenum "67152"))
               (rule "polySimp_rightDist" (formula "2") (term "1") (nodenum "67163"))
               (rule "mul_literals_right" (formula "2") (term "1,1") (nodenum "67174"))
               (rule "mul_one_right" (formula "2") (term "1,1") (nodenum "67185"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1") (nodenum "67196"))
               (rule "mul_literals_right" (formula "2") (term "1,0,1") (nodenum "67207"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,1") (nodenum "67218"))
               (rule "polySimp_rightDist" (formula "2") (term "0,0,0,1") (nodenum "67229"))
               (rule "mul_literals_right" (formula "2") (term "1,0,0,0,1") (nodenum "67240"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,0,1") (nodenum "67251"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67261"))
            )
         )
         (branch " Case 2"
            (rule "less_equal_right" (formula "7") (nodenum "67263"))
            (rule "and_right" (formula "7") (nodenum "67281"))
            (branch " Case 1"
               (rule "greater_right" (formula "7") (nodenum "67305"))
               (rule "inEqSimp_commuteGeq" (formula "1") (nodenum "67318"))
               (rule "elimGcdLeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "67332"))
               (rule "eval_literals_for" (formula "1") (term "0") (nodenum "67343"))
               (rule "ifthenelse_true_for" (formula "1") (nodenum "67354"))
               (rule "eval_literals" (formula "1") (term "1,1") (nodenum "67365"))
               (rule "eval_literals" (formula "1") (term "1,0") (nodenum "67724"))
               (rule "mul_literals_right" (formula "1") (term "0") (nodenum "67735"))
               (rule "mul_one_right" (formula "1") (term "0") (nodenum "67746"))
               (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "67757"))
               (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "67768"))
               (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "67779"))
               (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "67790"))
               (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "67801"))
               (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "67812"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "67823"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "67834"))
               (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "67845"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "67856"))
               (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67866"))
            )
            (branch " Case 2"
               (rule "greater_equal_right" (formula "7") (nodenum "67376"))
               (rule "close_ineq" (formula "1") (ifseqformula "2") (nodenum "67391"))
            )
         )
      )
      (branch " Case 2"
         (rule "greater_equal_right" (formula "6") (nodenum "67395"))
         (rule "inEqSimp_commuteGt" (formula "1") (nodenum "67429"))
         (rule "and_right" (formula "7") (nodenum "67459"))
         (branch " Case 1"
            (rule "less_right" (formula "7") (nodenum "67483"))
            (rule "elimGcdGeq" (formula "1") (inst "elimGcd=1 / 2") (nodenum "67499"))
            (rule "eval_literals_for" (formula "1") (term "0") (nodenum "67510"))
            (rule "ifthenelse_true_for" (formula "1") (nodenum "67521"))
            (rule "eval_literals" (formula "1") (term "1,1") (nodenum "67532"))
            (rule "eval_literals" (formula "1") (term "1,0") (nodenum "67543"))
            (rule "mul_literals_right" (formula "1") (term "0") (nodenum "67554"))
            (rule "mul_one_right" (formula "1") (term "0") (nodenum "67565"))
            (rule "polySimp_mulComm0" (formula "1") (term "1") (nodenum "67576"))
            (rule "polySimp_rightDist" (formula "1") (term "1") (nodenum "67587"))
            (rule "mul_literals_right" (formula "1") (term "1,1") (nodenum "67598"))
            (rule "mul_one_right" (formula "1") (term "1,1") (nodenum "67609"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1") (nodenum "67620"))
            (rule "mul_literals_right" (formula "1") (term "1,0,1") (nodenum "67631"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,1") (nodenum "67642"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1") (nodenum "67653"))
            (rule "mul_literals_right" (formula "1") (term "1,0,0,0,1") (nodenum "67664"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1") (nodenum "67675"))
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67685"))
         )
         (branch " Case 2"
            (rule "less_equal_right" (formula "7") (nodenum "67687"))
            (builtin "Eliminate Universal Quantifiers" (formula "3") (nodenum "67699"))
         )
      )
   )
)
)

}
