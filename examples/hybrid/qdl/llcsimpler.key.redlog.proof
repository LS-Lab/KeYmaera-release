\settings {
"#Proof-Settings-Config-File
#Mon Aug 20 11:15:19 EDT 2012
[DLOptions]counterExampleGenerator=-
[DecisionProcedure]Exec=
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[Z3Options]z3ElimExPrefix=true
[MathematicaOptions]eliminateFractions=false
[TacletTranslation]filename=
[Libraries]Default=/Users/aplatzer/.keymaera/libraries/acc.key-false, /Users/aplatzer/.keymaera/libraries/deprecatedRules.key-false, /Users/aplatzer/.keymaera/libraries/stringRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=true
[ReduceOptions]rlcadprojonly=DEFAULT
[DLOptions]reduceOnFreshBranch=false
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[DLOptions]readdQuantifiers=true
[DecisionProcedure]ActiveRule=_noname_
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Orbital
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[DecisionProcedure]Timeout=600
[ReduceOptions]rlqesqsc=OFF
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]DefaultChoices=transactions-transactions\\:transactionsOn , throughout-throughout\\:toutOn , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff
[ReduceOptions]rlsimpl=ON
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=2000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DecisionProcedure]savefile=false
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[DecisionProcedure]showSMTResDialog=false
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[DLOptions]solveODE=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=3000
[DLOptions]odeSolver=Orbital
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=OFF
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[DecisionProcedure]multprovers=Z3\\=true\\:Yices\\=true\\:Simplify\\=true\\:CVC3\\=true
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DLOptions]simplifyBeforeReduce=false
[Z3Options]z3Prenex=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=0
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]CexFinder=ITER_DEEP
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java-programRules\\:ODL-programRules\\:dL , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff-javacard\\:jcOn
[CohenhormanderOptions]eliminatorMode=DNF
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[ReduceOptions]rlanuexgcdnormalize=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Orbital
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[TacletTranslation]maxGeneric=2
[DLOptions]TracerStat=OFF
[TacletTranslation]saveToFile=false
[DLOptions]BuiltInArithmetic=OFF
[DLOptions]counterexampleTest=OFF
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[DecisionProcedure]WaitForAllProvers=false
[DLOptions]useODEIndFinMethods=false
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[ReduceOptions]rlnzden=ON
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[DecisionProcedure]WeakenSMTTranslation=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DLOptions]sosChecker=Built-in SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=true
[ReduceOptions]rlposden=DEFAULT
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=LAZY
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=Reduce
"
}

\sorts {
C;
}
\programVariables {
	C f;
	C l;
	R t;
}
\functions {
\nonRigid[Location] R x(C);
\nonRigid[Location] R v(C);
\nonRigid[Location] R a(C);
R eps;
R A;
R B;
}
\problem {
     A >  0 & B >  0 & !f = l & eps >  0
   & (         B * x(l)
            >    B * x(f)
               + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
          & x(l) >  x(f)
        & v(f) >= 0
      & v(l) >= 0)
-> \[
     (a(l) := -(B) ;
       (a(f) := -(B)
         ++ (?(B * x(l) > (B * x(f) + 1 / 2 * (v(f) ^ 2 - v(l) ^ 2)) + (A + B) * ((1 / 2 * A) * eps ^ 2 + eps * v(f))) ;
           a(f) := A) ;
         (t := 0 ;
           \forall C i. {x(i)' = v(i), 
           v(i)' = a(i), t' = 1, 
           v(l) >= 0, v(f) >= 0, 
           t <= eps})))*
     \] (         B * x(l)
               >    B * x(f)
                  + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
             & x(l) >  x(f)
           & v(f) >= 0
         & v(l) >= 0)

}

\proof {
(keyLog "0" (keyUser "aplatzer" ) (keyVersion "4c136f9a28672b4d6b12b959b7f58a86a2150a2a"))

(autoModeTime "63324")

(branch "dummy ID"
(rule "imp_right" (formula "1") (nodenum "670"))
(rule "and_left" (formula "1") (nodenum "697"))
(rule "and_left" (formula "1") (nodenum "722"))
(rule "and_left" (formula "3") (nodenum "759"))
(rule "and_left" (formula "1") (nodenum "797"))
(rule "and_left" (formula "4") (nodenum "822"))
(rule "not_left" (formula "2") (nodenum "860"))
(rule "and_left" (formula "1") (nodenum "875"))
(rule "and_left" (formula "4") (nodenum "924"))
(rule "loop_inv_box_fresh" (formula "9") (inst "inv=               B * x(l)
            >    B * x(f)
               + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
          & v(f) >= 0
        & v(l) >= 0
      & A >  0
    & B >  0
  & eps >  0
& x(l) >  x(f)") (userinteraction) (nodenum "1159"))
(branch " Invariant Initially Valid"
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "5") (nodenum "4243"))
   (rule "concrete_and_3" (formula "9") (nodenum "4267"))
   (rule "replace_known_left" (formula "9") (term "1,0") (ifseqformula "2") (nodenum "4292"))
   (rule "concrete_and_3" (formula "9") (term "0") (nodenum "4316"))
   (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "6") (nodenum "4339"))
   (rule "concrete_and_3" (formula "9") (term "0,0,0") (nodenum "4371"))
   (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "4") (nodenum "4399"))
   (rule "concrete_and_1" (formula "9") (term "0,0") (nodenum "4427"))
   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7") (nodenum "4451"))
   (rule "concrete_and_1" (formula "9") (term "0") (nodenum "4475"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1") (nodenum "4495"))
   (rule "concrete_and_1" (formula "9") (nodenum "4515"))
   (rule "close_goal" (formula "9") (ifseqformula "3") (nodenum "4541"))
)
(branch " Use Case"
   (rule "imp_right" (formula "1") (nodenum "3744"))
   (rule "and_left" (formula "1") (nodenum "3777"))
   (rule "and_left" (formula "1") (nodenum "3817"))
   (rule "and_left" (formula "1") (nodenum "3857"))
   (rule "and_left" (formula "1") (nodenum "3897"))
   (rule "and_left" (formula "1") (nodenum "3937"))
   (rule "and_left" (formula "1") (nodenum "3978"))
   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7") (nodenum "4047"))
   (rule "concrete_and_3" (formula "8") (term "0,0") (nodenum "4079"))
   (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1") (nodenum "4099"))
   (rule "concrete_and_1" (formula "8") (term "0") (nodenum "4123"))
   (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "2") (nodenum "4143"))
   (rule "concrete_and_1" (formula "8") (nodenum "4163"))
   (rule "close_goal" (formula "8") (ifseqformula "3") (nodenum "4189"))
)
(branch " Body Preserves Invariant"
   (rule "imp_right" (formula "1") (nodenum "2726"))
   (rule "and_left" (formula "1") (nodenum "2753"))
   (rule "and_left" (formula "1") (nodenum "2790"))
   (rule "and_left" (formula "1") (nodenum "2827"))
   (rule "and_left" (formula "1") (nodenum "2864"))
   (rule "and_left" (formula "1") (nodenum "2901"))
   (rule "and_left" (formula "1") (nodenum "2939"))
   (rule "modality_split_right" (formula "8") (nodenum "3001"))
   (rule "assignment_to_update_right" (formula "8") (nodenum "3014"))
   (rule "modality_split_right" (formula "8") (nodenum "3036"))
   (rule "box_choice_right" (formula "8") (nodenum "3052"))
   (branch " Case 1"
      (rule "assignment_to_update_right" (formula "8") (nodenum "3081"))
      (builtin "Update Simplification" (formula "8") (nodenum "3112"))
      (rule "modality_split_right" (formula "8") (nodenum "3128"))
      (rule "assignment_to_update_right" (formula "8") (nodenum "3144"))
      (builtin "Update Simplification" (formula "8") (nodenum "3166"))
      (rule "QODESolve_right" (formula "8") (userinteraction) (nodenum "4646"))
      (builtin "Update Simplification" (formula "8") (nodenum "5169"))
      (rule "apply_subst_gen" (formula "8") (term "0,1,0,1,0,0,1,0") (nodenum "16229"))
      (rule "apply_subst_gen" (formula "8") (term "0,1,1,1,0") (nodenum "16815"))
      (rule "apply_subst_gen" (formula "8") (term "0,1,0,0,0,0,1,1,0") (nodenum "24870"))
      (rule "apply_subst_gen" (formula "8") (term "0,1,0,0,0,0,0,1,1,0") (nodenum "24913"))
      (rule "apply_subst_gen" (formula "8") (term "1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "25488"))
      (rule "apply_subst_gen" (formula "8") (term "0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "25563"))
      (rule "apply_subst_gen" (formula "8") (term "1,1,1,1,0") (nodenum "25615"))
      (rule "apply_subst_gen" (formula "8") (term "1,0,0,0,0,0,0,0,1,1,0") (nodenum "25642"))
      (rule "apply_subst_gen" (formula "8") (term "0,0,0,1,0,0,1,0") (nodenum "25686"))
      (builtin "Update Simplification" (formula "8") (nodenum "31193"))
      (rule "close_eq" (formula "8") (term "0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "31646"))
      (rule "close_eq" (formula "8") (term "0,0,0,1,1,1,1,1,0") (nodenum "31735"))
      (rule "close_eq" (formula "8") (term "0,2,0,1,0,0,0,1,0,0,1,0") (nodenum "31764"))
      (rule "close_eq" (formula "8") (term "0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "31827"))
      (rule "close_eq" (formula "8") (term "0,2,0,0,1,0,1,1,1,0") (nodenum "31912"))
      (rule "close_eq" (formula "8") (term "0,2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "31941"))
      (rule "close_eq" (formula "8") (term "0,0,1,0,1,0,1,0,0,1,0") (nodenum "31994"))
      (rule "apply_subst_gen" (formula "8") (term "0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "32048"))
      (rule "close_eq" (formula "8") (term "0,2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "32132"))
      (rule "close_eq" (formula "8") (term "0,0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "32216"))
      (rule "ifthenelse_true" (formula "8") (term "0,0,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "32283"))
      (rule "ifthenelse_true" (formula "8") (term "0,0,1,1,1,1,1,0") (nodenum "32376"))
      (rule "ifthenelse_true" (formula "8") (term "2,0,1,0,0,0,1,0,0,1,0") (nodenum "32411"))
      (rule "ifthenelse_true" (formula "8") (term "2,0,0,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "32470"))
      (rule "ifthenelse_true" (formula "8") (term "2,0,0,1,0,1,1,1,0") (nodenum "32562"))
      (rule "ifthenelse_true" (formula "8") (term "2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "32597"))
      (rule "ifthenelse_true" (formula "8") (term "0,1,0,1,0,1,0,0,1,0") (nodenum "32660"))
      (rule "close_eq" (formula "8") (term "0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "32714"))
      (rule "ifthenelse_true" (formula "8") (term "2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "32798"))
      (rule "ifthenelse_true" (formula "8") (term "0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "32882"))
      (rule "ifthenelse_true" (formula "8") (term "0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "32950"))
      (rule "mul_one_left" (formula "8") (term "1,0,1,1,0,0,1,0") (nodenum "33034"))
      (rule "add_zero_left" (formula "8") (term "0,1,1,0,0,1,0") (nodenum "33080"))
      (rule "all_right" (formula "8") (inst "skC=t_1") (nodenum "33123"))
      (rule "imp_right" (formula "8") (nodenum "33576"))
      (rule "imp_right" (formula "9") (nodenum "33620"))
      (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "8") (nodenum "33653"))
      (rule "concrete_and_3" (formula "10") (term "0") (nodenum "33679"))
      (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "6") (nodenum "33698"))
      (rule "concrete_and_3" (formula "10") (term "0,0") (nodenum "33724"))
      (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "7") (nodenum "33745"))
      (rule "concrete_and_3" (formula "10") (term "0") (nodenum "33762"))
      (rule "all_left" (formula "1") (inst "qC=t_1") (userinteraction) (nodenum "35402"))
      (rule "ifthenelse_split" (formula "1") (term "0,1,0,0,0,1") (userinteraction) (nodenum "35521"))
      (branch " f = l TRUE"
         (rule "applyEq" (formula "2") (term "0,0,0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "35659"))
         (rule "applyEq" (formula "4") (term "0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "35705"))
         (rule "applyEq" (formula "4") (term "0,0,0,1,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "35765"))
         (rule "applyEq" (formula "5") (term "0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "35839"))
         (rule "applyEq" (formula "9") (term "0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "35846"))
         (rule "applyEq" (formula "10") (term "0,0,0,0,1,1,0,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "35887"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36004"))
         (rule "applyEq" (formula "10") (term "0,0,1,0,1,0,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36105"))
         (rule "applyEq" (formula "10") (term "0,0,0,0,1,1,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36199"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,1,1,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36298"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36411"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,0,1,0") (inst "t1C=l") (ifseqformula "1") (nodenum "36458"))
         (rule "applyEq" (formula "10") (term "0,0,0,0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "36514"))
         (rule "applyEq" (formula "10") (term "0,0,0,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "36560"))
         (rule "applyEq" (formula "10") (term "0,0,1,0,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "36606"))
         (rule "hide_left" (formula "1") (nodenum "36650"))
         (rule "close_ineq" (formula "8") (ifseqformula "8") (nodenum "38223"))
      )
      (branch " f = l FALSE"
         (rule "replace_known_right" (formula "11") (term "0,0,0,1,0,1") (ifseqformula "10") (nodenum "38284"))
         (rule "ifthenelse_false" (formula "11") (term "0,0,1,0,1") (nodenum "38346"))
         (rule "replace_known_right" (formula "11") (term "0,0,0,1,1,0,0,0,0") (ifseqformula "10") (nodenum "38384"))
         (rule "ifthenelse_false" (formula "11") (term "0,0,1,1,0,0,0,0") (nodenum "38437"))
         (rule "replace_known_right" (formula "11") (term "0,0,1,0,1,0") (ifseqformula "10") (nodenum "38490"))
         (rule "ifthenelse_false" (formula "11") (term "0,1,0,1,0") (nodenum "38538"))
         (rule "replace_known_right" (formula "11") (term "0,0,1,0,1,1,1,1,0,0,0") (ifseqformula "10") (nodenum "38561"))
         (rule "ifthenelse_false" (formula "11") (term "0,1,0,1,1,1,1,0,0,0") (nodenum "38629"))
         (rule "skolemize" (formula "11") (term "0,1,0,0,1") (inst "skC=v_l") (nodenum "39185"))
         (rule "applyEq_sym" (formula "2") (term "0,0,0,0,1") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39204"))
         (rule "applyEq_sym" (formula "4") (term "0,1,1,1,1") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39216"))
         (rule "applyEq_sym" (formula "6") (term "0") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39228"))
         (rule "applyEq_sym" (formula "12") (term "0,1,0,1,0,0,0,0") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39240"))
         (rule "applyEq_sym" (formula "12") (term "0,0,1,1,1,1,0,0,0") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39252"))
         (rule "applyEq_sym" (formula "12") (term "0,0,1,0") (inst "t1C=v_l") (ifseqformula "1") (nodenum "39264"))
         (rule "hide_left" (formula "1") (nodenum "39274"))
         (rule "skolemize" (formula "11") (term "0,1,0,1,1") (inst "skC=v_f") (nodenum "39282"))
         (rule "applyEq_sym" (formula "2") (term "0,0,1,0,1") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39301"))
         (rule "applyEq_sym" (formula "4") (term "0,0,1,1,1") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39313"))
         (rule "applyEq_sym" (formula "5") (term "0") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39325"))
         (rule "applyEq_sym" (formula "12") (term "0,1,0,1,0,1,0,0,0") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39337"))
         (rule "applyEq_sym" (formula "12") (term "0,0,0,1,1,1,0,0,0") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39349"))
         (rule "applyEq_sym" (formula "12") (term "0,0,1,0,0") (inst "t1C=v_f") (ifseqformula "1") (nodenum "39361"))
         (rule "hide_left" (formula "1") (nodenum "39371"))
         (rule "skolemize" (formula "11") (term "0,0,0,1") (inst "skC=x_l") (nodenum "39379"))
         (rule "applyEq_sym" (formula "4") (term "1,0") (inst "t1C=x_l") (ifseqformula "1") (nodenum "39398"))
         (rule "applyEq_sym" (formula "10") (term "0") (inst "t1C=x_l") (ifseqformula "1") (nodenum "39410"))
         (rule "applyEq_sym" (formula "12") (term "0,0,1,0,0,0,0") (inst "t1C=x_l") (ifseqformula "1") (nodenum "39422"))
         (rule "hide_left" (formula "1") (nodenum "39432"))
         (rule "skolemize" (formula "11") (term "0,0,1,1") (inst "skC=x_f") (nodenum "39440"))
         (rule "applyEq_sym" (formula "4") (term "1,0,1") (inst "t1C=x_f") (ifseqformula "1") (nodenum "39459"))
         (rule "applyEq_sym" (formula "10") (term "1") (inst "t1C=x_f") (ifseqformula "1") (nodenum "39471"))
         (rule "applyEq_sym" (formula "12") (term "0,0,1,0,1,0,0,0") (inst "t1C=x_f") (ifseqformula "1") (nodenum "39483"))
         (rule "hide_left" (formula "1") (nodenum "39493"))
         (rule "imp_left" (formula "1") (nodenum "40348"))
         (branch " Case 1"
            (rule "and_right" (formula "11") (nodenum "40383"))
            (branch " Case 1"
               (rule "and_right" (formula "9") (nodenum "40425"))
               (branch " Case 1"
                  (rule "and_right" (formula "11") (nodenum "40473"))
                  (branch " Case 1"
                     (rule "and_right" (formula "11") (nodenum "40517"))
                     (branch " Case 1"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40574"))
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40575"))
                     )
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40576"))
                  )
               )
               (branch " Case 2"
                  (rule "and_right" (formula "11") (nodenum "40578"))
                  (branch " Case 1"
                     (rule "and_right" (formula "11") (nodenum "40594"))
                     (branch " Case 1"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40609"))
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40610"))
                     )
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40611"))
                  )
               )
            )
            (branch " Case 2"
               (rule "and_right" (formula "9") (nodenum "40613"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40628"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "40629"))
               )
            )
         )
         (branch " Case 2"
            (rule "and_left" (formula "1") (nodenum "40631"))
            (rule "and_left" (formula "1") (nodenum "40667"))
            (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1") (nodenum "40727"))
            (rule "concrete_and_3" (formula "13") (term "0") (nodenum "40755"))
            (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "2") (nodenum "40775"))
            (rule "concrete_and_3" (formula "13") (term "0") (nodenum "40799"))
            (rule "and_right" (formula "13") (nodenum "40818"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "40833"))
            )
            (branch " Case 2"
               (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "40834"))
            )
         )
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "8") (nodenum "3180"))
      (rule "box_quest_right" (formula "8") (nodenum "3196"))
      (builtin "Update Simplification" (formula "1") (nodenum "3444"))
      (builtin "Update Simplification" (formula "1") (nodenum "3586"))
      (rule "assignment_to_update_right" (formula "9") (nodenum "3647"))
      (builtin "Update Simplification" (formula "9") (nodenum "3672"))
      (rule "modality_split_right" (formula "9") (nodenum "3688"))
      (rule "assignment_to_update_right" (formula "9") (nodenum "3703"))
      (builtin "Update Simplification" (formula "9") (nodenum "3725"))
      (rule "QODESolve_right" (formula "9") (userinteraction) (nodenum "41048"))
      (builtin "Update Simplification" (formula "9") (nodenum "41594"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,1,0,0,1,0") (nodenum "51101"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,1,1,0") (nodenum "51620"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,0,0,0,1,1,0") (nodenum "52150"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,0,0,0,0,1,1,0") (nodenum "52193"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "52696"))
      (rule "apply_subst_gen" (formula "9") (term "1,1,1,1,0") (nodenum "52748"))
      (rule "apply_subst_gen" (formula "9") (term "0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "52806"))
      (rule "apply_subst_gen" (formula "9") (term "1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "52860"))
      (rule "apply_subst_gen" (formula "9") (term "1,0,0,0,0,0,0,0,1,1,0") (nodenum "52905"))
      (rule "apply_subst_gen" (formula "9") (term "0,0,0,1,0,0,1,0") (nodenum "52963"))
      (builtin "Update Simplification" (formula "9") (nodenum "53465"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,1,0,1,0,0,1,0") (nodenum "53855"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "53918"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "54022"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,0,0,1,0,0,1,0") (nodenum "54096"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "54160"))
      (rule "close_eq" (formula "9") (term "0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "54244"))
      (rule "close_eq" (formula "9") (term "0,2,0,0,1,0,1,1,1,0") (nodenum "54330"))
      (rule "close_eq" (formula "9") (term "0,0,0,1,1,1,1,1,0") (nodenum "54365"))
      (rule "close_eq" (formula "9") (term "0,0,0,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "54417"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "54491"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,1,0,1,0,0,1,0") (nodenum "54548"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "54602"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "54697"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,0,0,1,0,0,1,0") (nodenum "54765"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "54823"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,0,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "54907"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,0,1,0,1,1,1,0") (nodenum "54993"))
      (rule "ifthenelse_true" (formula "9") (term "0,0,1,1,1,1,1,0") (nodenum "55028"))
      (rule "ifthenelse_true" (formula "9") (term "0,0,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "55082"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "55156"))
      (rule "mul_one_left" (formula "9") (term "1,0,1,1,0,0,1,0") (nodenum "55213"))
      (rule "add_zero_left" (formula "9") (term "0,1,1,0,0,1,0") (nodenum "55259"))
      (rule "all_right" (formula "9") (inst "skC=t_3") (nodenum "55302"))
      (rule "imp_right" (formula "9") (nodenum "55758"))
      (rule "imp_right" (formula "10") (nodenum "55802"))
      (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "8") (nodenum "55835"))
      (rule "concrete_and_3" (formula "11") (term "0,0") (nodenum "55865"))
      (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "7") (nodenum "55887"))
      (rule "concrete_and_3" (formula "11") (term "0,0") (nodenum "55913"))
      (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "9") (nodenum "55934"))
      (rule "concrete_and_3" (formula "11") (term "0") (nodenum "55951"))
      (rule "all_left" (formula "1") (inst "qC=t_3") (userinteraction) (nodenum "58090"))
      (rule "ifthenelse_split" (formula "1") (term "0,1,0,0,0,1") (userinteraction) (nodenum "58201"))
      (branch " f = l TRUE"
         (rule "applyEq" (formula "2") (term "0,0,0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58405"))
         (rule "applyEq" (formula "4") (term "0,1,0,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58451"))
         (rule "applyEq" (formula "4") (term "0,0,0,1,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58520"))
         (rule "applyEq" (formula "4") (term "0,1,1,1,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58603"))
         (rule "applyEq" (formula "5") (term "0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58687"))
         (rule "applyEq" (formula "5") (term "0,0,0,1,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58740"))
         (rule "applyEq" (formula "6") (term "0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "58793"))
         (rule "applyEq" (formula "10") (term "0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "58800"))
         (rule "applyEq" (formula "11") (term "0,0,0,0,1,1,0,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "58841"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "58957"))
         (rule "applyEq" (formula "11") (term "0,0,1,0,1,0,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "59058"))
         (rule "applyEq" (formula "11") (term "0,0,0,0,1,1,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "59152"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,1,1,1,1,0,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "59251"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,0") (inst "t1C=l") (ifseqformula "1") (nodenum "59364"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0,1,0") (inst "t1C=l") (ifseqformula "1") (nodenum "59411"))
         (rule "applyEq" (formula "11") (term "0,0,0,0,1,0,1") (inst "t1C=l") (ifseqformula "1") (nodenum "59467"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "59513"))
         (rule "applyEq" (formula "11") (term "0,0,1,0,1,1") (inst "t1C=l") (ifseqformula "1") (nodenum "59559"))
         (rule "hide_left" (formula "1") (nodenum "59603"))
         (rule "close_ineq" (formula "9") (ifseqformula "9") (nodenum "61409"))
      )
      (branch " f = l FALSE"
         (rule "skolemize" (formula "12") (term "0,1,0,0,1") (inst "skC=v_l_0") (nodenum "61421"))
         (rule "applyEq_sym" (formula "2") (term "0,0,0,0,1") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61528"))
         (rule "applyEq_sym" (formula "4") (term "0,1,1,1,0,1") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61598"))
         (rule "applyEq_sym" (formula "5") (term "0,1,1,1,1") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61690"))
         (rule "applyEq_sym" (formula "7") (term "0") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61743"))
         (rule "applyEq_sym" (formula "13") (term "0,1,0,1,0,0,0,0") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61789"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,1,1,1,0,0,0") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61867"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0") (inst "t1C=v_l_0") (ifseqformula "1") (nodenum "61973"))
         (rule "hide_left" (formula "1") (nodenum "62027"))
         (rule "skolemize" (formula "12") (term "0,1,0,1,1") (inst "skC=v_f_0") (nodenum "62035"))
         (rule "applyEq_sym" (formula "2") (term "0,0,1,0,1") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62142"))
         (rule "applyEq_sym" (formula "4") (term "0,0,1,1,0,1") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62212"))
         (rule "applyEq_sym" (formula "4") (term "1,1,1,1,1") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62306"))
         (rule "applyEq_sym" (formula "5") (term "0,0,1,1,1") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62393"))
         (rule "applyEq_sym" (formula "6") (term "0") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62446"))
         (rule "applyEq_sym" (formula "13") (term "0,1,0,1,0,1,0,0,0") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62492"))
         (rule "applyEq_sym" (formula "13") (term "0,0,0,1,1,1,0,0,0") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62577"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0,0") (inst "t1C=v_f_0") (ifseqformula "1") (nodenum "62677"))
         (rule "hide_left" (formula "1") (nodenum "62722"))
         (rule "skolemize" (formula "12") (term "0,0,0,1") (inst "skC=x_l_0") (nodenum "62730"))
         (rule "applyEq_sym" (formula "4") (term "1,0") (inst "t1C=x_l_0") (ifseqformula "1") (nodenum "62830"))
         (rule "applyEq_sym" (formula "5") (term "1,0") (inst "t1C=x_l_0") (ifseqformula "1") (nodenum "62891"))
         (rule "applyEq_sym" (formula "11") (term "0") (inst "t1C=x_l_0") (ifseqformula "1") (nodenum "62944"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0,0,0,0") (inst "t1C=x_l_0") (ifseqformula "1") (nodenum "62985"))
         (rule "hide_left" (formula "1") (nodenum "63061"))
         (rule "skolemize" (formula "12") (term "0,0,1,1") (inst "skC=x_f_0") (nodenum "63069"))
         (rule "applyEq_sym" (formula "4") (term "1,0,0,1") (inst "t1C=x_f_0") (ifseqformula "1") (nodenum "63170"))
         (rule "applyEq_sym" (formula "5") (term "1,0,1") (inst "t1C=x_f_0") (ifseqformula "1") (nodenum "63249"))
         (rule "applyEq_sym" (formula "11") (term "1") (inst "t1C=x_f_0") (ifseqformula "1") (nodenum "63302"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0,1,0,0,0") (inst "t1C=x_f_0") (ifseqformula "1") (nodenum "63343"))
         (rule "hide_left" (formula "1") (nodenum "63427"))
         (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,1") (ifseqformula "11") (nodenum "64463"))
         (rule "ifthenelse_false" (formula "12") (term "0,0,1,0,1") (nodenum "64525"))
         (rule "replace_known_right" (formula "12") (term "0,0,0,1,1,0,0,0,0") (ifseqformula "11") (nodenum "64576"))
         (rule "ifthenelse_false" (formula "12") (term "0,0,1,1,0,0,0,0") (nodenum "64630"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0,1,1,1,1,0,0,0") (ifseqformula "11") (nodenum "64684"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,0,1,1,1,1,0,0,0") (nodenum "64768"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0,1,0") (ifseqformula "11") (nodenum "64840"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,0,1,0") (nodenum "64877"))
         (rule "imp_left" (formula "1") (nodenum "64900"))
         (branch " Case 1"
            (rule "and_right" (formula "12") (nodenum "64935"))
            (branch " Case 1"
               (rule "and_right" (formula "10") (nodenum "64977"))
               (branch " Case 1"
                  (rule "and_right" (formula "12") (nodenum "65025"))
                  (branch " Case 1"
                     (rule "and_right" (formula "12") (nodenum "65069"))
                     (branch " Case 1"
                        (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65126"))
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65127"))
                     )
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65128"))
                  )
               )
               (branch " Case 2"
                  (rule "and_right" (formula "12") (nodenum "65130"))
                  (branch " Case 1"
                     (rule "and_right" (formula "12") (nodenum "65146"))
                     (branch " Case 1"
                        (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65161"))
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65162"))
                     )
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65163"))
                  )
               )
            )
            (branch " Case 2"
               (rule "and_right" (formula "10") (nodenum "65165"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65180"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "65181"))
               )
            )
         )
         (branch " Case 2"
            (rule "and_left" (formula "1") (nodenum "65183"))
            (rule "and_left" (formula "1") (nodenum "65219"))
            (rule "replace_known_left" (formula "14") (term "1,0,0") (ifseqformula "2") (nodenum "65279"))
            (rule "concrete_and_3" (formula "14") (term "0,0") (nodenum "65311"))
            (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "1") (nodenum "65334"))
            (rule "concrete_and_3" (formula "14") (term "0") (nodenum "65353"))
            (rule "and_right" (formula "14") (nodenum "65372"))
            (branch " Case 1"
               (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "65387"))
            )
            (branch " Case 2"
               (rule "cut" (inst "b=   B * x_l_0
>    B * x_f_0 + 1 / 2 * ((v_f_0) ^ 2 - (v_l_0) ^ 2)
   + (A + B) * (1 / 2 * A * (t_3) ^ 2 + t_3 * v_f_0)") (userinteraction) (nodenum "65412"))
               (branch " CUT:    B * x_l_0
>    B * x_f_0 + 1 / 2 * ((v_f_0) ^ 2 - (v_l_0) ^ 2)
   + (A + B) * (1 / 2 * A * (t_3) ^ 2 + t_3 * v_f_0)"
                  (rule "hide_left" (formula "6") (userinteraction) (nodenum "65835"))
                  (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "68183"))
               )
               (branch " CUT: !    B * x_l_0
>    B * x_f_0 + 1 / 2 * ((v_f_0) ^ 2 - (v_l_0) ^ 2)
   + (A + B) * (1 / 2 * A * (t_3) ^ 2 + t_3 * v_f_0)"
                  (rule "hide_right" (formula "15") (userinteraction) (nodenum "65646"))
                  (rule "hide_left" (formula "6") (userinteraction) (nodenum "65734"))
                  (builtin "Eliminate Universal Quantifiers" (formula "13") (nodenum "68249"))
               )
            )
         )
      )
   )
)
)

}
