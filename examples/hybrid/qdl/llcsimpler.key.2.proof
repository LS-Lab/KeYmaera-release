\settings {
"#Proof-Settings-Config-File
#Sun Aug 19 21:07:14 EDT 2012
[DLOptions]counterExampleGenerator=Mathematica
[DecisionProcedure]Exec=
[DLOptions]termFactoryClass=de.uka.ilkd.key.dl.model.impl.TermFactoryImpl
[Z3Options]z3ElimExPrefix=true
[MathematicaOptions]eliminateFractions=false
[TacletTranslation]filename=
[Libraries]Default=/Users/aplatzer/.keymaera/libraries/acc.key-false, /Users/aplatzer/.keymaera/libraries/deprecatedRules.key-false, /Users/aplatzer/.keymaera/libraries/stringRules.key-false
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[DLOptions]BuiltInArithmeticIneqs=OFF
[ReduceOptions]rlcadpbfvs=DEFAULT
[ReduceOptions]rlcadaproj=DEFAULT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]ProofAssistant=true
[ReduceOptions]rlcadprojonly=DEFAULT
[DLOptions]reduceOnFreshBranch=false
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[ReduceOptions]rlqeqsc=DEFAULT
[ReduceOptions]rlcadbaseonly=DEFAULT
[DLOptions]simplifyAfterReduce=false
[DLOptions]readdQuantifiers=true
[DecisionProcedure]ActiveRule=_noname_
[ReduceOptions]rlcadrawformula=DEFAULT
[DLOptions]applyLocalSimplify=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[ReduceOptions]quantifierEliminationMethod=RLQE
[DLOptions]DiffSat=AUTO
[DLOptions]simplifier=Mathematica
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[DLOptions]simplifyAfterODESolve=false
[ReduceOptions]rlall=true
[DLOptions]diffSatTimeout=4000
[DLOptions]linearTimeoutIncreaseFactor=2
[DecisionProcedure]Timeout=600
[ReduceOptions]rlqesqsc=DEFAULT
[General]SoundNotification=false
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]DefaultChoices=transactions-transactions\\:transactionsOn , throughout-throughout\\:toutOn , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff
[ReduceOptions]rlsimpl=ON
[ReduceOptions]rlcadextonly=DEFAULT
[Strategy]MaximumNumberOfAutomaticApplications=2000
[ReduceOptions]rlanuexsgnopt=DEFAULT
[ReduceOptions]rlcadpartial=DEFAULT
[General]UseJML=true
[DLOptions]useSOS=false
[MathematicaOptions]useEliminateList=true
[DecisionProcedure]savefile=false
[DLOptions]applyGammaRules=ONLY_TO_MODALITIES
[DecisionProcedure]showSMTResDialog=false
[TacletTranslation]assignment=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
[General]StupidMode=true
[DLOptions]constantTimeoutIncreaseFactor=0
[DLOptions]solveODE=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[DLOptions]loopSatTimeout=2000000
[DLOptions]odeSolver=Mathematica
[OrbitalOptions]precision=34
[HOLLightOptions]qeMethod=ProofProducing
[ReduceOptions]rlqedfs=DEFAULT
[QepcadOptions]qepcadMemoryLimit=2000000
[ReduceOptions]rlqeheu=DEFAULT
[ReduceOptions]rlanuexpsremseq=DEFAULT
[DecisionProcedure]multprovers=Z3\\=true\\:Yices\\=true\\:Simplify\\=true\\:CVC3\\=true
[ReduceOptions]rlcadfulldimonly=DEFAULT
[DLOptions]csdpForceInternal=false
[DLOptions]invariantRule=QUANTIFIERS
[General]DnDDirectionSensitive=true
[DLOptions]simplifyBeforeReduce=false
[Z3Options]z3Prenex=true
[DLOptions]applyToModality=false
[DLOptions]initialTimeout=2000
[ReduceOptions]rlcadaprojalways=DEFAULT
[DLOptions]CexFinder=ITER_DEEP
[DLOptions]useIterativeReduceRule=false
[Choice]Choices=throughout-throughout\\:toutOn-throughout\\:toutOff , transactions-transactions\\:transactionsOn-transactions\\:transactionsOff , intRules-intRules\\:javaSemantics-intRules\\:arithmeticSemanticsIgnoringOF-intRules\\:arithmeticSemanticsCheckingOF , programRules-programRules\\:Java-programRules\\:ODL-programRules\\:dL , initialisation-initialisation\\:enableStaticInitialisation-initialisation\\:disableStaticInitialisation , transactionAbort-transactionAbort\\:abortOn-transactionAbort\\:abortOff , nullPointerPolicy-nullPointerPolicy\\:noNullCheck-nullPointerPolicy\\:nullCheck , javacard-javacard\\:jcOff-javacard\\:jcOn
[CohenhormanderOptions]eliminatorMode=DNF
[DLOptions]percentOfPowersetForIterativeReduce=70
[ReduceOptions]rlcadhongproj=DEFAULT
[ReduceOptions]rlanuexgcdnormalize=DEFAULT
[MathematicaOptions]memoryConstraint=-1
[ReduceOptions]rlcadtrimtree=DEFAULT
[DLOptions]groebnerBasisCalculator=Mathematica
[ReduceOptions]rlcadfac=DEFAULT
[Strategy]Timeout=-1
[DLOptions]applyGlobalReduce=true
[OrbitalOptions]representation=big
[SimultaneousUpdateSimplifier]EagerSimplification=true
[TacletTranslation]maxGeneric=2
[DLOptions]TracerStat=OFF
[TacletTranslation]saveToFile=false
[DLOptions]BuiltInArithmetic=OFF
[DLOptions]counterexampleTest=ON
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[DecisionProcedure]WaitForAllProvers=false
[DLOptions]useODEIndFinMethods=false
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[ReduceOptions]rlcadisoallroots=DEFAULT
[ReduceOptions]rlnzden=ON
[MathematicaOptions]quantifierEliminationMethod=REDUCE
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[ReduceOptions]eliminateFractions=false
[DecisionProcedure]WeakenSMTTranslation=false
[ReduceOptions]rlcadte=DEFAULT
[DLOptions]ignoreAnnotations=false
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[DLOptions]sosChecker=Built-in SOS
[General]UseOCL=false
[OrbitalOptions]sparsePolynomials=true
[ReduceOptions]rlposden=DEFAULT
[DLOptions]simplifyTimeout=0
[Strategy]ActiveStrategy=DLStrategy
[DLOptions]usePowersetIterativeReduce=true
[DLOptions]quadricTimeoutIncreaseFactor=0
[DLOptions]FOStrategy=LAZY
[ReduceOptions]rlqepnf=DEFAULT
[DLOptions]applyLocalReduce=OFF
[DLOptions]quantifierEliminator=Mathematica
"
}

\sorts {
C;
}
\programVariables {
	C f;
	C l;
	R t;
}
\functions {
\nonRigid[Location] R x(C);
\nonRigid[Location] R v(C);
\nonRigid[Location] R a(C);
R eps;
R A;
R B;
}
\problem {
     A >  0 & B >  0 & !f = l & eps >  0
   & (         B * x(l)
            >    B * x(f)
               + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
          & x(l) >  x(f)
        & v(f) >= 0
      & v(l) >= 0)
-> \[
     (a(l) := -(B) ;
       (a(f) := -(B)
         ++ (?(B * x(l) > (B * x(f) + 1 / 2 * (v(f) ^ 2 - v(l) ^ 2)) + (A + B) * ((1 / 2 * A) * eps ^ 2 + eps * v(f))) ;
           a(f) := A) ;
         (t := 0 ;
           \forall C i. {x(i)' = v(i), v(i)' = a(i), t' = 1, v(l) >= 0, v(f) >= 0, t <= eps})))*
     \] (         B * x(l)
               >    B * x(f)
                  + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
             & x(l) >  x(f)
           & v(f) >= 0
         & v(l) >= 0)

}

\proof {
(keyLog "0" (keyUser "aplatzer" ) (keyVersion "4c136f9a28672b4d6b12b959b7f58a86a2150a2a"))

(autoModeTime "67970")

(branch "dummy ID"
(rule "imp_right" (formula "1") (nodenum "1955"))
(rule "and_left" (formula "1") (nodenum "1985"))
(rule "and_left" (formula "1") (nodenum "2012"))
(rule "and_left" (formula "3") (nodenum "2050"))
(rule "and_left" (formula "1") (nodenum "2090"))
(rule "and_left" (formula "4") (nodenum "2117"))
(rule "and_left" (formula "1") (nodenum "2157"))
(rule "not_left" (formula "3") (nodenum "2206"))
(rule "and_left" (formula "4") (nodenum "2222"))
(rule "loop_inv_box_fresh" (formula "9") (inst "inv=               B * x(l)
            >    B * x(f)
               + 1 / 2 * ((v(f)) ^ 2 - (v(l)) ^ 2)
          & v(f) >= 0
        & v(l) >= 0
      & A >  0
    & B >  0
  & eps >  0
& x(l) >  x(f)") (userinteraction) (nodenum "14158"))
(branch " Invariant Initially Valid"
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "5") (nodenum "17414"))
   (rule "concrete_and_3" (formula "9") (nodenum "17439"))
   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "1") (nodenum "17465"))
   (rule "concrete_and_3" (formula "9") (term "0,0") (nodenum "17494"))
   (rule "replace_known_left" (formula "9") (term "1,0,0,0") (ifseqformula "6") (nodenum "17521"))
   (rule "concrete_and_3" (formula "9") (term "0,0,0") (nodenum "17554"))
   (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "4") (nodenum "17583"))
   (rule "concrete_and_1" (formula "9") (term "0,0") (nodenum "17612"))
   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7") (nodenum "17637"))
   (rule "concrete_and_1" (formula "9") (term "0") (nodenum "17662"))
   (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "2") (nodenum "17683"))
   (rule "concrete_and_1" (formula "9") (nodenum "17704"))
   (rule "close_goal" (formula "9") (ifseqformula "3") (nodenum "17731"))
)
(branch " Use Case"
   (rule "imp_right" (formula "1") (nodenum "16891"))
   (rule "and_left" (formula "1") (nodenum "16926"))
   (rule "and_left" (formula "1") (nodenum "16967"))
   (rule "and_left" (formula "1") (nodenum "17008"))
   (rule "and_left" (formula "1") (nodenum "17049"))
   (rule "and_left" (formula "1") (nodenum "17090"))
   (rule "and_left" (formula "1") (nodenum "17133"))
   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "7") (nodenum "17203"))
   (rule "concrete_and_3" (formula "8") (term "0,0") (nodenum "17236"))
   (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1") (nodenum "17257"))
   (rule "concrete_and_1" (formula "8") (term "0") (nodenum "17282"))
   (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "2") (nodenum "17303"))
   (rule "concrete_and_1" (formula "8") (nodenum "17324"))
   (rule "close_goal" (formula "8") (ifseqformula "3") (nodenum "17351"))
)
(branch " Body Preserves Invariant"
   (rule "imp_right" (formula "1") (nodenum "15833"))
   (rule "and_left" (formula "1") (nodenum "15863"))
   (rule "and_left" (formula "1") (nodenum "15901"))
   (rule "and_left" (formula "1") (nodenum "15939"))
   (rule "and_left" (formula "1") (nodenum "15977"))
   (rule "and_left" (formula "1") (nodenum "16015"))
   (rule "and_left" (formula "1") (nodenum "16055"))
   (rule "modality_split_right" (formula "8") (nodenum "16118"))
   (rule "assignment_to_update_right" (formula "8") (nodenum "16133"))
   (rule "modality_split_right" (formula "8") (nodenum "16157"))
   (rule "box_choice_right" (formula "8") (nodenum "16175"))
   (branch " Case 1"
      (rule "assignment_to_update_right" (formula "8") (nodenum "16208"))
      (builtin "Update Simplification" (formula "8") (nodenum "16240"))
      (rule "modality_split_right" (formula "8") (nodenum "16258"))
      (rule "assignment_to_update_right" (formula "8") (nodenum "16276"))
      (builtin "Update Simplification" (formula "8") (nodenum "16299"))
      (rule "QODESolve_right" (formula "8") (userinteraction) (nodenum "49411"))
      (builtin "Update Simplification" (formula "8") (nodenum "49991"))
      (rule "all_right" (formula "8") (inst "skC=t_4") (userinteraction) (nodenum "55594"))
      (builtin "Update Simplification" (formula "8") (nodenum "62381"))
      (rule "imp_right" (formula "8") (userinteraction) (nodenum "63470"))
      (rule "imp_right" (formula "9") (userinteraction) (nodenum "63561"))
      (rule "all_left" (formula "1") (inst "qC=t_4") (userinteraction) (nodenum "63618"))
      (rule "apply_subst_gen" (formula "10") (term "1,1") (nodenum "66417"))
      (rule "apply_subst_gen" (formula "10") (term "0,1") (nodenum "66521"))
      (rule "apply_subst_gen" (formula "10") (term "0,1,0,0,0,0,0") (nodenum "66621"))
      (rule "apply_subst_gen" (formula "10") (term "0,1,0,0,0,0") (nodenum "66677"))
      (rule "apply_subst_gen" (formula "10") (term "0,1,1,1,1,0,0,0,0,0,0") (nodenum "66730"))
      (rule "apply_subst_gen" (formula "10") (term "1,0,1,0,0,0,0,0,0") (nodenum "66802"))
      (rule "apply_subst_gen" (formula "10") (term "0,0,1,1,1,0,0,0,0,0,0") (nodenum "66864"))
      (rule "apply_subst_gen" (formula "10") (term "1,0,0,0,0,0,0,0") (nodenum "66936"))
      (rule "apply_subst_gen" (formula "1") (term "0,1,0,1") (nodenum "67002"))
      (rule "apply_subst_gen" (formula "1") (term "0,0,0,1") (nodenum "67024"))
      (rule "close_eq" (formula "10") (term "0,0,1,1,1,1") (nodenum "67051"))
      (rule "close_eq" (formula "10") (term "0,2,0,1,1,0,1") (nodenum "67119"))
      (rule "close_eq" (formula "10") (term "0,0,1,0,1,0,0,0,0,0") (nodenum "67188"))
      (rule "close_eq" (formula "10") (term "0,2,0,1,0,1,0,0,0,0") (nodenum "67252"))
      (rule "close_eq" (formula "10") (term "0,2,0,1,0,1,1,1,1,0,0,0,0,0,0") (nodenum "67312"))
      (rule "close_eq" (formula "10") (term "0,0,1,1,1,0,1,0,0,0,0,0,0") (nodenum "67393"))
      (rule "close_eq" (formula "10") (term "0,0,1,0,0,1,1,1,0,0,0,0,0,0") (nodenum "67464"))
      (rule "close_eq" (formula "10") (term "0,2,0,1,1,1,0,0,0,0,0,0,0") (nodenum "67545"))
      (rule "close_eq" (formula "1") (term "0,0,1,0,1,0,1") (nodenum "67611"))
      (rule "close_eq" (formula "1") (term "0,2,0,1,0,0,0,1") (nodenum "67638"))
      (rule "ifthenelse_true" (formula "10") (term "0,1,1,1,1") (nodenum "67665"))
      (rule "ifthenelse_true" (formula "10") (term "2,0,1,1,0,1") (nodenum "67724"))
      (rule "ifthenelse_true" (formula "10") (term "0,1,0,1,0,0,0,0,0") (nodenum "67788"))
      (rule "ifthenelse_true" (formula "10") (term "2,0,1,0,1,0,0,0,0") (nodenum "67853"))
      (rule "ifthenelse_true" (formula "10") (term "2,0,1,0,1,1,1,1,0,0,0,0,0,0") (nodenum "67913"))
      (rule "ifthenelse_true" (formula "10") (term "0,1,1,1,0,1,0,0,0,0,0,0") (nodenum "67994"))
      (rule "ifthenelse_true" (formula "10") (term "0,1,0,0,1,1,1,0,0,0,0,0,0") (nodenum "68065"))
      (rule "ifthenelse_true" (formula "10") (term "2,0,1,1,1,0,0,0,0,0,0,0") (nodenum "68146"))
      (rule "ifthenelse_true" (formula "1") (term "0,1,0,1,0,1") (nodenum "68212"))
      (rule "ifthenelse_true" (formula "1") (term "2,0,1,0,0,0,1") (nodenum "68239"))
      (rule "add_zero_left" (formula "1") (term "0,1,1") (nodenum "68266"))
      (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "8") (nodenum "68304"))
      (rule "concrete_and_3" (formula "10") (term "0") (nodenum "68329"))
      (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "6") (nodenum "68351"))
      (rule "concrete_and_3" (formula "10") (term "0,0") (nodenum "68380"))
      (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "7") (nodenum "68404"))
      (rule "concrete_and_3" (formula "10") (term "0") (nodenum "68424"))
      (rule "skolemize" (formula "10") (term "1,0,1,0,1,0,1") (nodenum "69687"))
      (rule "applyEq_sym" (formula "6") (term "0") (ifseqformula "1") (nodenum "69708"))
      (rule "applyEq_sym" (formula "4") (term "0,1,1,1,1") (ifseqformula "1") (nodenum "69721"))
      (rule "applyEq_sym" (formula "2") (term "0,0,0,0,1") (ifseqformula "1") (nodenum "69734"))
      (rule "applyEq_sym" (formula "11") (term "0,0,1,0") (ifseqformula "1") (nodenum "69747"))
      (rule "applyEq_sym" (formula "11") (term "0,0,1,1,1,1,0,0,0") (ifseqformula "1") (nodenum "69760"))
      (rule "applyEq_sym" (formula "11") (term "1,0,1,0,1,1,0,0,0,0") (ifseqformula "1") (nodenum "69773"))
      (rule "hide_left" (formula "1") (nodenum "69784"))
      (rule "skolemize" (formula "10") (term "1,0,1,0,1,1,1") (nodenum "69792"))
      (rule "applyEq_sym" (formula "5") (term "0") (ifseqformula "1") (nodenum "69813"))
      (rule "applyEq_sym" (formula "4") (term "0,0,1,1,1") (ifseqformula "1") (nodenum "69826"))
      (rule "applyEq_sym" (formula "2") (term "0,0,1,0,1") (ifseqformula "1") (nodenum "69839"))
      (rule "applyEq_sym" (formula "11") (term "0,0,1,0,0") (ifseqformula "1") (nodenum "69852"))
      (rule "applyEq_sym" (formula "11") (term "0,0,0,1,1,1,0,0,0") (ifseqformula "1") (nodenum "69865"))
      (rule "applyEq_sym" (formula "11") (term "1,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1") (nodenum "69878"))
      (rule "hide_left" (formula "1") (nodenum "69889"))
      (rule "skolemize" (formula "10") (term "1,0,0,1,0,1") (nodenum "69897"))
      (rule "applyEq_sym" (formula "10") (term "0") (ifseqformula "1") (nodenum "69918"))
      (rule "applyEq_sym" (formula "4") (term "1,0") (ifseqformula "1") (nodenum "69931"))
      (rule "applyEq_sym" (formula "11") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1") (nodenum "69944"))
      (rule "hide_left" (formula "1") (nodenum "69955"))
      (rule "skolemize" (formula "10") (term "1,0,0,1,1,1") (nodenum "69963"))
      (rule "applyEq_sym" (formula "10") (term "1") (ifseqformula "1") (nodenum "69984"))
      (rule "applyEq_sym" (formula "4") (term "1,0,1") (ifseqformula "1") (nodenum "69997"))
      (rule "applyEq_sym" (formula "11") (term "1,0,0,1,1,0,1,0,0,0") (ifseqformula "1") (nodenum "70010"))
      (rule "hide_left" (formula "1") (nodenum "70021"))
      (rule "imp_left" (formula "1") (nodenum "70942"))
      (branch " Case 1"
         (rule "and_right" (formula "10") (nodenum "70979"))
         (branch " Case 1"
            (rule "and_right" (formula "9") (nodenum "71031"))
            (branch " Case 1"
               (rule "and_right" (formula "10") (nodenum "71081"))
               (branch " Case 1"
                  (rule "and_right" (formula "10") (nodenum "71127"))
                  (branch " Case 1"
                     (rule "ifthenelse_same_branches" (formula "10") (term "0,1,1,1,0") (nodenum "71187"))
                     (rule "ifthenelse_same_branches" (formula "10") (term "0,1,0,1,1,1,1") (nodenum "71243"))
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71307"))
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71308"))
                  )
               )
               (branch " Case 2"
                  (rule "ifthenelse_same_branches" (formula "10") (term "0,1,0") (nodenum "71310"))
                  (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71337"))
               )
            )
            (branch " Case 2"
               (rule "and_right" (formula "10") (nodenum "71339"))
               (branch " Case 1"
                  (rule "and_right" (formula "10") (nodenum "71357"))
                  (branch " Case 1"
                     (rule "ifthenelse_same_branches" (formula "10") (term "0,1,1,1,0") (nodenum "71375"))
                     (rule "ifthenelse_same_branches" (formula "10") (term "0,1,0,1,1,1,1") (nodenum "71385"))
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71394"))
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71395"))
                  )
               )
               (branch " Case 2"
                  (rule "ifthenelse_split" (formula "10") (term "0,1,0") (nodenum "71397"))
                  (branch " f = l TRUE"
                     (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "71443"))
                  )
                  (branch " f = l FALSE"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71444"))
                  )
               )
            )
         )
         (branch " Case 2"
            (rule "and_right" (formula "9") (nodenum "71446"))
            (branch " Case 1"
               (rule "ifthenelse_split" (formula "10") (term "0,1,1,0") (nodenum "71464"))
               (branch " f = l TRUE"
                  (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "71521"))
               )
               (branch " f = l FALSE"
                  (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71522"))
               )
            )
            (branch " Case 2"
               (rule "ifthenelse_split" (formula "10") (term "0,1,1,0") (nodenum "71524"))
               (branch " f = l TRUE"
                  (builtin "Eliminate Universal Quantifiers" (formula "9") (nodenum "71557"))
               )
               (branch " f = l FALSE"
                  (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "71558"))
               )
            )
         )
      )
      (branch " Case 2"
         (rule "and_left" (formula "1") (nodenum "71560"))
         (rule "and_left" (formula "1") (nodenum "71598"))
         (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "2") (nodenum "71660"))
         (rule "concrete_and_3" (formula "12") (term "0,0") (nodenum "71693"))
         (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "1") (nodenum "71717"))
         (rule "concrete_and_3" (formula "12") (term "0") (nodenum "71737"))
         (rule "and_right" (formula "12") (nodenum "71757"))
         (branch " Case 1"
            (rule "ifthenelse_same_branches" (formula "1") (term "0,1,0") (nodenum "71775"))
            (rule "ifthenelse_same_branches" (formula "12") (term "0,1,0,1,1,1,1") (nodenum "71807"))
            (rule "ifthenelse_same_branches" (formula "12") (term "0,1,1,1,0") (nodenum "71841"))
            (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "71850"))
         )
         (branch " Case 2"
            (rule "ifthenelse_same_branches" (formula "1") (term "0,1,0") (nodenum "71852"))
            (rule "ifthenelse_same_branches" (formula "12") (term "0,1,1,0") (nodenum "71862"))
            (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "71871"))
         )
      )
   )
   (branch " Case 2"
      (rule "modality_split_right" (formula "8") (nodenum "16315"))
      (rule "box_quest_right" (formula "8") (nodenum "16333"))
      (builtin "Update Simplification" (formula "1") (nodenum "16582"))
      (builtin "Update Simplification" (formula "1") (nodenum "16724"))
      (rule "assignment_to_update_right" (formula "9") (nodenum "16785"))
      (builtin "Update Simplification" (formula "9") (nodenum "16811"))
      (rule "modality_split_right" (formula "9") (nodenum "16829"))
      (rule "assignment_to_update_right" (formula "9") (nodenum "16846"))
      (builtin "Update Simplification" (formula "9") (nodenum "16869"))
      (rule "QODESolve_right" (formula "9") (userinteraction) (nodenum "24059"))
      (builtin "Update Simplification" (formula "9") (nodenum "24639"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,0,0,0,0,1,1,0") (nodenum "40545"))
      (rule "apply_subst_gen" (formula "9") (term "0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "41079"))
      (rule "apply_subst_gen" (formula "9") (term "1,0,0,0,0,0,0,0,1,1,0") (nodenum "41132"))
      (rule "apply_subst_gen" (formula "9") (term "1,1,1,1,0") (nodenum "41709"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,1,1,0") (nodenum "41775"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,0,0,0,1,1,0") (nodenum "41811"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "41855"))
      (rule "apply_subst_gen" (formula "9") (term "1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "41914"))
      (rule "apply_subst_gen" (formula "9") (term "0,1,0,1,0,0,1,0") (nodenum "41978"))
      (rule "apply_subst_gen" (formula "9") (term "0,0,0,1,0,0,1,0") (nodenum "42520"))
      (builtin "Update Simplification" (formula "9") (nodenum "43045"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,0,0,1,0,0,1,0") (nodenum "43470"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,1,0,1,0,0,1,0") (nodenum "43539"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "43599"))
      (rule "close_eq" (formula "9") (term "0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "43702"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "43801"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "43896"))
      (rule "close_eq" (formula "9") (term "0,0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "43991"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "44049"))
      (rule "close_eq" (formula "9") (term "0,2,0,1,1,0,1,1,1,0") (nodenum "44103"))
      (rule "close_eq" (formula "9") (term "0,0,1,1,1,1,1,1,0") (nodenum "44147"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,0,0,1,0,0,1,0") (nodenum "44191"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,1,0,1,0,0,1,0") (nodenum "44250"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,1,1,0,0,0,0,0,0,0,1,1,0") (nodenum "44305"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,1,1,0,1,0,0,0,0,0,0,1,1,0") (nodenum "44398"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "44492"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,1,1,1,1,0,0,0,0,0,0,1,1,0") (nodenum "44588"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,0,1,0,0,0,0,0,1,1,0") (nodenum "44683"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,0,1,0,0,0,0,1,1,0") (nodenum "44741"))
      (rule "ifthenelse_true" (formula "9") (term "2,0,1,1,0,1,1,1,0") (nodenum "44795"))
      (rule "ifthenelse_true" (formula "9") (term "0,1,1,1,1,1,1,0") (nodenum "44839"))
      (rule "add_zero_left" (formula "9") (term "0,1,1,0,0,1,0") (nodenum "44883"))
      (rule "all_right" (formula "9") (inst "skC=t_2") (nodenum "44927"))
      (rule "imp_right" (formula "9") (nodenum "45417"))
      (rule "imp_right" (formula "10") (nodenum "45463"))
      (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "9") (nodenum "45498"))
      (rule "concrete_and_3" (formula "11") (term "0") (nodenum "45525"))
      (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "7") (nodenum "45545"))
      (rule "concrete_and_3" (formula "11") (term "0,0") (nodenum "45572"))
      (rule "replace_known_left" (formula "11") (term "1,0") (ifseqformula "8") (nodenum "45594"))
      (rule "concrete_and_3" (formula "11") (term "0") (nodenum "45612"))
      (rule "all_left" (formula "1") (inst "qC=t_2") (userinteraction) (nodenum "72988"))
      (rule "ifthenelse_split" (formula "1") (term "0,1,0,0,0,1") (userinteraction) (nodenum "80673"))
      (branch " f = l TRUE"
         (rule "replace_known_left" (formula "12") (term "0,0,1,1,0,1") (ifseqformula "1") (nodenum "84753"))
         (rule "ifthenelse_true" (formula "12") (term "0,1,1,0,1") (nodenum "84823"))
         (rule "replace_known_left" (formula "12") (term "0,0,1,0,1,0") (ifseqformula "1") (nodenum "84876"))
         (rule "ifthenelse_true" (formula "12") (term "0,1,0,1,0") (nodenum "84925"))
         (rule "replace_known_left" (formula "12") (term "0,0,1,0,1,1,1,1,0,0,0") (ifseqformula "1") (nodenum "84949"))
         (rule "ifthenelse_true" (formula "12") (term "0,1,0,1,1,1,1,0,0,0") (nodenum "85018"))
         (rule "replace_known_left" (formula "12") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "1") (nodenum "85087"))
         (rule "ifthenelse_true" (formula "12") (term "0,1,1,1,0,0,0,0") (nodenum "85141"))
         (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "1") (nodenum "89552"))
         (rule "close_ineq" (formula "11") (ifseqformula "11") (nodenum "92971"))
      )
      (branch " f = l FALSE"
         (rule "replace_known_right" (formula "12") (term "0,0,1,1,0,1") (ifseqformula "11") (nodenum "83717"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,1,0,1") (nodenum "83787"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0,1,0") (ifseqformula "11") (nodenum "83846"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,0,1,0") (nodenum "83895"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "11") (nodenum "83919"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,1,1,0,0,0,0") (nodenum "83973"))
         (rule "replace_known_right" (formula "12") (term "0,0,1,0,1,1,1,1,0,0,0") (ifseqformula "11") (nodenum "84027"))
         (rule "ifthenelse_false" (formula "12") (term "0,1,0,1,1,1,1,0,0,0") (nodenum "84096"))
         (rule "skolemize" (formula "12") (term "1,0,1,0,1,0,1") (nodenum "93018"))
         (rule "applyEq_sym" (formula "7") (term "0") (ifseqformula "1") (nodenum "93161"))
         (rule "applyEq_sym" (formula "5") (term "0,1,1,1,1") (ifseqformula "1") (nodenum "93208"))
         (rule "applyEq_sym" (formula "4") (term "0,1,1,1,0,1") (ifseqformula "1") (nodenum "93292"))
         (rule "applyEq_sym" (formula "2") (term "0,0,0,0,1") (ifseqformula "1") (nodenum "93355"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0") (ifseqformula "1") (nodenum "93426"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,1,1,1,0,0,0") (ifseqformula "1") (nodenum "93466"))
         (rule "applyEq_sym" (formula "13") (term "1,0,1,0,1,1,0,0,0,0") (ifseqformula "1") (nodenum "93567"))
         (rule "hide_left" (formula "1") (nodenum "93644"))
         (rule "skolemize" (formula "12") (term "1,0,1,0,1,1,1") (nodenum "93652"))
         (rule "applyEq_sym" (formula "6") (term "0") (ifseqformula "1") (nodenum "93795"))
         (rule "applyEq_sym" (formula "5") (term "0,0,1,1,1") (ifseqformula "1") (nodenum "93842"))
         (rule "applyEq_sym" (formula "4") (term "1,1,1,1,1") (ifseqformula "1") (nodenum "93928"))
         (rule "applyEq_sym" (formula "4") (term "0,0,1,1,0,1") (ifseqformula "1") (nodenum "94016"))
         (rule "applyEq_sym" (formula "2") (term "0,0,1,0,1") (ifseqformula "1") (nodenum "94079"))
         (rule "applyEq_sym" (formula "13") (term "0,0,1,0,0") (ifseqformula "1") (nodenum "94150"))
         (rule "applyEq_sym" (formula "13") (term "0,0,0,1,1,1,0,0,0") (ifseqformula "1") (nodenum "94198"))
         (rule "applyEq_sym" (formula "13") (term "1,0,1,0,1,1,0,1,0,0,0") (ifseqformula "1") (nodenum "94301"))
         (rule "hide_left" (formula "1") (nodenum "94385"))
         (rule "skolemize" (formula "12") (term "1,0,0,1,0,1") (nodenum "94393"))
         (rule "applyEq_sym" (formula "11") (term "0") (ifseqformula "1") (nodenum "94527"))
         (rule "applyEq_sym" (formula "5") (term "1,0") (ifseqformula "1") (nodenum "94569"))
         (rule "applyEq_sym" (formula "4") (term "1,0") (ifseqformula "1") (nodenum "94631"))
         (rule "applyEq_sym" (formula "13") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1") (nodenum "94685"))
         (rule "hide_left" (formula "1") (nodenum "94763"))
         (rule "skolemize" (formula "12") (term "1,0,0,1,1,1") (nodenum "94771"))
         (rule "applyEq_sym" (formula "11") (term "1") (ifseqformula "1") (nodenum "94905"))
         (rule "applyEq_sym" (formula "5") (term "1,0,1") (ifseqformula "1") (nodenum "94947"))
         (rule "applyEq_sym" (formula "4") (term "1,0,0,1") (ifseqformula "1") (nodenum "95017"))
         (rule "applyEq_sym" (formula "13") (term "1,0,0,1,1,0,1,0,0,0") (ifseqformula "1") (nodenum "95081"))
         (rule "hide_left" (formula "1") (nodenum "95167"))
         (rule "cut" (inst "b=   B * x_l_6
>    B * x_f_6 + 1 / 2 * ((v_f_6) ^ 2 - (v_l_6) ^ 2)
   + (A + B) * (1 / 2 * A * (t_2) ^ 2 + t_2 * v_f_6)") (userinteraction) (nodenum "95193"))
         (branch " CUT:    B * x_l_6
>    B * x_f_6 + 1 / 2 * ((v_f_6) ^ 2 - (v_l_6) ^ 2)
   + (A + B) * (1 / 2 * A * (t_2) ^ 2 + t_2 * v_f_6)"
            (rule "hide_left" (formula "4") (userinteraction) (nodenum "98215"))
            (rule "hide_left" (formula "4") (userinteraction) (nodenum "98302"))
            (rule "imp_left" (formula "2") (nodenum "100213"))
            (branch " Case 1"
               (rule "and_right" (formula "11") (nodenum "100250"))
               (branch " Case 1"
                  (rule "and_right" (formula "9") (nodenum "100302"))
                  (branch " Case 1"
                     (rule "and_right" (formula "11") (nodenum "100352"))
                     (branch " Case 1"
                        (rule "and_right" (formula "11") (nodenum "100398"))
                        (branch " Case 1"
                           (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100457"))
                        )
                        (branch " Case 2"
                           (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100458"))
                        )
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100459"))
                     )
                  )
                  (branch " Case 2"
                     (rule "and_right" (formula "11") (nodenum "100461"))
                     (branch " Case 1"
                        (rule "and_right" (formula "11") (nodenum "100479"))
                        (branch " Case 1"
                           (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100496"))
                        )
                        (branch " Case 2"
                           (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100497"))
                        )
                     )
                     (branch " Case 2"
                        (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100498"))
                     )
                  )
               )
               (branch " Case 2"
                  (rule "and_right" (formula "9") (nodenum "100500"))
                  (branch " Case 1"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100517"))
                  )
                  (branch " Case 2"
                     (builtin "Eliminate Universal Quantifiers" (formula "8") (nodenum "100518"))
                  )
               )
            )
            (branch " Case 2"
               (rule "and_left" (formula "2") (nodenum "100520"))
               (rule "and_left" (formula "2") (nodenum "100558"))
               (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "3") (nodenum "100620"))
               (rule "concrete_and_3" (formula "13") (term "0,0") (nodenum "100653"))
               (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "2") (nodenum "100677"))
               (rule "concrete_and_3" (formula "13") (term "0") (nodenum "100697"))
               (rule "and_right" (formula "13") (nodenum "100717"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "100734"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "11") (nodenum "100735"))
               )
            )
         )
         (branch " CUT: !    B * x_l_6
>    B * x_f_6 + 1 / 2 * ((v_f_6) ^ 2 - (v_l_6) ^ 2)
   + (A + B) * (1 / 2 * A * (t_2) ^ 2 + t_2 * v_f_6)"
            (rule "hide_right" (formula "13") (userinteraction) (nodenum "101830"))
            (rule "imp_left" (formula "1") (nodenum "102686"))
            (branch " Case 1"
               (rule "and_right" (formula "10") (nodenum "102723"))
               (branch " Case 1"
                  (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "102772"))
               )
               (branch " Case 2"
                  (builtin "Eliminate Universal Quantifiers" (formula "12") (nodenum "102773"))
               )
            )
            (branch " Case 2"
               (rule "and_left" (formula "1") (nodenum "102775"))
               (rule "and_left" (formula "1") (nodenum "102813"))
               (builtin "Eliminate Universal Quantifiers" (formula "14") (nodenum "102872"))
            )
         )
      )
   )
)
)

}
