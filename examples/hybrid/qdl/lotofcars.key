/**
 * Models a lot of cars, but simple ones that just follow each other on a straight lane. QdL Hello World.
 * @see "Andre Platzer. Quantified differential dynamic logic for distributed hybrid systems. In Anuj Dawar and Helmut Veith, editors, Computer Science Logic, 19th EACSL Annual Conference, CSL 2010, Brno, Czech Republic, August 23-27, 2010. Proceedings, volume 6247 of LNCS, pages 469-483. Springer, 2010"
 * @author Andre Platzer.
 */
\sorts {
C;    /* cars */
}

\functions {
\nonRigid[Location] R x(C);
\nonRigid[Location] R v(C);
\nonRigid[Location] R a(C);
}

\problem {
(\forall C i. 
\forall C j. (
!(i = j) -> 
(  (x(i) <  x(j) & v(i) <= v(j) & a(i) <= a(j))
 | (x(i) >  x(j) & v(i) >= v(j) & a(i) >= a(j))
  )))
 ->  
  \[ (\forall C i. {x(i)' = v(i), v(i)' = a(i)})*@invariant(\forall C i. 
\forall C j. (
!(i = j) -> 
(  (x(i) <  x(j) & v(i) <= v(j) & a(i) <= a(j))
 | (x(i) >  x(j) & v(i) >= v(j) & a(i) >= a(j))
  ))) \]
      \forall C i. \forall C j. (!(i = j) -> !(x(i) = x(j)))

}
