KeYmaera
--------

KeYmaera is a hybrid verification tool for hybrid systems that combines deductive, real
algebraic, and computer algebraic prover technologies. It is an automated and interactive
theorem prover for a natural specification and verification logic for hybrid systems.
KeYmaera supports differential dynamic logic (dL), which is a real-valued first-order
dynamic logic for hybrid programs, a program notation for hybrid automata. For automating
the verification process, KeYmaera implements a generalized free-variable sequent
calculus and automatic proof strategies that decompose the hybrid system specification
symbolically. To overcome the complexity of real arithmetic, we integrate real quantifier
elimination following an iterative background closure strategy. Our tool is particularly
suitable for verifying parametric hybrid systems and has been used successfully for
verifying collision avoidance in case studies from train control and air traffic
management.

Requirements
------------

- orbital-core.jar
- orbital-ext.jar
- ANTLR 3.4
- JLink from Mathematica
- scala 2.9+ from http://www.scala-lang.org/

Required key-ext-jars libraries
-------------------------------
The directory key-ext-jars/ needs the following content (also see other README* files for KeY)

key-ext-jars/JLink -> /Applications/Mathematica.app/SystemFiles/Links/JLink/
key-ext-jars/antlr.jar   (3.4+)
key-ext-jars/javacc.jar (version 4+)
key-ext-jars/junit.jar (version 4.4+)
key-ext-jars/log4j.jar
key-ext-jars/orbital-core.jar from http://symbolaris.com/orbital/
key-ext-jars/orbital-ext.jar from http://symbolaris.com/orbital/
key-ext-jars/recoderKey.jar
key-ext-jars/scala-library.jar from http://www.scala-lang.org/

In the above list "->" indicates a symlink. Paths may need to be adjusted depending on your operating system and platform.

NOTE that it is good practice when interacting with multiple branches on git to have a directory ../key-ext-jars with all the libraries and then use the following command

> cd keymaera
> ln -s ../key-ext-jars .

Compilation
-----------
> cd keymaera
> make -C system/ realclean all

Even though make is the preferred way, you can also try to compile KeYmaera using ant as follows
> cd keymaera/system
> ANT_OPTS="-Xms512m -Xmx512m" ant all

You can also set the environment variable and used
> export ANT_OPTS="-Xms512m -Xmx512m"
> cd keymaera/system
> ant all

Compilation Issues
------------------
If you see errors during compilation, check for the following issues.
1) make sure all the libraries in the key-ext-jars directory have *exactly* the right versions of the libraries in *exactly the right places*. Especially double check your different versions of antlr*.jar
2) Triple check that antlr is not loaded from other places instead of your key-ext-jars. Remove this and similar files if you experience problems during compilation.
3) For ant make sure that you have set SCALA_HOME as well as JAVA_HOME as environment variables

Startup
-------

Client:

The client side program can be started using the runKeYmaera script. You avoid problems by starting it from the keymaera directory
Example:
> bin/runKeYmaera

Server (optional):
The mathematica server can be started using the runMathematicaServer
script. You avoid problems by starting it from the keymaera directory
Example:
> bin/runMathematicaServer

